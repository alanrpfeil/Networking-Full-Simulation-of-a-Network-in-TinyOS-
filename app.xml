<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="NodeC" loc="14:NodeC.nc">
      <configuration/>
    </component>
    <component qname="MainC" loc="47:/home/alan/tiny/tinyos-main/tos/lib/tossim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:/home/alan/tiny/tinyos-main/tos/lib/tossim/PlatformC.nc">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/lib/tossim/PlatformC.nc">
        <short>&#10; The default simulation platform, which does nothing.</short>
        <long>&#10; The default simulation platform, which does nothing.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/home/alan/tiny/tinyos-main/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="46:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/home/alan/tiny/tinyos-main/tos/lib/tossim/ActiveMessageC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/lib/tossim/ActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimActiveMessageC" loc="44:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimPacketModelC" loc="60:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_csma.h">
        <short>&#10;&#10; Configuration parameters for a CSMA link.</short>
        <long>&#10;&#10; Configuration parameters for a CSMA link.&#10;&#10; @author Philip Levis&#10; @date   Dec 10 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CpmModelC" loc="53:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="57:/home/alan/tiny/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/home/alan/tiny/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @author Morten Tranberg Hansen (added ActiveMessageAddress)&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Node" loc="17:Node.nc">
      <module/>
    </component>
    <component qname="NodeC.GeneralReceive" loc="43(NodeC.GeneralReceive):/home/alan/tiny/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC" loc="3:lib/modules/TransportC.nc">
      <configuration/>
    </component>
    <component qname="TransportP" loc="13:lib/modules/TransportP.nc">
      <module/>
    </component>
    <component qname="LinkStateRoutingC" loc="1:lib/modules/LinkStateRoutingC.nc">
      <configuration/>
    </component>
    <component qname="LinkStateRoutingP" loc="3:lib/modules/LinkStateRoutingP.nc">
      <module/>
    </component>
    <component qname="NeighborDiscoveryC" loc="1:lib/modules/NeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryP" loc="8:lib/modules/NeighborDiscoveryP.nc">
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.Sender" loc="3(NeighborDiscoveryC.Sender):lib/modules/SimpleSendC.nc">
      <instance number="0">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.Sender.SimpleSendP" loc="12(NeighborDiscoveryC.Sender.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.Sender.sendTimer" loc="44(NeighborDiscoveryC.Sender.sendTimer):/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/alan/tiny/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/alan/tiny/tinyos-main/tos/platforms/mica/sim/HilTimerMilliC.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/platforms/mica/sim/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/alan/tiny/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7fd35ca32c20"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd35ca01020"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd35c178070"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="50:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
        <short>&#10; The TOSSIM implementation of the Atm128 Timer0.</short>
        <long>&#10; The TOSSIM implementation of the Atm128 Timer0. It is built from a&#10; timer-specific counter component and a generic compare&#10; component. The counter component has an additional simulation-only&#10; interface to let the compare component know when its state has&#10; changed (e.g., TCNTX was set).&#10;&#10; @date November 22 2005&#10;&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="48:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="1:/home/alan/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/alan/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/alan/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7fd35ca32c20"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd35ca01020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7fd35ca32c20"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd35ca01020"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/alan/tiny/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/alan/tiny/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7fd35ca32c20"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd35ca01020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/alan/tiny/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/alan/tiny/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.Sender.AMSenderC" loc="47(NeighborDiscoveryC.Sender.AMSenderC):/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.Sender.AMSenderC.SenderC" loc="47(NeighborDiscoveryC.Sender.AMSenderC.SenderC):/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.Sender.AMSenderC.SenderC.AMQueueEntryP" loc="43(NeighborDiscoveryC.Sender.AMSenderC.SenderC.AMQueueEntryP):/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/alan/tiny/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.Sender.PoolC" loc="41(NeighborDiscoveryC.Sender.PoolC):/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7fd35c5a06a0"/>
            <typename><typedef-ref name="sendInfo" ref="0x7fd35c59f180"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.Sender.PoolC.PoolP" loc="53(NeighborDiscoveryC.Sender.PoolC.PoolP):/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fd35be926a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.Sender.QueueC" loc="42(NeighborDiscoveryC.Sender.QueueC):/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7fd35c5a06a0"/>
              <typename><typedef-ref name="sendInfo" ref="0x7fd35c59f180"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.Receiver" loc="43(NeighborDiscoveryC.Receiver):/home/alan/tiny/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NeighborDiscoveryC.NeighborList" loc="11(NeighborDiscoveryC.NeighborList):dataStructures/modules/ListC.nc">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref name="neighbor" ref="0x7fd35c59f4b0"/>
            <typename><typedef-ref name="neighbor" ref="0x7fd35c59fcb0"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NeighborDiscoveryC.discoveryTimer" loc="44(NeighborDiscoveryC.discoveryTimer):/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleFloodC" loc="1:lib/modules/SimpleFloodC.nc">
      <configuration/>
    </component>
    <component qname="SimpleFloodP" loc="15:lib/modules/SimpleFloodP.nc">
      <module/>
    </component>
    <component qname="SimpleFloodC.Sender" loc="3(SimpleFloodC.Sender):lib/modules/SimpleSendC.nc">
      <instance number="1">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleFloodC.Sender.SimpleSendP" loc="12(SimpleFloodC.Sender.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="SimpleFloodC.Sender.sendTimer" loc="44(SimpleFloodC.Sender.sendTimer):/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleFloodC.Sender.AMSenderC" loc="47(SimpleFloodC.Sender.AMSenderC):/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleFloodC.Sender.AMSenderC.SenderC" loc="47(SimpleFloodC.Sender.AMSenderC.SenderC):/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleFloodC.Sender.AMSenderC.SenderC.AMQueueEntryP" loc="43(SimpleFloodC.Sender.AMSenderC.SenderC.AMQueueEntryP):/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SimpleFloodC.Sender.PoolC" loc="41(SimpleFloodC.Sender.PoolC):/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7fd35c5a06a0"/>
            <typename><typedef-ref name="sendInfo" ref="0x7fd35c59f180"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleFloodC.Sender.PoolC.PoolP" loc="53(SimpleFloodC.Sender.PoolC.PoolP):/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fd35be926a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SimpleFloodC.Sender.QueueC" loc="42(SimpleFloodC.Sender.QueueC):/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7fd35c5a06a0"/>
              <typename><typedef-ref name="sendInfo" ref="0x7fd35c59f180"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SimpleFloodC.Receiver" loc="43(SimpleFloodC.Receiver):/home/alan/tiny/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SimpleFloodC.KnownList" loc="11(SimpleFloodC.KnownList):dataStructures/modules/ListC.nc">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7fd35c9f4320"/>
            <typename><typedef-ref name="pack" ref="0x7fd35c9f37a0"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkStateRoutingC.Receiver" loc="43(LinkStateRoutingC.Receiver):/home/alan/tiny/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkStateRoutingC.LinkStateInfo" loc="11(LinkStateRoutingC.LinkStateInfo):dataStructures/modules/ListC.nc">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:20" alignment="I:1"><nx_struct-ref name="link_state_pack" ref="0x7fd35c9f3b10"/>
            <typename><typedef-ref name="LSP" ref="0x7fd35c9f1c70"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkStateRoutingC.Confirmed" loc="11(LinkStateRoutingC.Confirmed):dataStructures/modules/ListC.nc">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="RouteEntry" ref="0x7fd35c3606e0"/>
            <typename><typedef-ref name="RouteEntry" ref="0x7fd35c35d240"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkStateRoutingC.Tentative" loc="11(LinkStateRoutingC.Tentative):dataStructures/modules/ListC.nc">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="RouteEntry" ref="0x7fd35c3606e0"/>
            <typename><typedef-ref name="RouteEntry" ref="0x7fd35c35d240"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkStateRoutingC.RoutingTable" loc="10(LinkStateRoutingC.RoutingTable):dataStructures/modules/HashmapC.nc">
      <documentation loc="1:dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HashmapC"/>
        <arguments>
          <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="RouteEntry" ref="0x7fd35c3606e0"/>
            <typename><typedef-ref name="RouteEntry" ref="0x7fd35c35d240"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkStateRoutingC.RoutingTimer" loc="44(LinkStateRoutingC.RoutingTimer):/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.myTimer" loc="44(TransportC.myTimer):/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.Sender" loc="3(TransportC.Sender):lib/modules/SimpleSendC.nc">
      <instance number="2">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.Sender.SimpleSendP" loc="12(TransportC.Sender.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.Sender.sendTimer" loc="44(TransportC.Sender.sendTimer):/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.Sender.AMSenderC" loc="47(TransportC.Sender.AMSenderC):/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.Sender.AMSenderC.SenderC" loc="47(TransportC.Sender.AMSenderC.SenderC):/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.Sender.AMSenderC.SenderC.AMQueueEntryP" loc="43(TransportC.Sender.AMSenderC.SenderC.AMQueueEntryP):/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.Sender.PoolC" loc="41(TransportC.Sender.PoolC):/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7fd35c5a06a0"/>
            <typename><typedef-ref name="sendInfo" ref="0x7fd35c59f180"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.Sender.PoolC.PoolP" loc="53(TransportC.Sender.PoolC.PoolP):/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fd35be926a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.Sender.QueueC" loc="42(TransportC.Sender.QueueC):/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7fd35c5a06a0"/>
              <typename><typedef-ref name="sendInfo" ref="0x7fd35c59f180"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.SocketMap" loc="10(TransportC.SocketMap):dataStructures/modules/HashmapC.nc">
      <documentation loc="1:dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HashmapC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportObjectC" loc="1:lib/modules/TransportObjectC.nc">
      <configuration/>
    </component>
    <component qname="TransportObjectP" loc="12:lib/modules/TransportObjectP.nc">
      <module/>
    </component>
    <component qname="TransportObjectC.SimpleSendC" loc="3(TransportObjectC.SimpleSendC):lib/modules/SimpleSendC.nc">
      <instance number="3">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportObjectC.SimpleSendC.SimpleSendP" loc="12(TransportObjectC.SimpleSendC.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="TransportObjectC.SimpleSendC.sendTimer" loc="44(TransportObjectC.SimpleSendC.sendTimer):/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportObjectC.SimpleSendC.AMSenderC" loc="47(TransportObjectC.SimpleSendC.AMSenderC):/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportObjectC.SimpleSendC.AMSenderC.SenderC" loc="47(TransportObjectC.SimpleSendC.AMSenderC.SenderC):/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportObjectC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP" loc="43(TransportObjectC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP):/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportObjectC.SimpleSendC.PoolC" loc="41(TransportObjectC.SimpleSendC.PoolC):/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7fd35c5a06a0"/>
            <typename><typedef-ref name="sendInfo" ref="0x7fd35c59f180"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportObjectC.SimpleSendC.PoolC.PoolP" loc="53(TransportObjectC.SimpleSendC.PoolC.PoolP):/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fd35be926a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportObjectC.SimpleSendC.QueueC" loc="42(TransportObjectC.SimpleSendC.QueueC):/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7fd35c5a06a0"/>
              <typename><typedef-ref name="sendInfo" ref="0x7fd35c59f180"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportObjectC.myTimer" loc="44(TransportObjectC.myTimer):/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChatC" loc="1:lib/modules/ChatC.nc">
      <configuration/>
    </component>
    <component qname="ChatP" loc="15:lib/modules/ChatP.nc">
      <module/>
    </component>
    <component qname="ChatC.SimpleSendC" loc="3(ChatC.SimpleSendC):lib/modules/SimpleSendC.nc">
      <instance number="4">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ChatC.SimpleSendC.SimpleSendP" loc="12(ChatC.SimpleSendC.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="ChatC.SimpleSendC.sendTimer" loc="44(ChatC.SimpleSendC.sendTimer):/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChatC.SimpleSendC.AMSenderC" loc="47(ChatC.SimpleSendC.AMSenderC):/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ChatC.SimpleSendC.AMSenderC.SenderC" loc="47(ChatC.SimpleSendC.AMSenderC.SenderC):/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ChatC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP" loc="43(ChatC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP):/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ChatC.SimpleSendC.PoolC" loc="41(ChatC.SimpleSendC.PoolC):/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7fd35c5a06a0"/>
            <typename><typedef-ref name="sendInfo" ref="0x7fd35c59f180"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ChatC.SimpleSendC.PoolC.PoolP" loc="53(ChatC.SimpleSendC.PoolC.PoolP):/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fd35be926a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ChatC.SimpleSendC.QueueC" loc="42(ChatC.SimpleSendC.QueueC):/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7fd35c5a06a0"/>
              <typename><typedef-ref name="sendInfo" ref="0x7fd35c59f180"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ChatC.myTimer" loc="44(ChatC.myTimer):/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ChatC.Connections" loc="10(ChatC.Connections):dataStructures/modules/HashmapC.nc">
      <documentation loc="1:dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HashmapC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportObjectC.Connections" loc="10(TransportObjectC.Connections):dataStructures/modules/HashmapC.nc">
      <documentation loc="1:dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HashmapC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC" loc="3(NodeC.SimpleSendC):lib/modules/SimpleSendC.nc">
      <instance number="5">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.SimpleSendP" loc="12(NodeC.SimpleSendC.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.sendTimer" loc="44(NodeC.SimpleSendC.sendTimer):/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC" loc="47(NodeC.SimpleSendC.AMSenderC):/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC.SenderC" loc="47(NodeC.SimpleSendC.AMSenderC.SenderC):/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP" loc="43(NodeC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP):/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.PoolC" loc="41(NodeC.SimpleSendC.PoolC):/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7fd35c5a06a0"/>
            <typename><typedef-ref name="sendInfo" ref="0x7fd35c59f180"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.PoolC.PoolP" loc="53(NodeC.SimpleSendC.PoolC.PoolP):/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fd35be926a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.QueueC" loc="42(NodeC.SimpleSendC.QueueC):/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7fd35c5a06a0"/>
              <typename><typedef-ref name="sendInfo" ref="0x7fd35c59f180"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CommandHandlerC" loc="13:lib/modules/CommandHandlerC.nc">
      <documentation loc="1:lib/modules/CommandHandlerC.nc">
        <short>&#10; </short>
        <long>&#10; @author UCM ANDES Lab&#10; $Author: abeltran2 $&#10; $LastChangedDate: 2014-08-31 16:06:26 -0700 (Sun, 31 Aug 2014) $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CommandHandlerP" loc="13:lib/modules/CommandHandlerP.nc">
      <documentation loc="1:lib/modules/CommandHandlerP.nc">
        <short>&#10; </short>
        <long>&#10; @author UCM ANDES Lab&#10; $Author: abeltran2 $&#10; $LastChangedDate: 2014-08-31 16:06:26 -0700 (Sun, 31 Aug 2014) $&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CommandHandlerC.CommandReceive" loc="43(CommandHandlerC.CommandReceive):/home/alan/tiny/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CommandHandlerC.PoolC" loc="41(CommandHandlerC.PoolC):/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
            <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CommandHandlerC.PoolC.PoolP" loc="53(CommandHandlerC.PoolC.PoolP):/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fd35be926a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CommandHandlerC.QueueC" loc="42(CommandHandlerC.QueueC):/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
              <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.RoutingTimer" loc="44(NodeC.RoutingTimer):/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fd35c178070" loc="23:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd35c178070"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fd35c178380" loc="23:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleSendC" loc="3:lib/modules/SimpleSendC.nc" abstract="">
      <parameters>
        <constant name="channel" ref="0x7fd35c23b600" loc="3:lib/modules/SimpleSendC.nc">
          <component-ref qname="SimpleSendC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleSendP" loc="12:lib/modules/SimpleSendP.nc" abstract="">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/home/alan/tiny/tinyos-main/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7fd35be926a0" loc="41:/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fd35be926a0"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7fd35be92a10" loc="41:/home/alan/tiny/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7fd35be8b980" loc="53:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fd35be8b980"/></type-var>
        </typedef>
        <constant name="size" ref="0x7fd35be8bcc0" loc="53:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd35bfb0770" loc="46:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd35bfb0770"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fd35bfb0aa0" loc="46:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fd35befecb0" loc="45:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/alan/tiny/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fd35c4f27f0" loc="43:/home/alan/tiny/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/alan/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/alan/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd35bfe1020" loc="46:/home/alan/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd35bfe1020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7fd35be5e020" loc="42:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7fd35be5e020"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7fd35be5e3a0" loc="42:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fd35c170ce0" loc="23:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd35c170ce0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fd35c16c020" loc="23:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fd35bf2e1d0" loc="47:/home/alan/tiny/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ListC" loc="11:dataStructures/modules/ListC.nc" abstract="">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fd35be24330" loc="11:dataStructures/modules/ListC.nc">
          <component-ref qname="ListC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35be24330"/></type-var>
        </typedef>
        <constant name="n" ref="0x7fd35be24600" loc="11:dataStructures/modules/ListC.nc">
          <component-ref qname="ListC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fd35bf23af0" loc="43:/home/alan/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HashmapC" loc="10:dataStructures/modules/HashmapC.nc" abstract="">
      <documentation loc="1:dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fd35bd946c0" loc="10:dataStructures/modules/HashmapC.nc">
          <component-ref qname="HashmapC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35bd946c0"/></type-var>
        </typedef>
        <constant name="n" ref="0x7fd35bd94990" loc="10:dataStructures/modules/HashmapC.nc">
          <component-ref qname="HashmapC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fd35bf27020" loc="47:/home/alan/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/alan/tiny/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/alan/tiny/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd35bf60e10" loc="46:/home/alan/tiny/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd35bf60e10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SimpleSend" loc="3:lib/interfaces/SimpleSend.nc">
      <function command="" provided="0" name="send" ref="0x7fd35c595b10" loc="4:lib/interfaces/SimpleSend.nc">
        <interfacedef-ref qname="SimpleSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7fd35c9f4320"/>
              <typename><typedef-ref name="pack" ref="0x7fd35c9f37a0"/></typename>
            </type-tag>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c595530" loc="4:lib/interfaces/SimpleSend.nc">
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7fd35c9f4320"/>
              <typename><typedef-ref name="pack" ref="0x7fd35c9f37a0"/></typename>
            </type-tag>
          </variable>
          <variable name="dest" ref="0x7fd35c595880" loc="4:lib/interfaces/SimpleSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/alan/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/alan/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fd35c882ab0" loc="113:/home/alan/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/alan/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd35c882830" loc="113:/home/alan/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fd35c880020" loc="138:/home/alan/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/alan/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd35c881d30" loc="138:/home/alan/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd35c885cb0" loc="104:/home/alan/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/alan/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd35c881350" loc="130:/home/alan/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/alan/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Hashmap" loc="10:dataStructures/interfaces/Hashmap.nc">
      <documentation loc="1:dataStructures/interfaces/Hashmap.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This is an interface for Hashmaps.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This is an interface for Hashmaps.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fd35c4d6ae0" loc="10:dataStructures/interfaces/Hashmap.nc">
          <interfacedef-ref qname="Hashmap"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c4d6ae0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd35c4d2ba0" loc="13:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c4d6ae0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7fd35c4d2920" loc="13:dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fd35c4d1c20" loc="15:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7fd35c4d22a0" loc="12:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7fd35c4d2020" loc="12:dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insert" ref="0x7fd35c4d3910" loc="11:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c4d6ae0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7fd35c4d3370" loc="11:dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </variable>
          <variable name="input" ref="0x7fd35c4d3680" loc="11:dataStructures/interfaces/Hashmap.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c4d6ae0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getKeys" ref="0x7fd35c4cfab0" loc="17:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="contains" ref="0x7fd35c4d1530" loc="14:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7fd35c4d12b0" loc="14:dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fd35c4cf350" loc="16:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/alan/tiny/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/alan/tiny/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fd35c9334a0" loc="60:/home/alan/tiny/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/alan/tiny/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/home/alan/tiny/tinyos-main/tos/interfaces/Pool.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fd35c22aad0" loc="50:/home/alan/tiny/tinyos-main/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c22aad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd35c224d40" loc="97:/home/alan/tiny/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="91:/home/alan/tiny/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c22aad0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7fd35c2264b0" loc="80:/home/alan/tiny/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="74:/home/alan/tiny/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7fd35c2273b0" loc="61:/home/alan/tiny/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="52:/home/alan/tiny/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7fd35c224020" loc="89:/home/alan/tiny/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="82:/home/alan/tiny/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c22aad0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7fd35c226c70" loc="89:/home/alan/tiny/tinyos-main/tos/interfaces/Pool.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c22aad0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fd35c227c00" loc="72:/home/alan/tiny/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="63:/home/alan/tiny/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/alan/tiny/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fd35cb15020" loc="67:/home/alan/tiny/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/alan/tiny/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fd35cb15870" loc="75:/home/alan/tiny/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/alan/tiny/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7fd35c142e40" loc="38:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7fd35c1406b0" loc="44:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7fd35c1426d0" loc="32:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7fd35c13f020" loc="50:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7fd35c143420" loc="21:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1b6ad0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7fd35c1b5020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7fd35c143e50" loc="27:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1b6ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7fd35c1b5020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fd35c143bd0" loc="27:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1b6ad0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7fd35c1b5020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacket" loc="44:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacket.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="strength" ref="0x7fd35c846490" loc="45:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacket.nc">
        <interfacedef-ref qname="TossimPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fd35d779950"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c846210" loc="45:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd35c875b80" loc="65:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c875900" loc="65:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fd35c86dc30" loc="78:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c86d9b0" loc="78:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd35c868020" loc="126:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c86a9d0" loc="126:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd35c86ad00" loc="126:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd35c86a0e0" loc="106:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fd35c86c120" loc="94:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c86bb30" loc="94:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd35c86be60" loc="94:/home/alan/tiny/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/alan/tiny/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/alan/tiny/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd35c1c9c50" loc="53:/home/alan/tiny/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd35c1c9c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd35c1c55a0" loc="61:/home/alan/tiny/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/alan/tiny/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fd35c237c90" loc="43:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c237c90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7fd35c231490" loc="80:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c237c90"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7fd35c22f020" loc="97:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c237c90"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7fd35c230c80" loc="97:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c237c90"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7fd35d77ec30"/>
              <value-structured>
                <type-tag size="I:4" alignment="I:4"><attribute-ref name="one" ref="0x7fd35d77ec30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7fd35c22e020" loc="108:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c237c90"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fd35c22fd10" loc="108:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7fd35c234d40" loc="57:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7fd35c232ce0" loc="72:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fd35c2300e0" loc="88:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c237c90"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7fd35c2345d0" loc="50:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7fd35c2324e0" loc="65:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/alan/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd35c87d2c0" loc="80:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd35ca7e020"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd35c884840" loc="80:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd35ca7e020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd35c884bc0" loc="80:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd35c87d020" loc="80:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd35c879970" loc="135:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c879370" loc="135:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd35c8796a0" loc="135:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd35c878a60" loc="123:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd35c87c630" loc="96:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c87c3b0" loc="96:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd35c87bb80" loc="110:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c87b5a0" loc="110:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd35c87b8f0" loc="110:/home/alan/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/alan/tiny/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fd35c6a5940" loc="49:/home/alan/tiny/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd35c6a5940"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fd35c6a2270" loc="55:/home/alan/tiny/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/alan/tiny/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fd35c6a0020" loc="63:/home/alan/tiny/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/alan/tiny/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd35c6a5940"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fd35c6a29f0" loc="63:/home/alan/tiny/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fd35c6a2d10" loc="63:/home/alan/tiny/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fd35c6a5940"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkStateRouting" loc="1:lib/interfaces/LinkStateRouting.nc">
      <function command="" provided="0" name="print" ref="0x7fd35c58f8a0" loc="3:lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="run" ref="0x7fd35c58f1f0" loc="2:lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNextHopTo" ref="0x7fd35c58e2a0" loc="4:lib/interfaces/LinkStateRouting.nc">
        <interfacedef-ref qname="LinkStateRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7fd35c58e020" loc="4:lib/interfaces/LinkStateRouting.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/alan/tiny/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fd35c4c9190" loc="52:/home/alan/tiny/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/alan/tiny/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fd35c4cc920" loc="46:/home/alan/tiny/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/alan/tiny/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7fd35c1535a0" loc="45:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1ba020"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fd35c1ba440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fd35c151ab0" loc="53:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1b0d30"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fd35c1ae180"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fd35c152830" loc="49:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1b24d0"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fd35c1b28f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fd35c1512a0" loc="50:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1b24d0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fd35c1b28f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fd35c151020" loc="50:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1b24d0"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fd35c1b28f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fd35c14f520" loc="54:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1b0d30"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fd35c1ae180"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fd35c14f2a0" loc="54:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1b0d30"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fd35c1ae180"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fd35c152020" loc="46:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1ba020"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fd35c1ba440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd35c153d70" loc="46:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1ba020"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fd35c1ba440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd35bf1a030" loc="75:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35bf1ea40" loc="75:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd35bf1ed70" loc="75:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd35bf16660" loc="125:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35bf16060" loc="125:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd35bf16390" loc="125:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd35bf15790" loc="112:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd35bf19350" loc="89:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35bf190d0" loc="89:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd35bf18870" loc="100:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35bf18290" loc="100:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd35bf185e0" loc="100:/home/alan/tiny/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/alan/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fd35c5beb30" loc="50:/home/alan/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/alan/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd35ca7e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fd35c5bcab0" loc="60:/home/alan/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/alan/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fd35c5bc350" loc="55:/home/alan/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/alan/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd35ca80bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fd35c5be2f0" loc="45:/home/alan/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/alan/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd35ca80bd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd35ca7e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fd35c5c1cb0" loc="45:/home/alan/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd35ca80bd0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd35c5be060" loc="45:/home/alan/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd35ca7e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/alan/tiny/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fd35bf42280" loc="53:/home/alan/tiny/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd35bf42280"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fd35bf42dc0" loc="64:/home/alan/tiny/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/alan/tiny/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd35bf42280"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fd35bf42b40" loc="64:/home/alan/tiny/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd35bf42280"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd35c18d8c0" loc="56:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd35c18d8c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd35c18db00" loc="56:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c18db00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd35c186800" loc="109:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c18db00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd35c1897e0" loc="78:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fd35c187e10" loc="103:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c18db00"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c18db00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd35c187840" loc="103:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c18db00"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fd35c187b80" loc="103:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c18db00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd35c187020" loc="88:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fd35c185020" loc="116:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c18db00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd35c18a680" loc="66:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c18db00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd35c18a400" loc="66:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c18db00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd35c189020" loc="73:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/alan/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/alan/tiny/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd35c9358e0" loc="62:/home/alan/tiny/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/alan/tiny/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fd35c155d50" loc="41:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c155d50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7fd35c1497a0" loc="74:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd35c14c860" loc="58:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd35c14d6c0" loc="48:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c155d50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fd35c14a020" loc="62:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fd35c148020" loc="80:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd35c14c0b0" loc="54:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c155d50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd35c14de00" loc="54:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c155d50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd35c14a790" loc="65:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd35c149020" loc="68:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Transport" loc="18:lib/interfaces/Transport.nc">
      <documentation loc="4:lib/interfaces/Transport.nc">
        <short>&#10; The Transport interface handles sockets and is a layer of abstraction&#10; above TCP.</short>
        <long>&#10; The Transport interface handles sockets and is a layer of abstraction&#10; above TCP. This will be used by the application layer to set up TCP&#10; packets. Internally the system will be handling syn/ack/data/fin&#10; Transport packets.&#10;&#10; @project&#10;   Transmission Control Protocol&#10; @author&#10;      Alex Beltran - abeltran2@ucmerced.edu&#10; @date&#10;   2013/11/12&#10;</long>
      </documentation>
      <function command="" provided="0" name="listen" ref="0x7fd35c5732a0" loc="146:lib/interfaces/Transport.nc">
        <documentation loc="137:lib/interfaces/Transport.nc">
          <short>&#10; Listen to the socket and wait for a connection.</short>
          <long>&#10; Listen to the socket and wait for a connection.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are hard closing. &#10; @side Server&#10; @return error_t - returns SUCCESS if you are able change the state &#10;   to listen else FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7fd35c573020" loc="146:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveMessage" ref="0x7fd35c56e2a0" loc="156:lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7fd35c56e020" loc="156:lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7fd35c57ad90" loc="82:lib/interfaces/Transport.nc">
        <documentation loc="74:lib/interfaces/Transport.nc">
          <short>&#10; This will pass the packet so you can handle it internally.</short>
          <long>&#10; This will pass the packet so you can handle it internally. &#10; @param&#10;    pack *package: the TCP packet that you are handling.&#10; @Side Client/Server &#10; @return uint16_t - return SUCCESS if you are able to handle this&#10;    packet or FAIL if there are errors.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7fd35c9f4320"/>
                <typename><typedef-ref name="pack" ref="0x7fd35c9f37a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="package" ref="0x7fd35c57ab10" loc="82:lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7fd35c9f4320"/>
                <typename><typedef-ref name="pack" ref="0x7fd35c9f37a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="release" ref="0x7fd35c575680" loc="135:lib/interfaces/Transport.nc">
        <documentation loc="126:lib/interfaces/Transport.nc">
          <short>&#10; A hard close, which is not graceful.</short>
          <long>&#10; A hard close, which is not graceful. This portion is optional.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are hard closing. &#10; @side Client/Server&#10; @return socket_t - returns SUCCESS if you are able to attempt&#10;    a closure with the fd passed, else return FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7fd35c575400" loc="135:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getServersNode" ref="0x7fd35c570790" loc="154:lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7fd35c570510" loc="154:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fd35c577050" loc="99:lib/interfaces/Transport.nc">
        <documentation loc="84:lib/interfaces/Transport.nc">
          <short>&#10; Read from the socket and write this data to the buffer.</short>
          <long>&#10; Read from the socket and write this data to the buffer. This data&#10; is obtained from your TCP implimentation.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that is attempting a read.&#10; @param&#10;    uint8_t *buff: the buffer that is being written.&#10; @param&#10;    uint16_t bufflen: the amount of data that can be written to the&#10;       buffer.&#10; @Side For your project, only server side. This could be both though.&#10; @return uint16_t - return the amount of data you are able to read&#10;    from the pass buffer. This may be shorter then bufflen&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7fd35c578690" loc="99:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
          </variable>
          <variable name="buff" ref="0x7fd35c578a10" loc="99:lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bufflen" ref="0x7fd35c578d80" loc="99:lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x7fd35c57c2b0" loc="41:lib/interfaces/Transport.nc">
        <documentation loc="29:lib/interfaces/Transport.nc">
          <short>&#10; Bind a socket with an address.</short>
          <long>&#10; Bind a socket with an address.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       you are binding.&#10; @param&#10;    socket_addr_t *addr: the source port and source address that&#10;       you are biding to the socket, fd.&#10; @Side Client/Server&#10; @return error_t - SUCCESS if you were able to bind this socket, FAIL&#10;       if you were unable to bind.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x7fd35c588220"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x7fd35c588af0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7fd35c57dbd0" loc="41:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd35c57c020" loc="41:lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x7fd35c588220"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x7fd35c588af0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="socket" ref="0x7fd35c57d3b0" loc="27:lib/interfaces/Transport.nc">
        <documentation loc="19:lib/interfaces/Transport.nc">
          <short>&#10; Get a socket if there is one available.</short>
          <long>&#10; Get a socket if there is one available.&#10; @Side Client/Server&#10; @return&#10;    socket_t - return a socket file descriptor which is a number&#10;    associated with a socket. If you are unable to allocated&#10;    a socket then return a NULL socket_t.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getServerNode" ref="0x7fd35c571c90" loc="152:lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7fd35c571a10" loc="152:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="connect" ref="0x7fd35c576050" loc="113:lib/interfaces/Transport.nc">
        <documentation loc="101:lib/interfaces/Transport.nc">
          <short>&#10; Attempts a connection to an address.</short>
          <long>&#10; Attempts a connection to an address.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are attempting a connection with. &#10; @param&#10;    socket_addr_t *addr: the destination address and port where&#10;       you will atempt a connection.&#10; @side Client&#10; @return socket_t - returns SUCCESS if you are able to attempt&#10;    a connection with the fd passed, else return FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x7fd35c588220"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x7fd35c588af0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7fd35c5779e0" loc="113:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd35c577da0" loc="113:lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x7fd35c588220"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x7fd35c588af0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getServerRcvdBuffer" ref="0x7fd35c572620" loc="148:lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7fd35c573b40" loc="148:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="buff" ref="0x7fd35c572020" loc="148:lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="buffLen" ref="0x7fd35c572380" loc="148:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="accept" ref="0x7fd35c57cdf0" loc="55:lib/interfaces/Transport.nc">
        <documentation loc="43:lib/interfaces/Transport.nc">
          <short>&#10; Checks to see if there are socket connections to connect to and&#10; if there is one, connect to it.</short>
          <long>&#10; Checks to see if there are socket connections to connect to and&#10; if there is one, connect to it.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that is attempting an accept. remember, only do on listen. &#10; @side Server&#10; @return socket_t - returns a new socket if the connection is&#10;    accepted. this socket is a copy of the server socket but with&#10;    a destination associated with the destination address and port.&#10;    if not return a null socket.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7fd35c57cb70" loc="55:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd35c57a140" loc="72:lib/interfaces/Transport.nc">
        <documentation loc="57:lib/interfaces/Transport.nc">
          <short>&#10; Write to the socket from a buffer.</short>
          <long>&#10; Write to the socket from a buffer. This data will eventually be&#10; transmitted through your TCP implimentation.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that is attempting a write.&#10; @param&#10;    uint8_t *buff: the buffer data that you are going to wrte from.&#10; @param&#10;    uint16_t bufflen: The amount of data that you are trying to&#10;       submit.&#10; @Side For your project, only client side. This could be both though.&#10; @return uint16_t - return the amount of data you are able to write&#10;    from the pass buffer. This may be shorter then bufflen&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7fd35c57b790" loc="72:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
          </variable>
          <variable name="buff" ref="0x7fd35c57bb10" loc="72:lib/interfaces/Transport.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bufflen" ref="0x7fd35c57be80" loc="72:lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x7fd35c576ba0" loc="124:lib/interfaces/Transport.nc">
        <documentation loc="115:lib/interfaces/Transport.nc">
          <short>&#10; Closes the socket.</short>
          <long>&#10; Closes the socket.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are closing. &#10; @side Client/Server&#10; @return socket_t - returns SUCCESS if you are able to attempt&#10;    a closure with the fd passed, else return FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7fd35c576920" loc="124:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd35c56e950" loc="158:lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendWhisper" ref="0x7fd35c5712f0" loc="150:lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x7fd35c572cd0" loc="150:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="flag" ref="0x7fd35c571060" loc="150:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/alan/tiny/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fd35c873020" loc="78:/home/alan/tiny/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/alan/tiny/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
              <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c874530" loc="78:/home/alan/tiny/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fd35c874880" loc="78:/home/alan/tiny/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd35c874bb0" loc="78:/home/alan/tiny/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="List" loc="11:dataStructures/interfaces/List.nc">
      <documentation loc="1:dataStructures/interfaces/List.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7fd35c358070" loc="11:dataStructures/interfaces/List.nc">
          <interfacedef-ref qname="List"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c358070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="size" ref="0x7fd35c354e60" loc="24:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="replace" ref="0x7fd35c350600" loc="28:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c358070"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x7fd35c350060" loc="28:dataStructures/interfaces/List.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="input" ref="0x7fd35c350370" loc="28:dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c358070"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="front" ref="0x7fd35c355970" loc="21:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c358070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fd35c354760" loc="23:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd35c352020" loc="26:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c358070"/></type-var>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x7fd35c353c70" loc="26:dataStructures/interfaces/List.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7fd35c3535b0" loc="25:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x7fd35c352960" loc="27:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x7fd35c3526e0" loc="27:dataStructures/interfaces/List.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pushback" ref="0x7fd35c358b40" loc="17:dataStructures/interfaces/List.nc">
        <documentation loc="12:dataStructures/interfaces/List.nc">
          <short>&#10; Put value into the end of the list.</short>
          <long>&#10; Put value into the end of the list.&#10;&#10; @param input - data to be inserted&#10;</long>
        </documentation>
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c358070"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x7fd35c3588c0" loc="17:dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c358070"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="popfront" ref="0x7fd35c3552b0" loc="20:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c358070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="popback" ref="0x7fd35c357bb0" loc="19:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c358070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="pushfront" ref="0x7fd35c3574e0" loc="18:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c358070"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x7fd35c357260" loc="18:dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c358070"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="back" ref="0x7fd35c354070" loc="22:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35c358070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x7fd35c8dd480" loc="44:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x7fd35c8dd200" loc="44:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x7fd35c8da450" loc="47:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x7fd35d787a40"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x7fd35c8dcab0" loc="47:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x7fd35c8dce10" loc="47:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-pointer size="I:8" alignment="I:8">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd35c8da1b0" loc="47:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
                <typename><typedef-ref name="size_t" ref="0x7fd35d787a40"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x7fd35c8d9270" loc="49:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7fd35c8dab00" loc="48:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x7fd35c8e0ab0" loc="43:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRadioChannel" ref="0x7fd35c8d9ca0" loc="51:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newRadioChannel" ref="0x7fd35c8d9a20" loc="51:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fd35c8dc390" loc="46:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRadioChannel" ref="0x7fd35c8d84c0" loc="52:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x7fd35c8ddc30" loc="45:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="1:lib/interfaces/NeighborDiscovery.nc">
      <function command="" provided="0" name="getNumNeighbors" ref="0x7fd35c592350" loc="4:lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighbors" ref="0x7fd35c592ad0" loc="5:lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="print" ref="0x7fd35c593b90" loc="3:lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="run" ref="0x7fd35c5934e0" loc="2:lib/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/alan/tiny/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/alan/tiny/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd35c180410" loc="57:/home/alan/tiny/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd35c180410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd35c180650" loc="57:/home/alan/tiny/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c180650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd35c17f020" loc="64:/home/alan/tiny/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/alan/tiny/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd35c180650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd35c17d120" loc="76:/home/alan/tiny/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/alan/tiny/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd35c17f8a0" loc="71:/home/alan/tiny/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/alan/tiny/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd35c17d880" loc="82:/home/alan/tiny/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/alan/tiny/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Chat" loc="4:lib/interfaces/Chat.nc">
      <function command="" provided="0" name="whisperMsg" ref="0x7fd35c55d030" loc="7:lib/interfaces/Chat.nc">
        <interfacedef-ref qname="Chat"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="message" ref="0x7fd35c55f9c0" loc="7:lib/interfaces/Chat.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="username" ref="0x7fd35c55fd70" loc="7:lib/interfaces/Chat.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="printUsers" ref="0x7fd35c55d710" loc="8:lib/interfaces/Chat.nc">
        <interfacedef-ref qname="Chat"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="broadcastMsg" ref="0x7fd35c55f2a0" loc="6:lib/interfaces/Chat.nc">
        <interfacedef-ref qname="Chat"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="message" ref="0x7fd35c55f020" loc="6:lib/interfaces/Chat.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startServer" ref="0x7fd35c55ddf0" loc="9:lib/interfaces/Chat.nc">
        <interfacedef-ref qname="Chat"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startChat" ref="0x7fd35c560780" loc="5:lib/interfaces/Chat.nc">
        <interfacedef-ref qname="Chat"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fd35c56c6d0" loc="5:lib/interfaces/Chat.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="srcPort" ref="0x7fd35c56ca30" loc="5:lib/interfaces/Chat.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x7fd35c56cda0" loc="5:lib/interfaces/Chat.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd35c560110" loc="5:lib/interfaces/Chat.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </variable>
          <variable name="username" ref="0x7fd35c5604c0" loc="5:lib/interfaces/Chat.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/alan/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fd35c854770" loc="59:/home/alan/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/alan/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c8544f0" loc="59:/home/alan/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fd35c852940" loc="71:/home/alan/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/alan/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c8526c0" loc="71:/home/alan/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fd35c850ab0" loc="85:/home/alan/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/alan/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c850830" loc="85:/home/alan/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="putOnAirTo" ref="0x7fd35c7c9020" loc="48:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x7fd35cd9c1c0"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fd35c7ceab0" loc="48:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x7fd35c7cee50" loc="49:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fd35c7cb1c0" loc="50:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0x7fd35c7cb560" loc="51:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x7fd35cd9c1c0"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x7fd35c7cb870" loc="52:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0x7fd35c7cbbc0" loc="53:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x7fd35c7c7c00" loc="60:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c7c7980" loc="60:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0x7fd35c7c80e0" loc="56:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0x7fd35c7c8830" loc="57:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0x7fd35c7c9940" loc="55:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7fd35c7c96c0" loc="55:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0x7fd35c7c72a0" loc="59:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c7c7020" loc="59:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x7fd35c7c55f0" loc="61:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c7c5370" loc="61:/home/alan/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="45:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd35c8432c0" loc="57:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="47:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7fd35c848810" loc="57:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x7fd35c848b90" loc="57:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd35c843020" loc="57:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x7fd35c840aa0" loc="85:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="79:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c840820" loc="85:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd35c841020" loc="69:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="59:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c843c20" loc="69:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd35c840020" loc="76:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="71:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c841920" loc="76:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd35c841c70" loc="76:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x7fd35c83f550" loc="87:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd35c83f2d0" loc="87:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fd35c161430" loc="55:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd35c161430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7fd35c15a020" loc="98:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fd35c15c020" loc="87:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd35c161d60" loc="61:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd35c161430"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7fd35c15aa00" loc="104:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fd35c15a780" loc="104:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7fd35c159270" loc="110:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fd35c15e7b0" loc="75:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd35c15e020" loc="70:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fd35c15c7e0" loc="93:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd35c160760" loc="67:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd35c161430"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd35c1604e0" loc="67:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd35c161430"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd35c15d020" loc="78:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd35c15d770" loc="81:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fd35c8599f0" loc="177:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd35ca80bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd35c859770" loc="177:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fd35c864600" loc="88:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd35ca7e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd35c864380" loc="88:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fd35c8729f0" loc="68:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd35ca7e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fd35c865520" loc="78:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd35ca7e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd35c8652a0" loc="78:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fd35c85f020" loc="121:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd35ca7e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd35c860950" loc="121:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd35c860ca0" loc="121:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd35ca7e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fd35c862a30" loc="103:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd35ca7e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd35c862450" loc="103:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd35c8627a0" loc="103:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd35ca7e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fd35c85d4a0" loc="147:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd35c85d220" loc="147:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fd35c85c850" loc="162:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd35c85c2a0" loc="162:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fd35c85c5c0" loc="162:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fd35c85e2a0" loc="136:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd35c85e020" loc="136:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fd35c857020" loc="187:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd35ca80bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd35c8588c0" loc="187:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
                <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fd35c858c10" loc="187:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd35ca80bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fd35c857e40" loc="195:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/alan/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd35ca80bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TransportObject" loc="1:lib/interfaces/TransportObject.nc">
      <function command="" provided="0" name="startClient" ref="0x7fd35c56ab60" loc="4:lib/interfaces/TransportObject.nc">
        <interfacedef-ref qname="TransportObject"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fd35c56be30" loc="4:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="srcPort" ref="0x7fd35c56a1f0" loc="4:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x7fd35c56a560" loc="4:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd35c56a8b0" loc="4:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="whisperMsg" ref="0x7fd35c566390" loc="6:lib/interfaces/TransportObject.nc">
        <interfacedef-ref qname="TransportObject"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fd35c5672a0" loc="6:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7fd35c5675e0" loc="6:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="srcPort" ref="0x7fd35c567940" loc="6:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x7fd35c567cb0" loc="6:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fd35c5660d0" loc="6:lib/interfaces/TransportObject.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copyChatRoomUsers" ref="0x7fd35c563cd0" loc="8:lib/interfaces/TransportObject.nc">
        <interfacedef-ref qname="TransportObject"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fd35c565bf0" loc="8:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="username" ref="0x7fd35c563020" loc="8:lib/interfaces/TransportObject.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="used" ref="0x7fd35c563340" loc="8:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
            </type-int>
          </variable>
          <variable name="srcPort" ref="0x7fd35c5636a0" loc="8:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x7fd35c563a10" loc="8:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startServer" ref="0x7fd35c56b770" loc="3:lib/interfaces/TransportObject.nc">
        <interfacedef-ref qname="TransportObject"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="port" ref="0x7fd35c56b4f0" loc="3:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="closeClient" ref="0x7fd35c569bc0" loc="5:lib/interfaces/TransportObject.nc">
        <interfacedef-ref qname="TransportObject"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcPort" ref="0x7fd35c569270" loc="5:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x7fd35c5695e0" loc="5:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x7fd35c569920" loc="5:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copyRcvdBuffer" ref="0x7fd35c5654a0" loc="7:lib/interfaces/TransportObject.nc">
        <interfacedef-ref qname="TransportObject"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="serverNode" ref="0x7fd35c566b00" loc="7:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="buff" ref="0x7fd35c566e80" loc="7:lib/interfaces/TransportObject.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="buffLen" ref="0x7fd35c565200" loc="7:lib/interfaces/TransportObject.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/alan/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/alan/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd35ca91cc0" loc="57:/home/alan/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/alan/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fd35d49eca0" loc="72:/home/alan/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/alan/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fd35d49e490" loc="65:/home/alan/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/alan/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CommandHandler" loc="1:lib/interfaces/CommandHandler.nc">
      <function event="" provided="0" name="unicast" ref="0x7fd35c54f020" loc="13:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fd35c551250" loc="13:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="srcPort" ref="0x7fd35c5515b0" loc="13:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x7fd35c551920" loc="13:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fd35c551cc0" loc="13:lib/interfaces/CommandHandler.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="printLinkState" ref="0x7fd35c558270" loc="6:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setClientClose" ref="0x7fd35c555800" loc="10:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fd35c556e50" loc="10:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="srcPort" ref="0x7fd35c5551f0" loc="10:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x7fd35c555560" loc="10:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="printNeighbors" ref="0x7fd35c55a3e0" loc="4:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setTestClient" ref="0x7fd35c556770" loc="9:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fd35c557a30" loc="9:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="srcPort" ref="0x7fd35c557d90" loc="9:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x7fd35c556170" loc="9:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd35c5564c0" loc="9:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setAppServer" ref="0x7fd35c54fde0" loc="15:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printDistanceVector" ref="0x7fd35c5589a0" loc="7:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setChat" ref="0x7fd35c552150" loc="11:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fd35c553020" loc="11:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="srcPort" ref="0x7fd35c553380" loc="11:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="destPort" ref="0x7fd35c5536f0" loc="11:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
          <variable name="transfer" ref="0x7fd35c553a70" loc="11:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </variable>
          <variable name="username" ref="0x7fd35c553e20" loc="11:lib/interfaces/CommandHandler.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setTestServer" ref="0x7fd35c557350" loc="8:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="port" ref="0x7fd35c5570d0" loc="8:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="userList" ref="0x7fd35c54f6f0" loc="14:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startBroadcast" ref="0x7fd35c552b10" loc="12:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="message" ref="0x7fd35c552890" loc="12:lib/interfaces/CommandHandler.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="printRouteTable" ref="0x7fd35c55aaf0" loc="5:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setAppClient" ref="0x7fd35c54e680" loc="16:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="ping" ref="0x7fd35c562ca0" loc="3:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="destination" ref="0x7fd35c562670" loc="3:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0x7fd35c562a10" loc="3:lib/interfaces/CommandHandler.nc">
            <type-pointer size="I:8" alignment="I:8">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd35c55bd00" loc="53:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd35c55bd00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd35c5459b0" loc="136:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd35c5482d0" loc="83:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fd35c5460c0" loc="114:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd35c547a80" loc="114:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd35c547dc0" loc="114:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fd35c5472d0" loc="98:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fd35c544a10" loc="151:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fd35c544190" loc="144:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd35c548ab0" loc="92:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fd35c54b890" loc="64:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd35c54b610" loc="64:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fd35c545050" loc="129:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd35c546a60" loc="129:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd35c546da0" loc="129:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fd35c54a390" loc="73:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd35c54a110" loc="73:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd35c54ab90" loc="78:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <union loc="312:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c18e110" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7fd35c18e320" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7fd35c18e3d0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd35c190810"/></type-tag>
      </field>
    </union>
    <struct loc="64:/usr/include/x86_64-linux-gnu/sys/select.h" ref="0x7fd35d4b18f0" defined="" size="I:128" alignment="I:8">
      <field name="__fds_bits" ref="0x7fd35d4b1b00" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-int cname="long" size="I:8" alignment="I:8">
            <typename><typedef-ref name="__fd_mask" ref="0x7fd35d4b3c70"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="47:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x7fd35cd676c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="44:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.h" ref="0x7fd35ca01c10" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x7fd35ca01e20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <attribute name="bnd" loc="9:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x7fd35d782170" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x7fd35d782600" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x7fd35d7826b0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <nx_struct name="socket_addr_t" loc="40:lib/interfaces/../../includes/socket.h" ref="0x7fd35c588220" defined="" size="I:3" alignment="I:1">
      <field name="port" ref="0x7fd35c5888e0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_socket_port_t" ref="0x7fd35c589a70"/></typename>
        </type-int>
      </field>
      <field name="addr" ref="0x7fd35c588990" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7fd35d559740"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="82:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1be800" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="26:/home/alan/tiny/tinyos-main/tos/types/AM.h" ref="0x7fd35ca7e850" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="94:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h" ref="0x7fd35ca78e90" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="12:includes/packet.h" ref="0x7fd35c9f5210" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="21:/usr/include/_G_config.h" ref="0x7fd35ce40eb0" defined="" size="I:16" alignment="I:8">
      <field name="__pos" ref="0x7fd35ce3f0e0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off_t" ref="0x7fd35d4f7560"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x7fd35ce3f190" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7fd35ce40350"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x7fd35ce40770"/></typename>
        </type-tag>
      </field>
    </struct>
    <struct name="itimerspec" loc="161:/usr/include/time.h" ref="0x7fd35cb87df0" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x7fd35cb86530" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x7fd35d4b4460"/></type-tag>
      </field>
      <field name="it_value" ref="0x7fd35cb865e0" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timespec" ref="0x7fd35d4b4460"/></type-tag>
      </field>
    </struct>
    <nx_struct name="tossim_metadata" loc="24:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0x7fd35ca7ba10" defined="" size="I:7" alignment="I:1">
      <field name="strength" ref="0x7fd35ca798b0" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x7fd35d55c2d0"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x7fd35ca79960" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="tx_power" ref="0x7fd35ca79a10" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="crc" ref="0x7fd35ca79ac0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x7fd35ca79b70" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0x7fd35ca79c20" bit-offset="I:40" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7fd35d559740"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <nx_struct name="cc2420_metadata_t" loc="94:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c917990" defined="" size="I:12" alignment="I:1">
      <field name="rssi" ref="0x7fd35c916c20" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x7fd35c916cd0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="tx_power" ref="0x7fd35c916d80" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="crc" ref="0x7fd35c916e30" bit-offset="I:24" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x7fd35d55c2d0"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x7fd35c916ee0" bit-offset="I:32" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x7fd35d55c2d0"/></typename>
        </type-int>
      </field>
      <field name="timesync" ref="0x7fd35c915020" bit-offset="I:40" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x7fd35d55c2d0"/></typename>
        </type-int>
      </field>
      <field name="timestamp" ref="0x7fd35c9150d0" bit-offset="I:48" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x7fd35d559e60"/></typename>
        </type-int>
      </field>
      <field name="rxInterval" ref="0x7fd35c915180" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7fd35d559740"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="46:/usr/include/ctype.h" ref="0x7fd35ce745d0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="gain_entry" loc="53:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_gain.h" ref="0x7fd35cc01510" defined="" size="I:24" alignment="I:8">
      <field name="mote" ref="0x7fd35cc01d20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x7fd35cc01dd0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0x7fd35cc01e80" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x7fd35cc01510"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="48:includes/packet.h" ref="0x7fd35c9edd50" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="8:includes/sendInfo.h" ref="0x7fd35c5a0020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_gain_noise" loc="3:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_gain.c" ref="0x7fd35cbf59a0" defined="" size="I:16" alignment="I:8">
      <field name="mean" ref="0x7fd35cbf4020" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x7fd35cbf40d0" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct loc="82:/usr/include/wchar.h" ref="0x7fd35ce40350" defined="" size="I:8" alignment="I:4">
      <field name="__count" ref="0x7fd35ce40560" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__value" ref="0x7fd35ce40610" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><union-ref ref="0x7fd35ce41da0"/></type-tag>
      </field>
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0x7fd35d789a20" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="30:/usr/include/x86_64-linux-gnu/bits/time.h" ref="0x7fd35d4b4e20" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x7fd35d4b34a0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__time_t" ref="0x7fd35d4f4960"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x7fd35d4b3550" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__suseconds_t" ref="0x7fd35d4f3160"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="4:lib/interfaces/../../includes/socket.h" ref="0x7fd35c594290" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="nonnull" loc="8:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x7fd35d783660" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x7fd35d783ad0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <nx_struct name="CommandMsg" loc="16:includes/CommandMsg.h" ref="0x7fd35c9fd020" defined="" size="I:28" alignment="I:1">
      <field name="dest" ref="0x7fd35c9fda60" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7fd35d559740"/></typename>
        </type-int>
      </field>
      <field name="id" ref="0x7fd35c9fdb10" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="payload" ref="0x7fd35c9fdbc0" bit-offset="I:24" size="I:25">
        <type-array elements="I:25" size="I:25" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum name="cc2420_secctrl0_enums" loc="326:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8ee750" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="43:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7fd35c94a6e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="126:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h" ref="0x7fd35c94cd00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="number"  loc="NONE" ref="0x7fd35d78a020" size="V:" alignment="V:">
    </attribute>
    <enum name="cc2420_txctrl_enums" loc="284:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8f61e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_secctrl1_enums" loc="336:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8ec790" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="136:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1b3ae0" defined="" size="I:1" alignment="I:1">
      <field name="toie0" ref="0x7fd35c1b3cf0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocie0" ref="0x7fd35c1b3da0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="toie1" ref="0x7fd35c1b3e50" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocie1b" ref="0x7fd35c1b3f00" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocie1a" ref="0x7fd35c1b2020" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ticie1" ref="0x7fd35c1b20d0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="toie2" ref="0x7fd35c1b2180" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocie2" ref="0x7fd35c1b2230" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="231:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1a2280" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7fd35c1a2490" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7fd35c1a2540" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd35c1a3a40"/></type-tag>
      </field>
    </union>
    <union loc="174:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7fd35d495a10" defined="" size="I:56" alignment="I:8">
      <field name="__data" ref="0x7fd35d495c20" bit-offset="I:0" size="I:56">
        <type-tag size="I:56" alignment="I:8"><struct-ref ref="0x7fd35d496900"/></type-tag>
      </field>
      <field name="__size" ref="0x7fd35d495cd0" bit-offset="I:0" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7fd35d495d80" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <enum loc="25:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h" ref="0x7fd35c9ecb10" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="node" loc="62:/home/alan/tiny/tinyos-main/tos/lib/tossim/heap.c" ref="0x7fd35ccf8d40" defined="" size="I:16" alignment="I:8">
      <field name="data" ref="0x7fd35ccf7380" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x7fd35ccf7430" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum name="cc2420_rssi_enums" loc="275:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8f7020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="26:/usr/include/_G_config.h" ref="0x7fd35ce3fa10" defined="" size="I:16" alignment="I:8">
      <field name="__pos" ref="0x7fd35ce3fc20" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x7fd35d4f7920"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x7fd35ce3fcd0" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7fd35ce40350"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x7fd35ce40770"/></typename>
        </type-tag>
      </field>
    </struct>
    <union loc="167:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1adec0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7fd35c1ac100" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7fd35c1ac1b0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd35c1ad6a0"/></type-tag>
      </field>
    </union>
    <nx_struct name="security_header_t" loc="52:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c931bd0" defined="" size="I:6" alignment="I:1">
      <field name="secLevel" ref="0x7fd35c91bce0" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="keyMode" ref="0x7fd35c91bd90" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x7fd35c91be40" bit-offset="I:5" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="frameCounter" ref="0x7fd35c91bef0" bit-offset="I:8" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x7fd35d559e60"/></typename>
        </type-int>
      </field>
      <field name="keyID" ref="0x7fd35c91a020" bit-offset="I:40" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="serial_packet" loc="131:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h" ref="0x7fd35ca70640" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0x7fd35ca70d50" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x7fd35ca71190"/>
          <typename><typedef-ref name="serial_header_t" ref="0x7fd35ca702e0"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x7fd35ca70e00" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <union loc="120:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1b6ad0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7fd35c1b6ce0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7fd35c1b6d90" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd35c1b6370"/></type-tag>
      </field>
    </union>
    <attribute name="integer"  loc="NONE" ref="0x7fd35d78dcf0" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="99:/home/alan/tiny/tinyos-main/tos/lib/tossim/tos.h" ref="0x7fd35cd73aa0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union name="message_footer" loc="55:/home/alan/tiny/tinyos-main/tos/lib/tossim/platform_message.h" ref="0x7fd35ca6ea40" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x7fd35ca6ef40" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x7fd35ca7b080"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x7fd35ca7b6a0"/></typename>
        </type-tag>
      </field>
    </union>
    <enum loc="138:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7fd35c93c880" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="TYPE" loc="11:lib/interfaces/../../includes/socket.h" ref="0x7fd35c58c420" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union name="message_metadata" loc="59:/home/alan/tiny/tinyos-main/tos/lib/tossim/platform_message.h" ref="0x7fd35ca6c450" defined="" size="I:7" alignment="I:1">
      <field name="tossim" ref="0x7fd35ca6c970" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x7fd35ca7ba10"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x7fd35ca79d80"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="combine"  loc="NONE" ref="0x7fd35d789340" size="V:" alignment="V:">
      <field name="fn" ref="0x7fd35d789550" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct name="drand48_data" loc="412:/usr/include/stdlib.h" ref="0x7fd35d4775d0" defined="" size="I:24" alignment="I:8">
      <field name="__x" ref="0x7fd35d4764a0" bit-offset="I:0" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__old_x" ref="0x7fd35d476550" bit-offset="I:48" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__c" ref="0x7fd35d476600" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__init" ref="0x7fd35d4766b0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__a" ref="0x7fd35d476760" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum name="cc2420_nonce_enums" loc="239:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8fe1e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__locale_struct" loc="27:/usr/include/xlocale.h" ref="0x7fd35d5395f0" defined="" size="I:232" alignment="I:8">
      <field name="__locales" ref="0x7fd35d538a50" bit-offset="I:0" size="I:104">
        <type-array elements="I:13" size="I:104" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="V:" alignment="V:"><struct-ref name="__locale_data" ref="0x7fd35d539890"/></type-tag>
          </type-pointer>
        </type-array>
      </field>
      <field name="__ctype_b" ref="0x7fd35d538b00" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_tolower" ref="0x7fd35d538bb0" bit-offset="I:896" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_toupper" ref="0x7fd35d538c60" bit-offset="I:960" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__names" ref="0x7fd35d538d10" bit-offset="I:1024" size="I:104">
        <type-array elements="I:13" size="I:104" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </type-array>
      </field>
    </struct>
    <struct name="lqi_dist" loc="4:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h" ref="0x7fd35c755930" defined="" size="I:16" alignment="I:8">
      <field name="lqi" ref="0x7fd35c755ee0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="cdf" ref="0x7fd35c752020" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <nx_struct name="serial_header" loc="123:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h" ref="0x7fd35ca71190" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x7fd35ca71e10" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x7fd35ca80430"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x7fd35ca71ec0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x7fd35ca80430"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x7fd35ca70020" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x7fd35ca700d0" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x7fd35ca80020"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x7fd35ca70180" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x7fd35ca819d0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union name="message_header" loc="50:/home/alan/tiny/tinyos-main/tos/lib/tossim/platform_message.h" ref="0x7fd35ca6fd70" defined="" size="I:11" alignment="I:1">
      <field name="tossim" ref="0x7fd35ca6e4d0" bit-offset="I:0" size="I:11">
        <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x7fd35ca7d3c0"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x7fd35ca7cca0"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x7fd35ca6e580" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x7fd35ca71190"/>
          <typename><typedef-ref name="serial_header_t" ref="0x7fd35ca702e0"/></typename>
        </type-tag>
      </field>
    </union>
    <struct name="timespec" loc="120:/usr/include/time.h" ref="0x7fd35d4b4460" defined="" size="I:16" alignment="I:8">
      <field name="tv_sec" ref="0x7fd35d4b4ab0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__time_t" ref="0x7fd35d4f4960"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x7fd35d4b4b60" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__syscall_slong_t" ref="0x7fd35d4ee930"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__pthread_internal_list" loc="75:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7fd35d4a3280" defined="" size="I:16" alignment="I:8">
      <field name="__prev" ref="0x7fd35d4a3b80" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x7fd35d4a3280"/></type-tag>
        </type-pointer>
      </field>
      <field name="__next" ref="0x7fd35d4a3c30" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x7fd35d4a3280"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <attribute name="count" loc="11:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x7fd35d77f8d0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x7fd35d77fc10" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="185:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1ac5a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="link_state_pack" loc="29:includes/packet.h" ref="0x7fd35c9f3b10" defined="" size="I:20" alignment="I:1">
      <field name="id" ref="0x7fd35c9f1900" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="numNeighbors" ref="0x7fd35c9f19b0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="neighbors" ref="0x7fd35c9f1a60" bit-offset="I:16" size="I:17">
        <type-array elements="I:17" size="I:17" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="age" ref="0x7fd35c9f1b10" bit-offset="I:152" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="cc2420_manfidh_enums" loc="367:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8e7970" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="253:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c19f080" defined="" size="I:1" alignment="I:1">
      <field name="rsvd" ref="0x7fd35c19f290" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="focC" ref="0x7fd35c19f340" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="focB" ref="0x7fd35c19f3f0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="focA" ref="0x7fd35c19f4a0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="bnd_nok" loc="10:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x7fd35d782d00" defined="" size="I:16" alignment="I:8">
      <field name="lo" ref="0x7fd35d77f1e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x7fd35d77f290" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <enum loc="102:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h" ref="0x7fd35ca76880" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="cc2420_packet_t" loc="111:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c915770" defined="" size="I:12" alignment="I:1">
      <field name="packet" ref="0x7fd35c915e80" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7fd35c91a510"/>
          <typename><typedef-ref name="cc2420_header_t" ref="0x7fd35c919e60"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x7fd35c915f30" bit-offset="I:96" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="timezone" loc="55:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x7fd35cc949d0" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0x7fd35cc92020" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x7fd35cc920d0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="132:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7fd35c93de80" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union name="wait" loc="66:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x7fd35d4e6710" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0x7fd35d4e4b00" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wait_terminated" ref="0x7fd35d4e4bb0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7fd35d4e5620"/></type-tag>
      </field>
      <field name="__wait_stopped" ref="0x7fd35d4e4c60" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7fd35d4e4510"/></type-tag>
      </field>
    </union>
    <struct name="sim_event" loc="53:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_event_queue.h" ref="0x7fd35cd90020" defined="" size="I:48" alignment="I:8">
      <field name="time" ref="0x7fd35cd8e0a0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x7fd35cd9c1c0"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x7fd35cd8e150" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="force" ref="0x7fd35cd8e200" bit-offset="I:128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x7fd35cd8e2b0" bit-offset="I:136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x7fd35cd8e360" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x7fd35cd8e410" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7fd35cd90020"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x7fd35cd90410"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x7fd35cd8e4e0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:8" alignment="I:8">
                <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7fd35cd90020"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x7fd35cd90410"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <struct name="_IO_jump_t" ref="0x7fd35ce3c730" size="V:" alignment="V:">
    </struct>
    <struct name="duplicated_ack" loc="46:lib/interfaces/../../includes/socket.h" ref="0x7fd35c588e70" defined="" size="I:4" alignment="I:2">
      <field name="seq" ref="0x7fd35c586530" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="count" ref="0x7fd35c5865e0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="75:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1bfae0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="347:/usr/include/math.h" ref="0x7fd35ce78020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="123:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1b6370" defined="" size="I:1" alignment="I:1">
      <field name="tcr0ub" ref="0x7fd35c1b6580" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocr0ub" ref="0x7fd35c1b6630" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="tcn0ub" ref="0x7fd35c1b66e0" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="as0" ref="0x7fd35c1b6790" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x7fd35c1b6840" bit-offset="I:4" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="315:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c190810" defined="" size="I:1" alignment="I:1">
      <field name="ocf1c" ref="0x7fd35c190a20" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocf3c" ref="0x7fd35c190ad0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="tov3" ref="0x7fd35c190b80" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocf3b" ref="0x7fd35c190c30" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocf3a" ref="0x7fd35c190ce0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="icf3" ref="0x7fd35c190d90" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x7fd35c190e40" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="tossim_footer" loc="20:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0x7fd35ca7b080" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x7fd35ca7b540" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7fd35d5531f0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="22:includes/CommandMsg.h" ref="0x7fd35c9fb020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="__codecvt_result" loc="176:/usr/include/libio.h" ref="0x7fd35ce3ad10" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_packet.h" ref="0x7fd35ca925d0" defined="" size="I:0" alignment="I:1">
    </struct>
    <enum name="cc2420_iocfg0_enums" loc="347:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8ea390" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="socket_state" loc="16:lib/interfaces/../../includes/socket.h" ref="0x7fd35c58cbf0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="tcp_flags" loc="16:includes/TCP.h" ref="0x7fd35c59e020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_rsctrl_enums" loc="317:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8f0c90" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="63:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1c16b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="10:includes/CommandMsg.h" ref="0x7fd35c9fe270" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="97:/usr/include/stdlib.h" ref="0x7fd35d4dc020" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x7fd35d4dc230" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x7fd35d4dc2e0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="6:lib/modules/../../includes/am_types.h" ref="0x7fd35c294e40" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="54:/home/alan/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h" ref="0x7fd35c937020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="90:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7fd35d4a1e50" defined="" size="I:40" alignment="I:8">
      <field name="__data" ref="0x7fd35d49f0a0" bit-offset="I:0" size="I:40">
        <type-tag size="I:40" alignment="I:8"><struct-ref name="__pthread_mutex_s" ref="0x7fd35d4a21d0"/></type-tag>
      </field>
      <field name="__size" ref="0x7fd35d49f150" bit-offset="I:0" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7fd35d49f200" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <union loc="67:/usr/include/stdlib.h" ref="0x7fd35d4e3390" defined="" size="I:8" alignment="I:8">
      <field name="__uptr" ref="0x7fd35d4e35a0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:4" alignment="I:4"><union-ref name="wait" ref="0x7fd35d4e6710"/></type-tag>
        </type-pointer>
      </field>
      <field name="__iptr" ref="0x7fd35d4e3650" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-pointer>
      </field>
    </union>
    <nx_struct name="serial_metadata" loc="136:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h" ref="0x7fd35ca6f400" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x7fd35ca6f8b0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__itimer_which" loc="91:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x7fd35cc8ed50" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atmostonce" loc="97:/home/alan/tiny/tinyos-main/tos/lib/tossim/tos.h" ref="0x7fd35cd733a0" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct loc="300:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c192290" defined="" size="I:1" alignment="I:1">
      <field name="ocie1c" ref="0x7fd35c1924a0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocie3c" ref="0x7fd35c192550" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="toie3" ref="0x7fd35c192600" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocie3b" ref="0x7fd35c1926b0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocie3a" ref="0x7fd35c192760" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ticie3" ref="0x7fd35c192810" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x7fd35c1928c0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="neighbor" loc="18:includes/sendInfo.h" ref="0x7fd35c59f4b0" defined="" size="I:2" alignment="I:1">
      <field name="id" ref="0x7fd35c59faa0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="TTL" ref="0x7fd35c59fb50" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="58:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7fd35c9482b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_status_enums" loc="164:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c90f020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="41:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.h" ref="0x7fd35ca32360" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x7fd35ca32570" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="87:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h" ref="0x7fd35ca784e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="hwevent"  loc="NONE" ref="0x7fd35d78aa90" size="V:" alignment="V:">
    </attribute>
    <enum name="cc2420_ram_addr_enums" loc="225:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c9013c0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="239:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7fd35d492ce0" defined="" size="I:32" alignment="I:8">
      <field name="__size" ref="0x7fd35d492ef0" bit-offset="I:0" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7fd35d491020" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <union loc="139:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7fd35d49a3c0" defined="" size="I:48" alignment="I:8">
      <field name="__data" ref="0x7fd35d49a5d0" bit-offset="I:0" size="I:48">
        <type-tag size="I:48" alignment="I:8"><struct-ref ref="0x7fd35d49c530"/></type-tag>
      </field>
      <field name="__size" ref="0x7fd35d49a680" bit-offset="I:0" size="I:48">
        <type-array elements="I:48" size="I:48" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7fd35d49a730" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <enum loc="76:/home/alan/tiny/tinyos-main/tos/lib/tossim/tos.h" ref="0x7fd35cd9e2f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_IO_FILE" loc="241:/usr/include/libio.h" ref="0x7fd35ce437f0" defined="" size="I:216" alignment="I:8">
      <field name="_flags" ref="0x7fd35ce33240" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_IO_read_ptr" ref="0x7fd35ce332f0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_end" ref="0x7fd35ce333a0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_base" ref="0x7fd35ce33450" bit-offset="I:192" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_base" ref="0x7fd35ce33500" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_ptr" ref="0x7fd35ce335b0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_end" ref="0x7fd35ce33660" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_base" ref="0x7fd35ce33710" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_end" ref="0x7fd35ce337c0" bit-offset="I:512" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_base" ref="0x7fd35ce33870" bit-offset="I:576" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_backup_base" ref="0x7fd35ce33920" bit-offset="I:640" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_end" ref="0x7fd35ce339d0" bit-offset="I:704" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_markers" ref="0x7fd35ce33a80" bit-offset="I:768" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="_IO_marker" ref="0x7fd35ce3a020"/></type-tag>
        </type-pointer>
      </field>
      <field name="_chain" ref="0x7fd35ce33c30" bit-offset="I:832" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7fd35ce437f0"/></type-tag>
        </type-pointer>
      </field>
      <field name="_fileno" ref="0x7fd35ce33ce0" bit-offset="I:896" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags2" ref="0x7fd35ce33d90" bit-offset="I:928" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_old_offset" ref="0x7fd35ce33e40" bit-offset="I:960" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off_t" ref="0x7fd35d4f7560"/></typename>
        </type-int>
      </field>
      <field name="_cur_column" ref="0x7fd35ce33ef0" bit-offset="I:1024" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_vtable_offset" ref="0x7fd35ce31020" bit-offset="I:1040" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="_shortbuf" ref="0x7fd35ce310d0" bit-offset="I:1048" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lock" ref="0x7fd35ce31180" bit-offset="I:1088" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1">
            <typename><typedef-ref name="_IO_lock_t" ref="0x7fd35ce3cbc0"/></typename>
          </type-void>
        </type-pointer>
      </field>
      <field name="_offset" ref="0x7fd35ce31230" bit-offset="I:1152" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x7fd35d4f7920"/></typename>
        </type-int>
      </field>
      <field name="__pad1" ref="0x7fd35ce312e0" bit-offset="I:1216" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad2" ref="0x7fd35ce31390" bit-offset="I:1280" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad3" ref="0x7fd35ce31440" bit-offset="I:1344" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad4" ref="0x7fd35ce316f0" bit-offset="I:1408" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad5" ref="0x7fd35ce317a0" bit-offset="I:1472" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
          <typename><typedef-ref name="size_t" ref="0x7fd35d787a40"/></typename>
        </type-int>
      </field>
      <field name="_mode" ref="0x7fd35ce31850" bit-offset="I:1536" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_unused2" ref="0x7fd35ce31900" bit-offset="I:1568" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <enum name="cc2420_battmon_enums" loc="341:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8eb3a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="170:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1ad6a0" defined="" size="I:1" alignment="I:1">
      <field name="psr321" ref="0x7fd35c1ad8b0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="psr0" ref="0x7fd35c1ad960" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="pud" ref="0x7fd35c1ada10" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="acme" ref="0x7fd35c1adac0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x7fd35c1adb70" bit-offset="I:4" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="tsm" ref="0x7fd35c1adc20" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
    </struct>
    <union name="pthread_attr_t" loc="63:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7fd35d4a4360" defined="" size="I:56" alignment="I:8">
      <field name="__size" ref="0x7fd35d4a4a00" bit-offset="I:0" size="I:56">
        <type-array elements="I:56" size="I:56" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7fd35d4a4ab0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <union loc="85:/usr/include/wchar.h" ref="0x7fd35ce41da0" defined="" size="I:4" alignment="I:4">
      <field name="__wch" ref="0x7fd35ce40020" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wchb" ref="0x7fd35ce400d0" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </union>
    <struct name="hashtable" ref="0x7fd35cd71080" size="V:" alignment="V:">
    </struct>
    <union loc="130:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7fd35d49fb20" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x7fd35d49fd30" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7fd35d49fde0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="heap" loc="61:/home/alan/tiny/tinyos-main/tos/lib/tossim/heap.h" ref="0x7fd35cd00be0" defined="" size="I:24" alignment="I:8">
      <field name="size" ref="0x7fd35ccff360" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x7fd35ccff410" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x7fd35ccff4c0" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum name="cc2420_syncword_enums" loc="280:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8f7aa0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="safe"  loc="NONE" ref="0x7fd35d789ce0" size="V:" alignment="V:">
    </attribute>
    <struct loc="84:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x7fd35d4e4510" defined="" size="I:4" alignment="I:4">
      <field name="__w_stopval" ref="0x7fd35d4e4720" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_stopsig" ref="0x7fd35d4e47d0" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="52:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1c6380" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="196:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1aa410" defined="" size="I:1" alignment="I:1">
      <field name="wgm10" ref="0x7fd35c1aa620" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="comC" ref="0x7fd35c1aa6d0" bit-offset="I:2" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="comB" ref="0x7fd35c1aa780" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="comA" ref="0x7fd35c1aa830" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="42:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.h" ref="0x7fd35ca32c20" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x7fd35ca32e30" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct name="pack" loc="19:includes/packet.h" ref="0x7fd35c9f4320" defined="" size="I:28" alignment="I:1">
      <field name="dest" ref="0x7fd35c9f32d0" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7fd35d559740"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x7fd35c9f3380" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7fd35d559740"/></typename>
        </type-int>
      </field>
      <field name="seq" ref="0x7fd35c9f3430" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7fd35d559740"/></typename>
        </type-int>
      </field>
      <field name="TTL" ref="0x7fd35c9f34e0" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="protocol" ref="0x7fd35c9f3590" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="payload" ref="0x7fd35c9f3640" bit-offset="I:64" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="_IO_marker" loc="156:/usr/include/libio.h" ref="0x7fd35ce3a020" defined="" size="I:24" alignment="I:8">
      <field name="_next" ref="0x7fd35ce3a910" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="_IO_marker" ref="0x7fd35ce3a020"/></type-tag>
        </type-pointer>
      </field>
      <field name="_sbuf" ref="0x7fd35ce3a9c0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7fd35ce437f0"/></type-tag>
        </type-pointer>
      </field>
      <field name="_pos" ref="0x7fd35ce3aa70" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="105:/usr/include/stdlib.h" ref="0x7fd35d4dcac0" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x7fd35d4dccd0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x7fd35d4dcd80" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="sendInfo" loc="12:includes/sendInfo.h" ref="0x7fd35c5a06a0" defined="" size="I:32" alignment="I:2">
      <field name="packet" ref="0x7fd35c5a0e70" bit-offset="I:0" size="I:28">
        <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7fd35c9f4320"/>
          <typename><typedef-ref name="pack" ref="0x7fd35c9f37a0"/></typename>
        </type-tag>
      </field>
      <field name="src" ref="0x7fd35c5a0f20" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x7fd35c59f020" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="126:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7fd35c93d480" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="random_data" loc="343:/usr/include/stdlib.h" ref="0x7fd35d48c830" defined="" size="I:48" alignment="I:8">
      <field name="fptr" ref="0x7fd35d48b7c0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x7fd35d7721a0"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rptr" ref="0x7fd35d48b870" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x7fd35d7721a0"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="state" ref="0x7fd35d48b920" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x7fd35d7721a0"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rand_type" ref="0x7fd35d48b9d0" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_deg" ref="0x7fd35d48ba80" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_sep" ref="0x7fd35d48bb30" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="end_ptr" ref="0x7fd35d48bbe0" bit-offset="I:320" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x7fd35d7721a0"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <enum loc="9:includes/protocol.h" ref="0x7fd35ca00350" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="98:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1ba020" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7fd35c1ba230" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7fd35c1ba2e0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd35c1bb770"/></type-tag>
      </field>
    </union>
    <union loc="150:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1b0d30" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7fd35c1b0f40" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7fd35c1ae020" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd35c1b03b0"/></type-tag>
      </field>
    </union>
    <struct name="tm" loc="133:/usr/include/time.h" ref="0x7fd35cb88020" defined="" size="I:56" alignment="I:8">
      <field name="tm_sec" ref="0x7fd35cb87470" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x7fd35cb87520" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x7fd35cb875d0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x7fd35cb87680" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x7fd35cb87730" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x7fd35cb877e0" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x7fd35cb87890" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x7fd35cb87940" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x7fd35cb879f0" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x7fd35cb87aa0" bit-offset="I:320" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="tm_zone" ref="0x7fd35cb87b50" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
    </struct>
    <struct loc="177:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7fd35d496900" defined="" size="I:56" alignment="I:8">
      <field name="__lock" ref="0x7fd35d496b10" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers" ref="0x7fd35d496bc0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__readers_wakeup" ref="0x7fd35d496c70" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer_wakeup" ref="0x7fd35d496d20" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers_queued" ref="0x7fd35d496dd0" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_writers_queued" ref="0x7fd35d496e80" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer" ref="0x7fd35d496f30" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__shared" ref="0x7fd35d495020" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__rwelision" ref="0x7fd35d4950d0" bit-offset="I:256" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__pad1" ref="0x7fd35d495180" bit-offset="I:264" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__pad2" ref="0x7fd35d495230" bit-offset="I:320" size="I:8">
        <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__flags" ref="0x7fd35d4952e0" bit-offset="I:384" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="117:/usr/include/stdlib.h" ref="0x7fd35d4db770" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x7fd35d4db980" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x7fd35d4dba30" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="sim_log_output" loc="51:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x7fd35cd67d90" defined="" size="I:16" alignment="I:8">
      <field name="num" ref="0x7fd35cd66440" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x7fd35cd664f0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7fd35ce437f0"/>
              <typename><typedef-ref name="FILE" ref="0x7fd35ce43be0"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <struct loc="271:/usr/include/inttypes.h" ref="0x7fd35d7678e0" defined="" size="I:16" alignment="I:8">
      <field name="quot" ref="0x7fd35d767af0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x7fd35d767ba0" bit-offset="I:64" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <struct name="radio_stats" loc="109:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h" ref="0x7fd35ca75b50" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0x7fd35ca735c0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x7fd35ca73670" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x7fd35ca73720" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x7fd35ca737d0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x7fd35ca73880" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x7fd35ca73930" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x7fd35ca739e0" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x7fd35ca73a90" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x7fd35ca73b40" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x7fd35ca73bf0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x7fd35ca73ca0" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="dmemset" loc="15:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x7fd35d77c080" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x7fd35d77c550" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x7fd35d77c600" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x7fd35d77c6b0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="one_nok" loc="14:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x7fd35d77d670" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x7fd35d77d9e0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="101:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1bb770" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x7fd35c1bb980" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="wgm1" ref="0x7fd35c1bba30" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="com" ref="0x7fd35c1bbae0" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="wgm0" ref="0x7fd35c1bbb90" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="foc" ref="0x7fd35c1bbc40" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="atleastonce" loc="98:/home/alan/tiny/tinyos-main/tos/lib/tossim/tos.h" ref="0x7fd35cd73720" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union loc="224:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7fd35d494830" defined="" size="I:8" alignment="I:8">
      <field name="__size" ref="0x7fd35d494e40" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7fd35d494ef0" bit-offset="I:0" size="I:8">
        <type-int cname="long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <enum name="cong_strat" loc="31:lib/interfaces/../../includes/socket.h" ref="0x7fd35c589150" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="193:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1aab40" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7fd35c1aad50" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7fd35c1aae00" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd35c1aa410"/></type-tag>
      </field>
    </union>
    <struct name="itimerval" loc="107:/usr/include/x86_64-linux-gnu/sys/time.h" ref="0x7fd35cc8db00" defined="" size="I:32" alignment="I:8">
      <field name="it_interval" ref="0x7fd35cc8c260" bit-offset="I:0" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x7fd35d4b4e20"/></type-tag>
      </field>
      <field name="it_value" ref="0x7fd35cc8c310" bit-offset="I:128" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="timeval" ref="0x7fd35d4b4e20"/></type-tag>
      </field>
    </struct>
    <nx_struct name="cc2420_header_t" loc="60:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c91a510" defined="" size="I:12" alignment="I:1">
      <field name="length" ref="0x7fd35c919830" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7fd35d554a50"/></typename>
        </type-int>
      </field>
      <field name="fcf" ref="0x7fd35c9198e0" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7fd35d5531f0"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0x7fd35c919990" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7fd35d554a50"/></typename>
        </type-int>
      </field>
      <field name="destpan" ref="0x7fd35c919a40" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7fd35d5531f0"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x7fd35c919af0" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7fd35d5531f0"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x7fd35c919ba0" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x7fd35d5531f0"/></typename>
        </type-int>
      </field>
      <field name="network" ref="0x7fd35c919c50" bit-offset="I:80" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7fd35d554a50"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x7fd35c919d00" bit-offset="I:88" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7fd35d554a50"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="63:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x7fd35cd65a10" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="153:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1b03b0" defined="" size="I:1" alignment="I:1">
      <field name="tov0" ref="0x7fd35c1b05c0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocf0" ref="0x7fd35c1b0670" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="tov1" ref="0x7fd35c1b0720" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocf1b" ref="0x7fd35c1b07d0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocf1a" ref="0x7fd35c1b0880" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="icf1" ref="0x7fd35c1b0930" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="tov2" ref="0x7fd35c1b09e0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ocf2" ref="0x7fd35c1b0a90" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="count_nok" loc="12:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x7fd35d77e2d0" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x7fd35d77e610" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum name="cc2420_rxctrl0_enums" loc="294:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8f4190" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sigevent" ref="0x7fd35cb86810" size="V:" alignment="V:">
    </struct>
    <struct name="socket_store_t" loc="55:lib/interfaces/../../includes/socket.h" ref="0x7fd35c586eb0" defined="" size="I:444" alignment="I:4">
      <field name="flag" ref="0x7fd35c5811f0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="state" ref="0x7fd35c5812a0" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><enum-ref name="socket_state" ref="0x7fd35c58cbf0"/></type-tag>
      </field>
      <field name="type" ref="0x7fd35c581350" bit-offset="I:64" size="I:4">
        <type-tag size="I:4" alignment="I:4"><enum-ref name="TYPE" ref="0x7fd35c58c420"/></type-tag>
      </field>
      <field name="src" ref="0x7fd35c581400" bit-offset="I:96" size="I:3">
        <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x7fd35c588220"/>
          <typename><typedef-ref name="socket_addr_t" ref="0x7fd35c588af0"/></typename>
        </type-tag>
      </field>
      <field name="dest" ref="0x7fd35c5814b0" bit-offset="I:120" size="I:3">
        <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x7fd35c588220"/>
          <typename><typedef-ref name="socket_addr_t" ref="0x7fd35c588af0"/></typename>
        </type-tag>
      </field>
      <field name="connectionQueue" ref="0x7fd35c581560" bit-offset="I:144" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="deadlockAck" ref="0x7fd35c581610" bit-offset="I:1168" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
        </type-int>
      </field>
      <field name="advertisedWindow" ref="0x7fd35c5816c0" bit-offset="I:1176" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="sendBuff" ref="0x7fd35c581770" bit-offset="I:1184" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="lastWritten" ref="0x7fd35c581820" bit-offset="I:2208" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="lastAck" ref="0x7fd35c5818d0" bit-offset="I:2216" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="lastSent" ref="0x7fd35c581980" bit-offset="I:2224" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="rcvdBuff" ref="0x7fd35c581a30" bit-offset="I:2232" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="lastRead" ref="0x7fd35c581be0" bit-offset="I:3256" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="lastRcvd" ref="0x7fd35c581c90" bit-offset="I:3264" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="nextExpected" ref="0x7fd35c581d40" bit-offset="I:3272" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="RTT" ref="0x7fd35c581df0" bit-offset="I:3280" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="effectiveWindow" ref="0x7fd35c581ea0" bit-offset="I:3296" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x7fd35c581f50" bit-offset="I:3312" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="duplicateAck" ref="0x7fd35c57f030" bit-offset="I:3328" size="I:4">
        <type-tag size="I:4" alignment="I:2"><struct-ref name="duplicated_ack" ref="0x7fd35c588e70"/>
          <typename><typedef-ref name="duplicated_ack" ref="0x7fd35c586740"/></typename>
        </type-tag>
      </field>
      <field name="ssthresh" ref="0x7fd35c57f0e0" bit-offset="I:3360" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="cwnd" ref="0x7fd35c57f190" bit-offset="I:3368" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="cwndRemainder" ref="0x7fd35c57f240" bit-offset="I:3376" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="cwndStrategy" ref="0x7fd35c57f2f0" bit-offset="I:3392" size="I:4">
        <type-tag size="I:4" alignment="I:4"><enum-ref name="cong_strat" ref="0x7fd35c589150"/></type-tag>
      </field>
      <field name="RTO" ref="0x7fd35c57f3a0" bit-offset="I:3424" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
        </type-int>
      </field>
      <field name="RTX" ref="0x7fd35c57f650" bit-offset="I:3456" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
        </type-int>
      </field>
      <field name="RTT_VAR" ref="0x7fd35c57f700" bit-offset="I:3488" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
        </type-int>
      </field>
      <field name="RTT_SEQ" ref="0x7fd35c57f7b0" bit-offset="I:3520" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="IS_VALID_RTT" ref="0x7fd35c57f860" bit-offset="I:3536" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="104:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7fd35c940870" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="12:includes/command.h" ref="0x7fd35c9eb8f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_security_enums" loc="385:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8e47b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="one" loc="13:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x7fd35d77ec30" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x7fd35d77d020" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum name="cc2420_fsmtc_enums" loc="372:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8e64b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__locale_data" ref="0x7fd35d539890" size="V:" alignment="V:">
    </struct>
    <attribute name="spontaneous"  loc="NONE" ref="0x7fd35d789080" size="V:" alignment="V:">
    </attribute>
    <enum loc="144:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7fd35c93b2f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="snr_lqi" loc="9:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h" ref="0x7fd35c752570" defined="" size="I:24" alignment="I:8">
      <field name="snr" ref="0x7fd35c752d40" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="numLqi" ref="0x7fd35c752df0" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x7fd35c752ea0" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
            <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <union loc="156:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7fd35d499080" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x7fd35d499290" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7fd35d499340" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct loc="141:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7fd35d49c530" defined="" size="I:48" alignment="I:8">
      <field name="__lock" ref="0x7fd35d49c740" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__futex" ref="0x7fd35d49c7f0" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__total_seq" ref="0x7fd35d49c8a0" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__wakeup_seq" ref="0x7fd35d49c950" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__woken_seq" ref="0x7fd35d49ca00" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__mutex" ref="0x7fd35d49cab0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__nwaiters" ref="0x7fd35d49cb60" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__broadcast_seq" ref="0x7fd35d49cc10" bit-offset="I:352" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="211:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1a8c50" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="unsafe"  loc="NONE" ref="0x7fd35d787020" size="V:" alignment="V:">
    </attribute>
    <union loc="133:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1b24d0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7fd35c1b26e0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7fd35c1b2790" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd35c1b3ae0"/></type-tag>
      </field>
    </union>
    <nx_struct name="cc2420_footer_t" loc="83:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c917250" defined="" size="I:0" alignment="I:1">
    </nx_struct>
    <enum loc="209:/usr/include/math.h" ref="0x7fd35ce7aae0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="673:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h" ref="0x7fd35c9ceb80" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="144:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c914440" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="401:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8e1840" defined="" size="I:4" alignment="I:4">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="245:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7fd35d491960" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x7fd35d491b70" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x7fd35d491c20" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct loc="27:/usr/include/x86_64-linux-gnu/bits/sigset.h" ref="0x7fd35d4b58b0" defined="" size="I:128" alignment="I:8">
      <field name="__val" ref="0x7fd35d4b5ac0" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="TCP" loc="26:includes/TCP.h" ref="0x7fd35c59d560" defined="" size="I:28" alignment="I:4">
      <field name="srcPort" ref="0x7fd35c59c990" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="destPort" ref="0x7fd35c59ca40" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="seq" ref="0x7fd35c59caf0" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x7fd35c59cba0" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><enum-ref name="tcp_flags" ref="0x7fd35c59e020"/></type-tag>
      </field>
      <field name="length" ref="0x7fd35c59cc50" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x7fd35c59cd00" bit-offset="I:72" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="advwin" ref="0x7fd35c59cdb0" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="payload" ref="0x7fd35c59ce60" bit-offset="I:96" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="234:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1a3a40" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x7fd35c1a3c50" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="wgm32" ref="0x7fd35c1a3d00" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x7fd35c1a3db0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="ices1" ref="0x7fd35c1a3e60" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="icnc1" ref="0x7fd35c1a3f10" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
    </struct>
    <enum name="cc2420_mdmctrl0_enums" loc="256:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8fb400" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="94:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7fd35c940110" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x7fd35c940320" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x7fd35c9403d0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x7fd35c940480" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
    </struct>
    <enum name="cc2420_mdmctrl1_enums" loc="267:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8f97d0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="nts" loc="17:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x7fd35d77b980" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x7fd35d77bcf0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="50:/usr/include/x86_64-linux-gnu/bits/waitflags.h" ref="0x7fd35d502020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_IO_FILE_plus" ref="0x7fd35ce2f020" size="V:" alignment="V:">
    </struct>
    <enum loc="14:/home/alan/tiny/tinyos-main/tos/types/AM.h" ref="0x7fd35ca7e270" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="134:/usr/include/x86_64-linux-gnu/bits/types.h" ref="0x7fd35d4f6290" defined="" size="I:8" alignment="I:4">
      <field name="__val" ref="0x7fd35d4f64a0" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="exception" loc="372:/usr/include/math.h" ref="0x7fd35ce77a20" defined="" size="I:40" alignment="I:8">
      <field name="type" ref="0x7fd35ce76410" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x7fd35ce764c0" bit-offset="I:64" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x7fd35ce76570" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x7fd35ce76620" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x7fd35ce766d0" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct name="sim_log_channel" loc="56:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_log.c" ref="0x7fd35cd669c0" defined="" size="I:24" alignment="I:8">
      <field name="name" ref="0x7fd35cd65450" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x7fd35cd65500" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x7fd35cd655b0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x7fd35cd65660" bit-offset="I:128" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7fd35ce437f0"/>
              <typename><typedef-ref name="FILE" ref="0x7fd35ce43be0"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <attribute name="C"  loc="NONE" ref="0x7fd35d78a7d0" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="64:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0x7fd35cc81830" defined="" size="I:488" alignment="I:8">
      <field name="key" ref="0x7fd35cc807c0" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x7fd35cc80870" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x7fd35cc80920" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x7fd35cc809d0" bit-offset="I:256" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x7fd35cc80a80" bit-offset="I:320" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x7fd35cc80b30" bit-offset="I:352" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <enum name="cc2420_main_enums" loc="247:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8fd960" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="90:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c1bd7d0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="macro"  loc="NONE" ref="0x7fd35d7896b0" size="V:" alignment="V:">
      <field name="macro_name" ref="0x7fd35d7898c0" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <nx_struct name="RouteEntry" loc="4:dataStructures/interfaces/../../includes/entry.h" ref="0x7fd35c3606e0" defined="" size="I:3" alignment="I:1">
      <field name="dest" ref="0x7fd35c360f50" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="cost" ref="0x7fd35c35d030" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="next_hop" ref="0x7fd35c35d0e0" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="cc2420_enums" loc="155:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c9111a0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_sfdmux_enums" loc="380:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8e5b80" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="message_t" loc="14:/home/alan/tiny/tinyos-main/tos/types/message.h" ref="0x7fd35ca6ce00" defined="" size="I:48" alignment="I:1">
      <field name="header" ref="0x7fd35ca6a0e0" bit-offset="I:0" size="I:11">
        <type-array elements="I:11" size="I:11" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x7fd35ca6a190" bit-offset="I:88" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x7fd35ca6a240" bit-offset="I:312" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x7fd35ca6a2f0" bit-offset="I:328" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="tossim_header" loc="6:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0x7fd35ca7d3c0" defined="" size="I:11" alignment="I:1">
      <field name="length" ref="0x7fd35ca7c670" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="fcf" ref="0x7fd35ca7c720" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x7fd35d559740"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0x7fd35ca7c7d0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x7fd35ca7c880" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x7fd35ca80430"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x7fd35ca7c930" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x7fd35ca80430"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x7fd35ca7c9e0" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x7fd35ca80020"/></typename>
        </type-int>
      </field>
      <field name="network" ref="0x7fd35ca7ca90" bit-offset="I:72" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x7fd35d554a50"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x7fd35ca7cb40" bit-offset="I:80" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x7fd35ca819d0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="51:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7fd35c949800" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="250:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c19f790" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7fd35c19f9a0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7fd35c19fa50" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd35c19f080"/></type-tag>
      </field>
    </union>
    <struct loc="69:/usr/include/x86_64-linux-gnu/bits/waitstatus.h" ref="0x7fd35d4e5620" defined="" size="I:4" alignment="I:4">
      <field name="__w_termsig" ref="0x7fd35d4e5830" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_coredump" ref="0x7fd35d4e58e0" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_retcode" ref="0x7fd35d4e5990" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="297:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0x7fd35c192b70" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x7fd35c192d80" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x7fd35c192e30" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd35c192290"/></type-tag>
      </field>
    </union>
    <enum name="cc2420_config_reg_enums" loc="173:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c90d520" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_noise_node_t" loc="73:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0x7fd35cc7e170" defined="" size="I:264" alignment="I:8">
      <field name="key" ref="0x7fd35cc7cb90" bit-offset="I:0" size="I:128">
        <type-array elements="I:16" size="I:128" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </type-array>
      </field>
      <field name="freqKey" ref="0x7fd35cc7cc40" bit-offset="I:1024" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x7fd35cc7ccf0" bit-offset="I:1184" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="noiseGenTime" ref="0x7fd35cc7cda0" bit-offset="I:1312" size="I:64">
        <type-array elements="I:16" size="I:64" alignment="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="noiseTable" ref="0x7fd35cc7ce50" bit-offset="I:1856" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x7fd35cd71080"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x7fd35cc7cf00" bit-offset="I:1920" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x7fd35cc7a020" bit-offset="I:1984" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x7fd35cc7a0d0" bit-offset="I:2016" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x7fd35cc7a180" bit-offset="I:2048" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="51:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0x7fd35cc84430" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_manfidl_enums" loc="362:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8e8e60" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="120:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7fd35c93eb20" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="150:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0x7fd35c93ad70" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x7fd35c939020" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x7fd35c9390d0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x7fd35c939180" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x7fd35c939230" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x7fd35c9392e0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x7fd35c939390" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
    </struct>
    <struct ref="0x7fd35d78f530" size="V:" alignment="V:">
    </struct>
    <enum loc="28:includes/command.h" ref="0x7fd35c5a1940" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="51:/home/alan/tiny/tinyos-main/tos/types/TinyError.h" ref="0x7fd35d785dc0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="43:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.h" ref="0x7fd35ca01460" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x7fd35ca01670" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum name="cc2420_iocfg1_enums" loc="356:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8e8020" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x7fd35d78ad50" size="V:" alignment="V:">
    </attribute>
    <attribute name="dmemcpy" loc="16:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x7fd35d77cd00" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x7fd35d77b200" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x7fd35d77b2b0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x7fd35d77b360" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum name="cc2420_rxctrl1_enums" loc="304:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0x7fd35c8f2190" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__pthread_mutex_s" loc="92:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" ref="0x7fd35d4a21d0" defined="" size="I:40" alignment="I:8">
      <field name="__lock" ref="0x7fd35d4a1260" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__count" ref="0x7fd35d4a1310" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__owner" ref="0x7fd35d4a13c0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nusers" ref="0x7fd35d4a1470" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__kind" ref="0x7fd35d4a1520" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__spins" ref="0x7fd35d4a15d0" bit-offset="I:160" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__elision" ref="0x7fd35d4a1680" bit-offset="I:176" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__list" ref="0x7fd35d4a1730" bit-offset="I:192" size="I:16">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x7fd35d4a3280"/>
          <typename><typedef-ref name="__pthread_list_t" ref="0x7fd35d4a3d90"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="53:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x7fd35ca31ea0" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="145:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0x7fd35c758210" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="101:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0x7fd35c757350" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="96:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0x7fd35c756590" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="528:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc" ref="0x7fd35c754e20" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="receive_message" loc="69:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc" ref="0x7fd35c69f910" defined="" scoped="" size="I:72" alignment="I:8">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0x7fd35c69d830" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0x7fd35c69d8e0" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x7fd35cd9c1c0"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0x7fd35c69d990" bit-offset="I:128" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x7fd35cd9c1c0"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x7fd35c69da40" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0x7fd35c69daf0" bit-offset="I:256" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0x7fd35c69dba0" bit-offset="I:320" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x7fd35d779950"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0x7fd35c69dc50" bit-offset="I:328" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x7fd35c69dd00" bit-offset="I:336" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x7fd35c69ddb0" bit-offset="I:384" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
            <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0x7fd35c69de60" bit-offset="I:448" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:72" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x7fd35c69f910"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0x7fd35c69fd80"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="channel" ref="0x7fd35c69df10" bit-offset="I:512" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x7fd35c69b020" bit-offset="I:520" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="82:lib/modules/SimpleSendP.nc" ref="0x7fd35c1face0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="71:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0x7fd35bfae6b0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="74:/home/alan/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" ref="0x7fd35bfe2210" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="44:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" ref="0x7fd35c144270" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="59:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0x7fd35bfa1ca0" defined="" scoped="" size="I:12" alignment="I:4">
      <component-ref qname="VirtualizeTimerC"/>
      <field name="t0" ref="0x7fd35bfa1eb0" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
        </type-int>
      </field>
      <field name="dt" ref="0x7fd35bfa0020" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
        </type-int>
      </field>
      <field name="isoneshot" ref="0x7fd35bfa00d0" bit-offset="I:64" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
        </type-int>
      </field>
      <field name="isrunning" ref="0x7fd35bfa0180" bit-offset="I:65" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
        </type-int>
      </field>
      <field name="_reserved" ref="0x7fd35bfa0230" bit-offset="I:66" bit-size="I:6">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="53:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0x7fd35bfa2680" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="47:/home/alan/tiny/tinyos-main/tos/system/AMQueueP.nc" ref="0x7fd35bf00830" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="169:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc" ref="0x7fd35befcd00" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="126:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc" ref="0x7fd35beb0e10" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct loc="55:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc" ref="0x7fd35bef66d0" defined="" scoped="" size="I:8" alignment="I:8">
      <component-ref qname="AMQueueImplP"/>
      <field name="msg" ref="0x7fd35bef68e0" bit-offset="I:0" size="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
            <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="hashmapEntry" loc="20:dataStructures/modules/HashmapC.nc" ref="0x7fd35bd8dbd0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="HashmapC"/>
      <field name="key" ref="0x7fd35bd8b240" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
        </type-int>
      </field>
      <field name="value" ref="0x7fd35bd8b2f0" bit-offset="U:" size="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35bd946c0"/></type-var>
      </field>
    </struct>
    <struct name="server" loc="24:lib/modules/TransportObjectP.nc" ref="0x7fd35bd256f0" defined="" scoped="" size="I:1040" alignment="I:2">
      <component-ref qname="TransportObjectP"/>
      <field name="fd" ref="0x7fd35bd24760" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="connections" ref="0x7fd35bd24810" bit-offset="I:8" size="I:10">
        <type-array elements="I:10" size="I:10" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="buffer" ref="0x7fd35bd248c0" bit-offset="I:88" size="I:1024">
        <type-array elements="I:1024" size="I:1024" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="connNum" ref="0x7fd35bd24970" bit-offset="I:8280" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="bytesRead" ref="0x7fd35bd24a20" bit-offset="I:8288" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="bytesWritten" ref="0x7fd35bd24ad0" bit-offset="I:8304" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="client" loc="33:lib/modules/TransportObjectP.nc" ref="0x7fd35bd22020" defined="" scoped="" size="I:1034" alignment="I:2">
      <component-ref qname="TransportObjectP"/>
      <field name="fd" ref="0x7fd35bd22f10" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="bytesWritten" ref="0x7fd35bd21020" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="bytesSent" ref="0x7fd35bd210d0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="ctr" ref="0x7fd35bd21180" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="transfer" ref="0x7fd35bd21230" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
        </type-int>
      </field>
      <field name="buffer" ref="0x7fd35bd212e0" bit-offset="I:80" size="I:1024">
        <type-array elements="I:1024" size="I:1024" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="27:lib/modules/ChatP.nc" ref="0x7fd35bc72c70" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="ChatP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="chatroom" loc="32:lib/modules/ChatP.nc" ref="0x7fd35bc706b0" defined="" scoped="" size="I:400" alignment="I:8">
      <component-ref qname="ChatP"/>
      <field name="users" ref="0x7fd35bc6e6e0" bit-offset="I:0" size="I:160">
        <type-array elements="I:20" size="I:160" alignment="I:8">
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </type-pointer>
        </type-array>
      </field>
      <field name="userBuffs" ref="0x7fd35bc6e790" bit-offset="I:1280" size="I:160">
        <type-array elements="I:20" size="I:160" alignment="I:1">
          <type-array elements="I:8" size="I:8" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
            </type-int>
          </type-array>
        </type-array>
      </field>
      <field name="used" ref="0x7fd35bc6e840" bit-offset="I:2560" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="buff" ref="0x7fd35bc6e8f0" bit-offset="I:2720" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="chatServer" ref="0x7fd35bc6e9a0" bit-offset="I:2784" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="srcPorts" ref="0x7fd35bc6ea50" bit-offset="I:2792" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="destPorts" ref="0x7fd35bc6eb00" bit-offset="I:2952" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="bytesWritten" ref="0x7fd35bc6ebb0" bit-offset="I:3112" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="broadcastType" ref="0x7fd35bc6ec60" bit-offset="I:3120" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="whisperTo" ref="0x7fd35bc6ed10" bit-offset="I:3128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </field>
      <field name="started" ref="0x7fd35bc6edc0" bit-offset="I:3136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="22:lib/modules/CommandHandlerP.nc" ref="0x7fd35bbc9020" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CommandHandlerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
  </tags>
  <variables>
    <variable name="snr28" ref="0x7fd35c73ba50" loc="23:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr17" ref="0x7fd35c6d3a50" loc="38:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randCM" ref="0x7fd35cbaf2a0" loc="39:/home/alan/tiny/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x7fd35cae25c0" loc="298:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr7" ref="0x7fd35c70e140" loc="29:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:720" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr30" ref="0x7fd35c6c6a10" loc="43:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:7" size="I:112" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="current_node" ref="0x7fd35cc75550" loc="52:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="test" ref="0x7fd35cbafb90" loc="41:/home/alan/tiny/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr23" ref="0x7fd35c73e200" loc="22:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__timezone" ref="0x7fd35cb713f0" loc="284:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="snr12" ref="0x7fd35c6dfa10" loc="35:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:16" size="I:256" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr2" ref="0x7fd35c724090" loc="27:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:42" size="I:672" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="channelTable" ref="0x7fd35cd64e00" loc="68:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x7fd35cd71080"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0x7fd35cb56b80" loc="58:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:264000" alignment="I:8">
        <type-tag size="I:264" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x7fd35cc7e170"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0x7fd35cc7a2e0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="HASHMAP_CHANNEL" ref="0x7fd35c9f6090" loc="20:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="outputs" ref="0x7fd35cd649a0" loc="67:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-array elements="I:334" size="I:5344" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x7fd35cd67d90"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x7fd35cd66650"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__tzname" ref="0x7fd35cb73b30" loc="282:/usr/include/time.h">
      <type-array elements="I:2" size="I:16" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="randU" ref="0x7fd35cbb0ae0" loc="39:/home/alan/tiny/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="snr21" ref="0x7fd35c743020" loc="20:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr26" ref="0x7fd35c74b5b0" loc="17:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="timezone" ref="0x7fd35cb70900" loc="298:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x7fd35ccb5d80" loc="44:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x7fd35cd00be0"/>
        <typename><typedef-ref name="heap_t" ref="0x7fd35ccff620"/></typename>
      </type-tag>
    </variable>
    <variable name="FLOODING_CHANNEL" ref="0x7fd35c9f9470" loc="11:includes/channels.h">
      <type-array elements="I:9" size="I:9" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="SECURITYLOCK" ref="0x7fd35c8e1410" loc="399:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="137:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short> &#10; The 6LowPAN NALP ID for a TinyOS network is 63 (TEP 125).</short>
        <long> &#10; The 6LowPAN NALP ID for a TinyOS network is 63 (TEP 125).&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="snr15" ref="0x7fd35c6dbde0" loc="36:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr5" ref="0x7fd35c71a8e0" loc="28:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:46" size="I:736" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x7fd35cc2a4d0" loc="54:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x7fd35cb58600" loc="51:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr18" ref="0x7fd35c6ca830" loc="41:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randC" ref="0x7fd35cbb0d60" loc="39:/home/alan/tiny/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr10" ref="0x7fd35c6e9710" loc="33:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:26" size="I:416" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="FreqKeyNum" ref="0x7fd35cb56530" loc="56:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
      </type-int>
    </variable>
    <variable name="snr29" ref="0x7fd35c738020" loc="24:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaLow" ref="0x7fd35cc2c120" loc="47:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x7fd35cc2b020" loc="50:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr8" ref="0x7fd35c6f7a00" loc="31:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:34" size="I:544" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr31" ref="0x7fd35c6c78b0" loc="42:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:3" size="I:48" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="numTotal" ref="0x7fd35cb56020" loc="53:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x7fd35cb70540" loc="297:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x7fd35cc2b4f0" loc="51:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stdin_" ref="0x7fd35ce2f460" loc="315:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x7fd35ce2f020"/></type-tag>
    </variable>
    <variable name="allSnr" ref="0x7fd35c6c4ad0" loc="45:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:29" size="I:696" alignment="I:8">
        <type-tag size="I:24" alignment="I:8"><struct-ref name="snr_lqi" ref="0x7fd35c752570"/>
          <typename><typedef-ref name="snr_lqi_t" ref="0x7fd35c750020"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr24" ref="0x7fd35c7503f0" loc="15:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:128" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="COMMAND_CHANNEL" ref="0x7fd35c9fb810" loc="6:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="randCD" ref="0x7fd35cbaf020" loc="39:/home/alan/tiny/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr0" ref="0x7fd35c736510" loc="25:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:25" size="I:400" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="j97" ref="0x7fd35cbaf840" loc="40:/home/alan/tiny/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr13" ref="0x7fd35c6e2200" loc="34:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:13" size="I:208" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x7fd35cd9ec70" loc="78:/home/alan/tiny/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x7fd35cda7ca0" loc="27:/usr/include/x86_64-linux-gnu/bits/sys_errlist.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="snr3" ref="0x7fd35c730bf0" loc="26:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:720" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="tzname" ref="0x7fd35cb718d0" loc="289:/usr/include/time.h">
      <type-array elements="I:2" size="I:16" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="APPLICATION_CHANNEL" ref="0x7fd35c9f69d0" loc="22:includes/channels.h">
      <type-array elements="I:12" size="I:12" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x7fd35ccf8900" loc="58:/home/alan/tiny/tinyos-main/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="=va_arg" ref="0x7fd35d78f860"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stderr_" ref="0x7fd35ce2fdc0" loc="317:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x7fd35ce2f020"/></type-tag>
    </variable>
    <variable name="csmaHigh" ref="0x7fd35cc2dc90" loc="46:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x7fd35cc2b9c0" loc="52:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x7fd35c960ce0" loc="51:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="localNoise" ref="0x7fd35cbf2020" loc="10:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x7fd35cbf59a0"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0x7fd35cbf4230"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr27" ref="0x7fd35c749a50" loc="18:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="TRANSPORT_CHANNEL" ref="0x7fd35c9f7720" loc="17:includes/channels.h">
      <type-array elements="I:10" size="I:10" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="_IO_2_1_stdout_" ref="0x7fd35ce2f910" loc="316:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x7fd35ce2f020"/></type-tag>
    </variable>
    <variable name="snr16" ref="0x7fd35c6d0ae0" loc="39:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:176" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaInitLow" ref="0x7fd35cc2d810" loc="45:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr6" ref="0x7fd35c7035a0" loc="30:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:720" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="ROUTING_CHANNEL" ref="0x7fd35c9f9db0" loc="14:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="numCase2" ref="0x7fd35cb58b50" loc="52:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr19" ref="0x7fd35c6cdb70" loc="40:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:160" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sim_ticks" ref="0x7fd35cc75170" loc="51:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x7fd35cd9c1c0"/></typename>
      </type-int>
    </variable>
    <variable name="snr22" ref="0x7fd35c7418f0" loc="21:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:144" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__daylight" ref="0x7fd35cb71020" loc="283:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stderr" ref="0x7fd35ce13e60" loc="170:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7fd35ce437f0"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="connectivity" ref="0x7fd35cbf4920" loc="9:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:8008" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x7fd35cc01510"/>
            <typename><typedef-ref name="gain_entry_t" ref="0x7fd35cbff020"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="snr11" ref="0x7fd35c6ee3d0" loc="32:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:20" size="I:320" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x7fd35cda77d0" loc="26:/usr/include/x86_64-linux-gnu/bits/sys_errlist.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdin" ref="0x7fd35ce135a0" loc="168:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7fd35ce437f0"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="simTimeBuf" ref="0x7fd35cc45620" loc="183:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="NEIGHBOR_CHANNEL" ref="0x7fd35c9fab00" loc="10:includes/channels.h">
      <type-array elements="I:9" size="I:9" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="snr20" ref="0x7fd35c746330" loc="19:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:160" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sim_seed" ref="0x7fd35cc758d0" loc="53:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_LIB_VERSION" ref="0x7fd35ce776f0" loc="359:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x7fd35ce78020"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x7fd35ce77280"/></typename>
      </type-tag>
    </variable>
    <variable name="sensitivity" ref="0x7fd35cbf2370" loc="11:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr25" ref="0x7fd35c74e8f0" loc="16:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:160" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="allSnr_len" ref="0x7fd35c6b5180" loc="46:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="signgam" ref="0x7fd35ce7a810" loc="168:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x7fd35cc2d380" loc="44:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr14" ref="0x7fd35c6d8e20" loc="37:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:14" size="I:224" alignment="I:8">
        <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="stdout" ref="0x7fd35ce13a00" loc="169:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7fd35ce437f0"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="csmaAckTime" ref="0x7fd35cc2a960" loc="55:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x7fd35cc2c5f0" loc="48:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x7fd35cc2a020" loc="53:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x7fd35cc2cac0" loc="49:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="GENERAL_CHANNEL" ref="0x7fd35c9fa1b0" loc="7:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="i97" ref="0x7fd35cbaf5e0" loc="40:/home/alan/tiny/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x7fd35ca2faf0" loc="66:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x7fd35ca2f200" loc="60:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x7fd35ca30e40" loc="59:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x7fd35ca2f6b0" loc="61:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:15" size="I:15" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x7fd35ca2e090" loc="67:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7fd35cd90020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x7fd35cd90410"/></typename>
      </type-tag>
    </variable>
    <variable name="radioChannel" ref="0x7fd35c8dec90" loc="56:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="bootEvent" ref="0x7fd35c8de8e0" loc="54:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7fd35cd90020"/>
          <typename><typedef-ref name="sim_event_t" ref="0x7fd35cd90410"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x7fd35c8de1b0" loc="52:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x7fd35c8dfdb0" loc="51:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x7fd35c8de4f0" loc="53:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0x7fd35c83e090" loc="62:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
        <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x7fd35c83e4a0" loc="63:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
          <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sendEvent" ref="0x7fd35c7c31e0" loc="78:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7fd35cd90020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x7fd35cd90410"/></typename>
      </type-tag>
    </variable>
    <variable name="initialized" ref="0x7fd35c7cdc10" loc="70:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="error" ref="0x7fd35c765b50" loc="294:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="backoffCount" ref="0x7fd35c7cc5c0" loc="72:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="neededFreeSamples" ref="0x7fd35c7cc9a0" loc="73:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="sending" ref="0x7fd35c7ccd70" loc="74:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
          <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0x7fd35c7cc0d0" loc="71:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="receiveBuffer" ref="0x7fd35c7c35b0" loc="80:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
        <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
      </type-tag>
    </variable>
    <variable name="sendingLength" ref="0x7fd35c7c4920" loc="76:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0x7fd35c7c4420" loc="75:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="destNode" ref="0x7fd35c7c4da0" loc="77:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="collision" ref="0x7fd35c66a370" loc="206:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0x7fd35c6a33a0" loc="61:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0x7fd35c66ba00" loc="203:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7fd35cd90020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x7fd35cd90410"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0x7fd35c69f5e0" loc="65:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x7fd35cd9c1c0"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0x7fd35c668160" loc="208:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0x7fd35c69b410" loc="84:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:72" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x7fd35c69f910"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0x7fd35c69fd80"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0x7fd35c66a890" loc="207:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
          <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="rssi" ref="0x7fd35c6a3b90" loc="63:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="clearThreshold" ref="0x7fd35c66bd90" loc="205:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0x7fd35c69f090" loc="64:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0x7fd35c6a3020" loc="60:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
          <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0x7fd35c6a3710" loc="62:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="group" ref="0x7fd35c5b9460" loc="68:/home/alan/tiny/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x7fd35ca80bd0"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x7fd35c5b90d0" loc="67:/home/alan/tiny/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x7fd35ca7e020"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x7fd35c5bbbd0" loc="66:/home/alan/tiny/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="sendPackage" ref="0x7fd35c53f770" loc="37:Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7fd35c9f4320"/>
        <typename><typedef-ref name="pack" ref="0x7fd35c9f37a0"/></typename>
      </type-tag>
    </variable>
    <variable name="sockets" ref="0x7fd35c4cb1a0" loc="26:lib/modules/TransportP.nc">
      <component-ref qname="TransportP"/>
      <type-array elements="I:10" size="I:4440" alignment="I:4">
        <type-tag size="I:444" alignment="I:4"><struct-ref name="socket_store_t" ref="0x7fd35c586eb0"/>
          <typename><typedef-ref name="socket_store_t" ref="0x7fd35c57f9c0"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="tcpPack" ref="0x7fd35c4cb840" loc="29:lib/modules/TransportP.nc">
      <component-ref qname="TransportP"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="TCP" ref="0x7fd35c59d560"/>
        <typename><typedef-ref name="TCP" ref="0x7fd35c59a020"/></typename>
      </type-tag>
    </variable>
    <variable name="ports" ref="0x7fd35c4cbcb0" loc="30:lib/modules/TransportP.nc">
      <component-ref qname="TransportP"/>
      <type-array elements="I:10" size="I:10" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="ipPack" ref="0x7fd35c4cb4f0" loc="28:lib/modules/TransportP.nc">
      <component-ref qname="TransportP"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7fd35c9f4320"/>
        <typename><typedef-ref name="pack" ref="0x7fd35c9f37a0"/></typename>
      </type-tag>
    </variable>
    <variable name="dropCounter" ref="0x7fd35c4ca090" loc="31:lib/modules/TransportP.nc">
      <component-ref qname="TransportP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
      </type-int>
    </variable>
    <variable name="neighbors" ref="0x7fd35c2842e0" loc="23:lib/modules/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-array elements="I:17" size="I:17" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="discoveryPackage" ref="0x7fd35c285df0" loc="22:lib/modules/NeighborDiscoveryP.nc">
      <component-ref qname="NeighborDiscoveryP"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7fd35c9f4320"/>
        <typename><typedef-ref name="pack" ref="0x7fd35c9f37a0"/></typename>
      </type-tag>
    </variable>
    <variable name="sequenceNum" ref="0x7fd35c218020" loc="30:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
      </type-int>
    </variable>
    <variable name="pkt" ref="0x7fd35c218940" loc="32:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
        <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
      </type-tag>
    </variable>
    <variable name="busy" ref="0x7fd35c2184a0" loc="31:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="base" ref="0x7fd35c144020" loc="40:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0x7fd35c145940" loc="39:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x7fd35c1455e0" loc="38:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="dt" ref="0x7fd35c145ba0" loc="39:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
      </type-int>
    </variable>
    <variable name="oldScale" ref="0x7fd35c0d2ab0" loc="80:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="76:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
        <short> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero.</short>
        <long> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero. When oldScale is&#10;  AVR_CLOCK_OFF and the scale is set to something else, the&#10;  clock starts ticking. *</long>
      </documentation>
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="lastZero" ref="0x7fd35c0d25c0" loc="74:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x7fd35cd9c1c0"/></typename>
      </type-int>
    </variable>
    <variable name="overflow" ref="0x7fd35c023170" loc="480:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7fd35cd90020"/>
          <typename><typedef-ref name="sim_event_t" ref="0x7fd35cd90410"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="compare" ref="0x7fd35c0b0020" loc="185:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7fd35cd90020"/>
          <typename><typedef-ref name="sim_event_t" ref="0x7fd35cd90410"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="savedCounter" ref="0x7fd35c0d9c70" loc="58:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="inOverflow" ref="0x7fd35c0d9780" loc="57:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0x7fd35bfd77c0" loc="55:/home/alan/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
      </type-int>
    </variable>
    <variable name="m_oneshot" ref="0x7fd35bfd7b30" loc="56:/home/alan/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers_changed" ref="0x7fd35bfa0c30" loc="69:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers" ref="0x7fd35bfa0870" loc="68:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x7fd35bfa1ca0"/>
          <typename><typedef-ref name="Timer_t" scoped="" ref="0x7fd35bfa0390"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="seed" ref="0x7fd35bf3b1a0" loc="52:/home/alan/tiny/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
      </type-int>
    </variable>
    <variable name="current" ref="0x7fd35bef6dc0" loc="59:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x7fd35bef4520" loc="60:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:8">
        <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x7fd35bef66d0"/>
          <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x7fd35bef6a40"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="cancelMask" ref="0x7fd35bef4db0" loc="61:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="index" ref="0x7fd35be847f0" loc="61:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x7fd35be83190" loc="62:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-array elements="U:" size="U:" alignment="I:8">
        <type-pointer size="I:8" alignment="I:8">
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fd35be8b980"/></type-var>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="free" ref="0x7fd35be84480" loc="60:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="pool" ref="0x7fd35be83630" loc="63:/home/alan/tiny/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7fd35be8b980"/></type-var>
      </type-array>
    </variable>
    <variable name="tail" ref="0x7fd35be585a0" loc="50:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="size" ref="0x7fd35be58a40" loc="51:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x7fd35be59d80" loc="48:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7fd35be5e020"/></type-var>
      </type-array>
      <attribute-value>
        <attribute-ref name="one_nok" ref="0x7fd35d77d670"/>
        <value-structured>
          <type-tag size="I:4" alignment="I:4"><attribute-ref name="one_nok" ref="0x7fd35d77d670"/></type-tag>
        </value-structured>
      </attribute-value>
    </variable>
    <variable name="head" ref="0x7fd35be58100" loc="49:/home/alan/tiny/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="container" ref="0x7fd35be1eb30" loc="18:dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7fd35be24330"/></type-var>
      </type-array>
    </variable>
    <variable name="MAX_SIZE" ref="0x7fd35be1e550" loc="16:dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
      </type-int>
    </variable>
    <variable name="size" ref="0x7fd35be1d020" loc="19:dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
      </type-int>
    </variable>
    <variable name="numofVals" ref="0x7fd35bd8a170" loc="27:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
      </type-int>
    </variable>
    <variable name="HASH_MAX_SIZE" ref="0x7fd35bd8d220" loc="15:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
      </type-int>
    </variable>
    <variable name="map" ref="0x7fd35bd8b900" loc="25:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-tag size="U:" alignment="U:"><struct-ref name="hashmapEntry" scoped="" ref="0x7fd35bd8dbd0"/>
          <typename><typedef-ref name="hashmapEntry" scoped="" ref="0x7fd35bd8b450"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="EMPTY_KEY" ref="0x7fd35bd8d740" loc="18:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
      </type-int>
    </variable>
    <variable name="keys" ref="0x7fd35bd8bda0" loc="26:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="numServers" ref="0x7fd35bd217e0" loc="42:lib/modules/TransportObjectP.nc">
      <component-ref qname="TransportObjectP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="numClients" ref="0x7fd35bd21cc0" loc="43:lib/modules/TransportObjectP.nc">
      <component-ref qname="TransportObjectP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </variable>
    <variable name="servers" ref="0x7fd35bd202c0" loc="44:lib/modules/TransportObjectP.nc">
      <component-ref qname="TransportObjectP"/>
      <type-array elements="I:10" size="I:10400" alignment="I:2">
        <type-tag size="I:1040" alignment="I:2"><struct-ref name="server" scoped="" ref="0x7fd35bd256f0"/>
          <typename><typedef-ref name="server" scoped="" ref="0x7fd35bd24c30"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="clients" ref="0x7fd35bd20750" loc="45:lib/modules/TransportObjectP.nc">
      <component-ref qname="TransportObjectP"/>
      <type-array elements="I:10" size="I:10340" alignment="I:2">
        <type-tag size="I:1034" alignment="I:2"><struct-ref name="client" scoped="" ref="0x7fd35bd22020"/>
          <typename><typedef-ref name="client" scoped="" ref="0x7fd35bd21440"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="lobby" ref="0x7fd35bc6d3a0" loc="47:lib/modules/ChatP.nc">
      <component-ref qname="ChatP"/>
      <type-tag size="I:400" alignment="I:8"><struct-ref name="chatroom" scoped="" ref="0x7fd35bc706b0"/>
        <typename><typedef-ref name="chatroom" scoped="" ref="0x7fd35bc6d020"/></typename>
      </type-tag>
    </variable>
  </variables>
  <constants>
    <constant cst="I:46" name="CC2420_DACTST" ref="0x7fd35c9038c0" loc="219:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACIE" ref="0x7fd35c984c40" loc="1075:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x7fd35c998020" loc="943:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x7fd35c97bc80" loc="1132:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x7fd35c986340" loc="1058:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x7fd35c943d20" loc="85:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x7fd35c9e0020" loc="140:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x7fd35c9e5530" loc="81:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x7fd35c9b0460" loc="786:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x7fd35c960660" loc="1299:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x7fd35c93c260" loc="133:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_WAVE16_PWM_CAPTURE_HIGH" ref="0x7fd35c1a51e0" loc="222:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x7fd35c944b70" loc="80:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x7fd35c9c6a90" loc="705:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x7fd35c99bc70" loc="924:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x7fd35c97b020" loc="1126:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x7fd35c977660" loc="1154:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x7fd35c99cca0" loc="919:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x7fd35c973ca0" loc="1182:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="CC2420_STATUS_TX_UNDERFLOW" ref="0x7fd35c90eb80" loc="169:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="CC2420_FSTST3" ref="0x7fd35c904a70" loc="215:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x7fd35c9819a0" loc="1093:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x7fd35c97fc20" loc="1106:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x7fd35c9a2340" loc="876:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x7fd35c99e340" loc="902:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x7fd35ca765f0" loc="98:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x7fd35c9c9da0" loc="687:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MDMCTRL0_PAN_COORDINATOR" ref="0x7fd35c8fbc00" loc="258:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x7fd35c9a1020" loc="882:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x7fd35c996c80" loc="961:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="P_ALL" ref="0x7fd35d502200" loc="52:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x7fd35c9b4760" loc="763:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_CCM" ref="0x7fd35c8e3510" loc="389:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x7fd35c9c2140" loc="730:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x7fd35c964ca0" loc="1275:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-1" name="_IEEE_" ref="0x7fd35ce783b0" loc="349:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_WAVE16_PWM_FAST_COMPARE" ref="0x7fd35c1a4390" loc="227:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SYN_SENT" ref="0x7fd35c58b880" loc="21:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SYN_RCVD" ref="0x7fd35c58bb20" loc="22:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x7fd35c9a5660" loc="858:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x7fd35c99b020" loc="920:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_TXCTRL_TXMIX_CURRENT" ref="0x7fd35c8f5260" loc="288:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_WAVE16_RESERVED" ref="0x7fd35c1a5bb0" loc="225:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x7fd35c947640" loc="64:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x7fd35c9d6de0" loc="269:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x7fd35c9c4140" loc="714:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="CC2420_MANOR" ref="0x7fd35c906dc0" loc="207:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x7fd35c9a8630" loc="839:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_SECCTRL0_SEC_RXKEYSEL" ref="0x7fd35c8edc20" loc="331:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="_ISgraph" ref="0x7fd35ce6b7d0" loc="55:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x7fd35c9dee00" loc="169:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x7fd35c9999a0" loc="939:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x7fd35c949b70" loc="52:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x7fd35c979020" loc="1138:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x7fd35c975620" loc="1166:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x7fd35c9d4a80" loc="283:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x7fd35c996330" loc="956:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x7fd35c971c40" loc="1194:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x7fd35c96c320" loc="1222:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PROTOCOL_NAME" ref="0x7fd35c9ff140" loc="13:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="CC2420_FSCTRL" ref="0x7fd35c908a70" loc="197:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RAM_TXFIFO" ref="0x7fd35c9016f0" loc="226:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CTR" ref="0x7fd35c8e2670" loc="394:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_MDMCTRL1_MODULATION_MODE" ref="0x7fd35c8f8440" loc="270:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK8_DIVIDE_128" ref="0x7fd35c1c29b0" loc="58:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x7fd35c9a7980" loc="847:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x7fd35c982960" loc="1086:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x7fd35c9c9470" loc="684:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MANFIDL_MANFID" ref="0x7fd35c8e75f0" loc="364:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x7fd35c9d23b0" loc="298:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x7fd35c9bedc0" loc="760:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x7fd35c9acda0" loc="817:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x7fd35c98f660" loc="1004:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FIN_WAIT_1" ref="0x7fd35c58bdd0" loc="23:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_WAVE16_PWM_FAST_8BIT" ref="0x7fd35c1a6060" loc="217:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x7fd35c9e98b0" loc="36:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_TXCTRL_TXMIX_CAP_ARRAY" ref="0x7fd35c8f6d70" loc="287:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x7fd35c9a7020" loc="844:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x7fd35c96dca0" loc="1218:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x7fd35c968340" loc="1246:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="LISTEN" ref="0x7fd35c58b0b0" loc="18:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="CC2420_MANAND" ref="0x7fd35c906a60" loc="206:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x7fd35c997990" loc="953:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x7fd35c93f980" loc="109:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_WAVE16_CTC_CAPTURE" ref="0x7fd35c1a5890" loc="224:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x7fd35c99e020" loc="901:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SECCTRL0_SEC_CBC_HEAD" ref="0x7fd35c8ed020" loc="328:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x7fd35c9dea80" loc="166:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x7fd35c94b410" loc="128:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AVR_CLOCK_DIVIDE_8" ref="0x7fd35c1be570" loc="78:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_COMPARE_SET" ref="0x7fd35c1bc480" loc="94:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x7fd35c97e960" loc="1112:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK8_NORMAL" ref="0x7fd35c1c6a40" loc="54:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x7fd35c9c1ac0" loc="740:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x7fd35c981680" loc="1092:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x7fd35c966650" loc="1261:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1024" name="_ISalpha" ref="0x7fd35ce6f070" loc="50:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x7fd35ca75810" loc="106:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x7fd35c9e8a40" loc="47:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_SACK" ref="0x7fd35c90bc40" loc="184:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CMD_PACKET_HEADER_LENGTH" ref="0x7fd35c9fe5f0" loc="11:includes/CommandMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x7fd35c9dc020" loc="182:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MANFIDH_PARTNUM" ref="0x7fd35c8e6140" loc="369:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x7fd35c9dfc40" loc="154:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x7fd35cc83df0" loc="56:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x7fd35c997020" loc="948:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x7fd35c98f340" loc="1003:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_IOCFG0_BCN_ACCEPT" ref="0x7fd35c8ea710" loc="348:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SYN_ACK" ref="0x7fd35c59e940" loc="20:includes/TCP.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_RXCTRL1_HIGH_HGM" ref="0x7fd35c8f1510" loc="309:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="MAX_TTL" ref="0x7fd35c9f4020" loc="15:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x7fd35c9b2de0" loc="779:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x7fd35c9ac140" loc="811:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x7fd35c9aba40" loc="821:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x7fd35c966320" loc="1258:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x7fd35c9af770" loc="794:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x7fd35c962020" loc="1283:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x7fd35c990660" loc="997:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x7fd35c942a40" loc="89:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE8_CTC" ref="0x7fd35c1bd160" loc="85:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x7fd35c9dce10" loc="194:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CMD_ERROR" ref="0x7fd35c5a2510" loc="20:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x7fd35c9b2140" loc="773:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="MAC_PACKET_SIZE" ref="0x7fd35c9127e0" loc="150:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x7fd35c9caaf0" loc="679:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x7fd35c9c3de0" loc="727:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x7fd35c946360" loc="68:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x7fd35c946d40" loc="71:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x7fd35c9c3140" loc="721:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x7fd35ca78b80" loc="89:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_FSMTC_TC_TXEND2PAOFF" ref="0x7fd35c8e5810" loc="377:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x7fd35c98cc60" loc="1025:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_WAVE16_PWM_FAST_9BIT" ref="0x7fd35c1a63b0" loc="218:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x7fd35c93b670" loc="145:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_SVID_" ref="0x7fd35ce78630" loc="350:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="CC2420_BATTMON" ref="0x7fd35c907560" loc="200:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CMD_UNICAST" ref="0x7fd35c5a1370" loc="24:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x7fd35cf41db0" loc="56:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x7fd35c93b9b0" loc="146:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x7fd35c9d51d0" loc="272:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_IOCFG1_CCAMUX" ref="0x7fd35c8e8ae0" loc="359:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RXCTRL0_MED_LNA_GAIN" ref="0x7fd35c8f4d10" loc="297:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x7fd35c965950" loc="1267:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x7fd35c962c60" loc="1289:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x7fd35c98b340" loc="1027:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="CC2420_NONCE_FLAGS" ref="0x7fd35c8fd600" loc="244:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x7fd35c978950" loc="1148:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x7fd35c973020" loc="1176:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x7fd35c96f640" loc="1204:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x7fd35c96bc60" loc="1232:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="CC2420_MDMCTRL1" ref="0x7fd35c9094c0" loc="191:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x7fd35c9af460" loc="793:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x7fd35c99aca0" loc="933:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CLOSING" ref="0x7fd35c58a340" loc="25:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x7fd35c96b320" loc="1227:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x7fd35c9b1780" loc="782:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x7fd35c993c60" loc="980:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x7fd35c967920" loc="1255:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RSSI_CCA_THR" ref="0x7fd35c8f7360" loc="276:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK8_DIVIDE_8" ref="0x7fd35c1c6df0" loc="55:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x7fd35c98b670" loc="1030:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x7fd35c9e74c0" loc="54:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x7fd35c9e9c20" loc="39:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x7fd35c9d63b0" loc="264:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x7fd35c9c47a0" loc="718:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK8_DIVIDE_32" ref="0x7fd35c1c2230" loc="56:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x7fd35c9da390" loc="216:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x7fd35c9aeaa0" loc="802:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x7fd35c963340" loc="1277:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x7fd35c961ca0" loc="1296:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x7fd35c9c7450" loc="696:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x7fd35c9a5c80" loc="860:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x7fd35c97c660" loc="1123:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x7fd35c9d8020" loc="238:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x7fd35ca76bb0" loc="103:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x7fd35c9e1c00" loc="139:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x7fd35c978c90" loc="1151:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_TXCTRL_RESERVED" ref="0x7fd35c8f5a00" loc="290:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="NO_SEC" ref="0x7fd35c8e3830" loc="390:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="LAST_ACK" ref="0x7fd35c58ab30" loc="28:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x7fd35c97f320" loc="1103:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x7fd35c9e11c0" loc="134:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_SACKPEND" ref="0x7fd35c90a020" loc="185:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x7fd35c93cbf0" loc="139:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x7fd35c97d950" loc="1117:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x7fd35c978020" loc="1145:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x7fd35c974640" loc="1173:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x7fd35c970c50" loc="1201:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x7fd35c93c5b0" loc="134:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_FSCTRL_LOCK_STATUS" ref="0x7fd35c8ee020" loc="322:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x7fd35cc82d00" loc="60:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x7fd35c9d4020" loc="278:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="CC2420_RAM_RXFIFO" ref="0x7fd35c901a80" loc="227:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x7fd35c9c1140" loc="735:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x7fd35c964340" loc="1272:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK8_DIVIDE_1024" ref="0x7fd35c1c1240" loc="60:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x7fd35c965640" loc="1266:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x7fd35c962950" loc="1288:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_WAVE16_PWM_FAST_CAPTURE" ref="0x7fd35c1a4020" loc="226:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SFLUSHRX" ref="0x7fd35c90b570" loc="182:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CBC_MAC_4" ref="0x7fd35c8e3b70" loc="391:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x7fd35c9a6020" loc="849:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FIN" ref="0x7fd35c59eba0" loc="21:includes/TCP.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x7fd35c9a7340" loc="845:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x7fd35c99dcc0" loc="912:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x7fd35c94b070" loc="127:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x7fd35c9a3980" loc="873:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UPD" ref="0x7fd35c59d0d0" loc="23:includes/TCP.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x7fd35cebdac0" loc="60:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_RXCTRL0_LOW_LNA_GAIN" ref="0x7fd35c8f3140" loc="298:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x7fd35c98c340" loc="1022:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x7fd35c945a90" loc="75:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x7fd35c9d2740" loc="301:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x7fd35c9d15b0" loc="313:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_ISblank" ref="0x7fd35ce6a620" loc="56:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x7fd35c989020" loc="1040:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x7fd35c982640" loc="1085:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x7fd35c9aa3d0" loc="826:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="CC2420_FSTST0" ref="0x7fd35c904020" loc="212:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x7fd35c93ee80" loc="121:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x7fd35c9d98d0" loc="232:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x7fd35c99f020" loc="894:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x7fd35c995c80" loc="968:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_SXOSCOFF" ref="0x7fd35c90b1f0" loc="181:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_IOCFG1_HSSD_SRC" ref="0x7fd35c8e8380" loc="357:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x7fd35c9ac780" loc="815:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x7fd35c9e5c20" loc="87:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x7fd35c9c6db0" loc="706:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x7fd35c972ca0" loc="1187:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x7fd35c96d340" loc="1215:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x7fd35c9699a0" loc="1243:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x7fd35c9dc390" loc="185:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x7fd35c9dd8c0" loc="176:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_TXCTRL_PA_LEVEL" ref="0x7fd35c8f5dc0" loc="291:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x7fd35c997660" loc="950:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x7fd35c9d31d0" loc="287:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x7fd35c948c20" loc="61:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x7fd35c945750" loc="74:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x7fd35c93f340" loc="107:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x7fd35c96ac60" loc="1237:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x7fd35c9de700" loc="163:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x7fd35c9c0aa0" loc="745:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_NONCE_FRAME_COUNTER" ref="0x7fd35c8fed60" loc="242:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x7fd35c9e1880" loc="136:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x7fd35c9d6a80" loc="268:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x7fd35c9b2780" loc="775:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x7fd35cebd460" loc="58:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x7fd35c946a00" loc="70:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x7fd35c945400" loc="73:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x7fd35cc847e0" loc="52:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x7fd35c9439e0" loc="84:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x7fd35c9ab140" loc="818:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x7fd35c983ca0" loc="1082:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x7fd35c998660" loc="945:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="CC2420_SECCTRL0" ref="0x7fd35c908df0" loc="198:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x7fd35c97a320" loc="1134:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x7fd35c976960" loc="1162:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x7fd35c9e0df0" loc="146:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x7fd35c9d7540" loc="254:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CMD_PING" ref="0x7fd35c9ebbd0" loc="13:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x7fd35c9ece20" loc="27:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x7fd35c9e4a80" loc="99:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x7fd35c97b660" loc="1128:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x7fd35c977ca0" loc="1156:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x7fd35c972340" loc="1184:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x7fd35c96e990" loc="1212:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x7fd35c99d680" loc="910:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_IOCFG0_SFD_POLARITY" ref="0x7fd35c8e9410" loc="351:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x7fd35c9c6140" loc="700:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x7fd35c989c80" loc="1044:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x7fd35c98f980" loc="1005:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="CC2420_AGCTST0" ref="0x7fd35c9054c0" loc="209:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x7fd35c97e320" loc="1108:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x7fd35c991680" loc="992:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x7fd35c9b37a0" loc="770:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_SECCTRL0_SEC_TXKEYSEL" ref="0x7fd35c8ed820" loc="330:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x7fd35c9c8450" loc="689:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x7fd35c98c020" loc="1021:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_TIMER_COMPARE_SET" ref="0x7fd35c1ab380" loc="189:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x7fd35c9a1660" loc="884:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x7fd35c9b4d80" loc="765:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x7fd35c93d1b0" loc="122:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_WAVE16_CTC_COMPARE" ref="0x7fd35c1a7cd0" loc="216:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x7fd35c99f660" loc="896:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_BATTMON_BATTMON_EN" ref="0x7fd35c8ebae0" loc="343:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x7fd35c9a8c30" loc="841:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PROTOCOL_DV" ref="0x7fd35c9ff7f0" loc="15:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x7fd35c987020" loc="1052:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x7fd35cc84bf0" loc="53:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x7fd35c995020" loc="962:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="CC2420_RXCTRL0" ref="0x7fd35c908390" loc="195:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_STATUS_LOCK" ref="0x7fd35c90faa0" loc="166:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x7fd35c9e8370" loc="43:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x7fd35c999360" loc="937:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x7fd35c975c20" loc="1168:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x7fd35c970320" loc="1196:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x7fd35c96c920" loc="1224:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x7fd35c967020" loc="1252:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_RXCTRL1_LNA_CAP_ARRAY" ref="0x7fd35c8f1cd0" loc="311:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_FSCTRL_FREQ" ref="0x7fd35c8ee3c0" loc="323:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x7fd35c981020" loc="1088:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x7fd35c9c9a90" loc="686:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x7fd35c992640" loc="985:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x7fd35c9441b0" loc="77:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FP_NAN" ref="0x7fd35ce7adc0" loc="211:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="PACKET_MAX_PAYLOAD_SIZE" ref="0x7fd35c9f5b70" loc="14:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x7fd35c9d2020" loc="295:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_COMPARE_OFF" ref="0x7fd35c1bdb10" loc="91:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_NONCE_SOURCE_ADDRESS" ref="0x7fd35c8fd260" loc="243:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x7fd35cc825d0" loc="58:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK16_EXTERNAL_RISE" ref="0x7fd35c1bf650" loc="71:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x7fd35c9e43a0" loc="93:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x7fd35c985980" loc="1067:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x7fd35c968980" loc="1248:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x7fd35c9a6640" loc="851:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ITIMER_VIRTUAL" ref="0x7fd35cc8d440" loc="97:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x7fd35c99c020" loc="913:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SLOW_START" ref="0x7fd35c589360" loc="32:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CMD_KILL" ref="0x7fd35c5a21d0" loc="19:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x7fd35c99fcb0" loc="900:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x7fd35c986cc0" loc="1063:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x7fd35c9db1c0" loc="197:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACK" ref="0x7fd35c59e450" loc="18:includes/TCP.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="CC2420_IOCFG0" ref="0x7fd35c9078d0" loc="201:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x7fd35c97d020" loc="1114:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x7fd35c979660" loc="1142:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x7fd35c9be780" loc="756:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x7fd35c9c1460" loc="736:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x7fd35c966c70" loc="1263:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x7fd35c9bfde0" loc="753:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SECCTRL1_SEC_TXL" ref="0x7fd35c8ecb00" loc="337:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="CC2420_STATUS_ENC_BUSY" ref="0x7fd35c90e5e0" loc="168:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x7fd35c9be140" loc="754:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x7fd35c99a640" loc="929:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x7fd35c9a3020" loc="870:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x7fd35c9d9c60" loc="235:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_TIME_ACK_TURNAROUND" ref="0x7fd35c911530" loc="156:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_FSCTRL_LOCK_THR" ref="0x7fd35c8ef020" loc="318:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CMD_START_CHAT" ref="0x7fd35c5a2c10" loc="22:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x7fd35c9a4340" loc="864:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x7fd35c991cc0" loc="994:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:304" name="CC2420_RAM_KEY1" ref="0x7fd35c900920" loc="231:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x7fd35c9dbc60" loc="210:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x7fd35c990980" loc="998:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x7fd35c987980" loc="1055:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x7fd35c984330" loc="1072:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x7fd35c9b0140" loc="785:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x7fd35c9ad790" loc="808:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_MAIN_DEMOD_RESETn" ref="0x7fd35c8fc490" loc="250:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x7fd35c9ab740" loc="820:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x7fd35c962620" loc="1285:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x7fd35c9d2ad0" loc="304:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x7fd35c9df8b0" loc="151:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x7fd35c9d3540" loc="288:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x7fd35c997c90" loc="954:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x7fd35c982020" loc="1083:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x7fd35c980640" loc="1097:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x7fd35c9436a0" loc="83:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x7fd35c93fca0" loc="110:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="FP_ZERO" ref="0x7fd35ce794c0" loc="217:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x7fd35c9a0680" loc="891:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x7fd35c9c3780" loc="723:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_RXCTRL1_RXBPF_MIDCUR" ref="0x7fd35c8f2910" loc="306:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_TIME_SYMBOL" ref="0x7fd35c911c60" loc="158:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x7fd35c988340" loc="1046:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x7fd35c9d4710" loc="282:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x7fd35c9d1cb0" loc="319:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x7fd35c961330" loc="1291:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SERVER" ref="0x7fd35c58c600" loc="12:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x7fd35cd9e590" loc="76:/home/alan/tiny/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x7fd35cebd140" loc="57:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x7fd35c936750" loc="61:/home/alan/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CMD_BROADCAST" ref="0x7fd35c5a1020" loc="23:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x7fd35c973640" loc="1178:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x7fd35c96fc60" loc="1206:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x7fd35c96a330" loc="1234:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x7fd35c936020" loc="58:/home/alan/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x7fd35c9aedc0" loc="803:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="AM_COMMANDMSG" ref="0x7fd35c9fb350" loc="23:includes/CommandMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK16_OFF" ref="0x7fd35c1c19e0" loc="64:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x7fd35c9c0dc0" loc="746:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_XOPEN_" ref="0x7fd35ce788c0" loc="351:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x7fd35c9c8a80" loc="691:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x7fd35c99ec80" loc="905:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x7fd35c981cb0" loc="1094:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="CC2420_ACK_WAIT_DELAY" ref="0x7fd35c910c30" loc="161:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_FSCTRL_CAL_DONE" ref="0x7fd35c8ef3e0" loc="319:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x7fd35c94b7f0" loc="129:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x7fd35c98a330" loc="1034:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x7fd35c97b980" loc="1131:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE8_PWM_FAST" ref="0x7fd35c1bd480" loc="86:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x7fd35c9b1dc0" loc="784:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x7fd35cd67a30" loc="48:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x7fd35c9e9530" loc="33:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x7fd35c960340" loc="1298:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_COMPARE_CLEAR" ref="0x7fd35c1bc180" loc="93:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x7fd35c9c7a70" loc="698:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x7fd35c9c6780" loc="704:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PROTOCOL_TCP" ref="0x7fd35c9ff4a0" loc="14:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x7fd35c9d8de0" loc="250:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x7fd35c99b960" loc="923:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x7fd35c97cca0" loc="1125:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x7fd35c977340" loc="1153:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x7fd35c973980" loc="1181:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="CC2420_TOPTST" ref="0x7fd35c903c30" loc="220:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x7fd35c993330" loc="977:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_CTR" ref="0x7fd35c8e31c0" loc="388:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CLOSED" ref="0x7fd35c58cdd0" loc="17:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x7fd35c994970" loc="974:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x7fd35c97f920" loc="1105:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AIMD" ref="0x7fd35c5895d0" loc="33:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_STXON" ref="0x7fd35c90c6e0" loc="178:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x7fd35c945dd0" loc="76:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CC2420_SXOSCON" ref="0x7fd35c90db80" loc="175:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x7fd35c9a2cc0" loc="881:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x7fd35c9d8a70" loc="247:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x7fd35c9b4450" loc="762:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x7fd35c9d5540" loc="273:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x7fd35c9d4df0" loc="284:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x7fd35c9c2aa0" loc="733:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x7fd35c964980" loc="1274:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_MDMCTRL0_AUTOCRC" ref="0x7fd35c8faba0" loc="262:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FIN_ACK" ref="0x7fd35c59ee30" loc="22:includes/TCP.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x7fd35c9a0020" loc="887:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x7fd35c947950" loc="65:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x7fd35c9c5db0" loc="713:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RXCTRL1_RXMIX_CURRENT" ref="0x7fd35c8f0920" loc="314:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x7fd35c9a2020" loc="875:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x7fd35cc83480" loc="55:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SFDMUX_SFD" ref="0x7fd35c8e4020" loc="381:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_MDMCTRL0_AUTOACK" ref="0x7fd35c8f9020" loc="263:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_SRFOFF" ref="0x7fd35c90cdd0" loc="180:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_RXCTRL0_HIGH_LNA_GAIN" ref="0x7fd35c8f4920" loc="296:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x7fd35c97ac20" loc="1137:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x7fd35c975320" loc="1165:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_ISpunct" ref="0x7fd35ce682b0" loc="58:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x7fd35c996020" loc="955:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x7fd35c971940" loc="1193:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x7fd35c96c020" loc="1221:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESTABLISHED" ref="0x7fd35c58b360" loc="19:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x7fd35c9d2e60" loc="307:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x7fd35c9a7660" loc="846:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x7fd35c9dd1d0" loc="172:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x7fd35c9ae140" loc="799:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x7fd35c9aa9f0" loc="828:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x7fd35c9a99b0" loc="835:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x7fd35c9bfac0" loc="752:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x7fd35c989660" loc="1042:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CCM_4" ref="0x7fd35c8e2990" loc="395:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_MAIN_ENC_RESETn" ref="0x7fd35c8fc0b0" loc="249:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x7fd35c9beab0" loc="759:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16384" name="_ISprint" ref="0x7fd35ce6c980" loc="54:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x7fd35c98a020" loc="1033:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK16_DIVIDE_1024" ref="0x7fd35c1c0da0" loc="69:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x7fd35c9c5460" loc="708:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x7fd35c9e31c0" loc="105:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x7fd35c990020" loc="995:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FIN_WAIT_2" ref="0x7fd35c58a0b0" loc="24:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_STXENC" ref="0x7fd35c90a700" loc="187:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x7fd35c96d980" loc="1217:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x7fd35c968020" loc="1245:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="CC2420_SYNCWORD" ref="0x7fd35c909b90" loc="193:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x7fd35c9ca4c0" loc="677:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x7fd35c9c9140" loc="681:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:360" name="CC2420_RAM_PANID" ref="0x7fd35c8ff7e0" loc="235:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x7fd35c9df1d0" loc="149:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x7fd35c948600" loc="59:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x7fd35c940bd0" loc="105:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x7fd35c97e650" loc="1111:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x7fd35c936370" loc="59:/home/alan/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x7fd35c9c0460" loc="743:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x7fd35c981360" loc="1091:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x7fd35c9466b0" loc="69:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x7fd35c986680" loc="1061:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x7fd35c93e350" loc="112:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x7fd35c943360" loc="82:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x7fd35c9d7c40" loc="258:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x7fd35c998ca0" loc="947:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x7fd35c97a920" loc="1136:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x7fd35c98f020" loc="1002:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x7fd35c9e0390" loc="141:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x7fd35c975020" loc="1164:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x7fd35c971640" loc="1192:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:352" name="CC2420_RAM_IEEEADR" ref="0x7fd35c8ff450" loc="234:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_POSIX_" ref="0x7fd35ce78b50" loc="352:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CMD_ROUTETABLE_DUMP" ref="0x7fd35c5a3760" loc="16:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x7fd35c9b0aa0" loc="790:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x7fd35c966020" loc="1257:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x7fd35c963c80" loc="1282:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x7fd35c990340" loc="996:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_MDMCTRL1_TX_MODE" ref="0x7fd35c8f8810" loc="271:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="SEND_BUFFER_SIZE" ref="0x7fd35c5a0370" loc="9:includes/sendInfo.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_RXCTRL1_LOW_LOWGAIN" ref="0x7fd35c8f2d00" loc="307:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x7fd35c9b3de0" loc="772:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="ROOT_SOCKET_ADDR" ref="0x7fd35c594960" loc="6:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_MDMCTRL0_RESERVED_FRAME_MODE" ref="0x7fd35c8fb7e0" loc="257:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x7fd35c9e6700" loc="69:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x7fd35c9c4de0" loc="720:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x7fd35c98e640" loc="1011:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x7fd35c9cae00" loc="680:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CMD_CLIENT_CLOSE" ref="0x7fd35c5a28a0" loc="21:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_MDMCTRL1_DEMOD_AVG_MODE" ref="0x7fd35c8f8020" loc="269:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="CC2420_RXFIFO" ref="0x7fd35c902390" loc="222:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x7fd35c9de390" loc="160:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE16_NORMAL" ref="0x7fd35c1a7020" loc="212:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x7fd35c94bb80" loc="130:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="__codecvt_error" ref="0x7fd35ce395f0" loc="180:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_MDMCTRL1_CORR_THR" ref="0x7fd35c8f9b50" loc="268:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x7fd35c978640" loc="1147:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x7fd35c974c60" loc="1175:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x7fd35c96f330" loc="1203:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x7fd35c96b950" loc="1231:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DATA" ref="0x7fd35c59e1f0" loc="17:includes/TCP.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x7fd35c9ac460" loc="812:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x7fd35c999020" loc="934:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x7fd35c970920" loc="1198:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x7fd35c9b1aa0" loc="783:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x7fd35c993950" loc="979:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x7fd35c96b020" loc="1226:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x7fd35c967620" loc="1254:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x7fd35c9e2020" loc="119:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x7fd35c985020" loc="1064:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PROTOCOL_LINKSTATE" ref="0x7fd35ca00da0" loc="12:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x7fd35c9377e0" loc="56:/home/alan/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x7fd35c992020" loc="983:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PROTOCOL_DISCOVER" ref="0x7fd35c9ffb80" loc="16:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x7fd35c9a5340" loc="857:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK16_NORMAL" ref="0x7fd35c1c1d80" loc="65:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x7fd35c9c5790" loc="711:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x7fd35c98dc60" loc="1020:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x7fd35c9ad470" loc="807:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x7fd35c9dc710" loc="188:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x7fd35ce3d140" loc="62:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x7fd35c9e38b0" loc="111:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x7fd35c9c7140" loc="695:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x7fd35c9a5970" loc="859:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x7fd35c99c640" loc="915:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x7fd35c99c980" loc="918:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x7fd35c983660" loc="1078:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x7fd35c97c340" loc="1122:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_STXCAL" ref="0x7fd35c90c020" loc="176:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x7fd35c9d71d0" loc="253:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CMD_TEST_CLIENT" ref="0x7fd35c5a3ae0" loc="17:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="SOCKET_BUFFER_SIZE" ref="0x7fd35c58c140" loc="8:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x7fd35c9450b0" loc="72:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x7fd35c9d91d0" loc="226:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="__codecvt_partial" ref="0x7fd35ce39310" loc="179:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x7fd35c984930" loc="1074:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x7fd35c98e950" loc="1012:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x7fd35c97f020" loc="1102:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x7fd35ca75400" loc="105:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x7fd35c937bf0" loc="57:/home/alan/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x7fd35c97d640" loc="1116:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x7fd35c979c80" loc="1144:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x7fd35c974330" loc="1172:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x7fd35c9c2dc0" loc="734:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x7fd35c964020" loc="1271:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE16_PWM_10BIT" ref="0x7fd35c1a7990" loc="215:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x7fd35c965330" loc="1265:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x7fd35c93f020" loc="106:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x7fd35c9c4480" loc="717:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MANFIDL_PARTNUM" ref="0x7fd35c8e7230" loc="363:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x7fd35c99a020" loc="927:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PROTOCOL_PINGREPLY" ref="0x7fd35ca00a00" loc="11:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CLIENT" ref="0x7fd35c58c880" loc="13:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x7fd35c9a7ca0" loc="848:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x7fd35c99d9a0" loc="911:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_IOCFG0_CCA_POLARITY" ref="0x7fd35c8e9800" loc="352:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="TIME_WAIT" ref="0x7fd35c58a890" loc="27:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x7fd35c9a3660" loc="872:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ELAST" ref="0x7fd35ce3dae0" loc="65:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x7fd35c98d320" loc="1015:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x7fd35c9abd60" loc="822:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x7fd35c9420b0" loc="86:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_IOCFG0_FIFOP_POLARITY" ref="0x7fd35c8e9020" loc="350:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_BATTMON_BATTMON_VOLTAGE" ref="0x7fd35c8ea020" loc="344:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x7fd35c983020" loc="1076:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CC2420_MANFIDL" ref="0x7fd35c906020" loc="203:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x7fd35c9e6020" loc="63:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x7fd35c9d0070" loc="322:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_NO_SEC" ref="0x7fd35c8e4ac0" loc="386:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x7fd35c996960" loc="960:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x7fd35c995320" loc="963:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x7fd35c994c80" loc="975:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x7fd35c982330" loc="1084:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x7fd35c93d840" loc="127:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK16_DIVIDE_64" ref="0x7fd35c1c05f0" loc="67:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="CC2420_FSTST1" ref="0x7fd35c904390" loc="213:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x7fd35c988960" loc="1048:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="P_PID" ref="0x7fd35d502480" loc="53:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x7fd35c9d9550" loc="229:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="ROOT_SOCKET_PORT" ref="0x7fd35c594cf0" loc="7:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x7fd35c9a0cc0" loc="893:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x7fd35c9aa6e0" loc="827:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x7fd35c9e51c0" loc="78:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CC2420_CBC_MAC" ref="0x7fd35c8e4e30" loc="387:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SNOP" ref="0x7fd35c90d810" loc="174:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CBC_MAC_8" ref="0x7fd35c8e2020" loc="392:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x7fd35c976340" loc="1158:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x7fd35c9b0790" loc="789:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x7fd35c9a8020" loc="837:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x7fd35c972980" loc="1186:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x7fd35c96d020" loc="1214:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x7fd35c991020" loc="988:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x7fd35c969680" loc="1242:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_TIMER_COMPARE_CLEAR" ref="0x7fd35c1ab020" loc="188:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RXCTRL0_LOW_LNA_CURRENT" ref="0x7fd35c8f3d80" loc="301:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x7fd35c9bf480" loc="750:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x7fd35c997340" loc="949:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x7fd35c947020" loc="62:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x7fd35c995630" loc="964:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x7fd35c994020" loc="969:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x7fd35c96e330" loc="1208:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x7fd35c96a950" loc="1236:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_TXCTRL_TXMIXBUF_CUR" ref="0x7fd35c8f6570" loc="285:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x7fd35c9ae460" loc="800:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE16_PWM_9BIT" ref="0x7fd35c1a7660" loc="214:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_ISOC_" ref="0x7fd35ce78df0" loc="353:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x7fd35c9c0780" loc="744:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x7fd35c98a950" loc="1036:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x7fd35c9d8390" loc="241:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x7fd35c980330" loc="1096:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MAC_FOOTER_SIZE" ref="0x7fd35c912020" loc="148:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x7fd35c998340" loc="944:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="CC2420_SECCTRL1" ref="0x7fd35c9071f0" loc="199:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x7fd35c985ca0" loc="1068:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x7fd35c97a020" loc="1133:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x7fd35c976660" loc="1161:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x7fd35c9e4020" loc="90:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x7fd35c9da020" loc="213:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_STATUS_RSSI_VALID" ref="0x7fd35c90f550" loc="165:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x7fd35c989340" loc="1041:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="__codecvt_ok" ref="0x7fd35ce39020" loc="178:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x7fd35c9c7d90" loc="699:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x7fd35c97b340" loc="1127:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x7fd35c977980" loc="1155:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x7fd35c972020" loc="1183:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x7fd35c96e670" loc="1211:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="CC2420_FSTST2" ref="0x7fd35c904700" loc="214:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_NONCE_KEY_SEQ_COUNTER" ref="0x7fd35c8fe970" loc="241:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CCM_16" ref="0x7fd35c8e1020" loc="397:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x7fd35c985660" loc="1066:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CCM_8" ref="0x7fd35c8e2cb0" loc="396:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="CC2420_AGCTST1" ref="0x7fd35c905830" loc="210:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x7fd35c97e020" loc="1107:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x7fd35c9a2660" loc="877:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x7fd35c99e660" loc="903:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK8_DIVIDE_256" ref="0x7fd35c1c2d70" loc="59:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x7fd35c9b3480" loc="769:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x7fd35c9c8140" loc="688:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x7fd35c9373b0" loc="55:/home/alan/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x7fd35c93f660" loc="108:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x7fd35c9a4ca0" loc="867:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x7fd35c9a1340" loc="883:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_RXCTRL0_HIGH_LNA_CURRENT" ref="0x7fd35c8f3560" loc="299:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x7fd35c9b4a70" loc="764:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x7fd35c9d4390" loc="279:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x7fd35c9c2460" loc="731:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ITIMER_PROF" ref="0x7fd35cc8d7d0" loc="101:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x7fd35c963020" loc="1276:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x7fd35c961980" loc="1295:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x7fd35c93e6b0" loc="116:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_SFLUSHTX" ref="0x7fd35c90b8f0" loc="183:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_RXCTRL1_RXMIX_TAIL" ref="0x7fd35c8f0140" loc="312:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x7fd35c9a6c90" loc="855:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x7fd35c99b340" loc="921:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="CC2420_MAIN" ref="0x7fd35c90ada0" loc="189:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="NAMED" ref="0x7fd35c58b5e0" loc="20:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x7fd35c9423f0" loc="87:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x7fd35c947330" loc="63:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_WAVE16_PWM_CAPTURE_LOW" ref="0x7fd35c1a6a80" loc="220:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x7fd35c9a8930" loc="840:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x7fd35c9e0a80" loc="145:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x7fd35c9cee60" loc="675:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK16_DIVIDE_256" ref="0x7fd35c1c09c0" loc="68:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x7fd35c9e3c50" loc="116:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x7fd35ca77e40" loc="96:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x7fd35c9e8020" loc="41:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_IScntrl" ref="0x7fd35ce69460" loc="57:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x7fd35c999680" loc="938:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x7fd35c98d930" loc="1017:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="CC2420_RXCTRL1" ref="0x7fd35c908700" loc="196:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x7fd35c975920" loc="1167:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x7fd35c996640" loc="957:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x7fd35c970020" loc="1195:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x7fd35c96c620" loc="1223:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x7fd35c968ca0" loc="1251:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="CC2420_RSSI" ref="0x7fd35c909810" loc="192:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:336" name="CC2420_RAM_CBCSTATE" ref="0x7fd35c8ff0b0" loc="233:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_NONCE_BLOCK_COUNTER" ref="0x7fd35c8fe570" loc="240:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_WAVE16_PWM_FAST_10BIT" ref="0x7fd35c1a6710" loc="219:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x7fd35c982c80" loc="1087:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x7fd35c9c9780" loc="685:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x7fd35c9b1460" loc="781:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x7fd35c9a9070" loc="830:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x7fd35c992330" loc="984:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x7fd35c988020" loc="1045:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x7fd35c94a020" loc="131:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x7fd35c9aad00" loc="829:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x7fd35c9d3c40" loc="292:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_BACKOFF_PERIOD" ref="0x7fd35c9102a0" loc="159:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="CC2420_AGCTST2" ref="0x7fd35c905ba0" loc="211:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x7fd35c986020" loc="1057:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x7fd35c9e58b0" loc="84:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x7fd35c968660" loc="1247:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x7fd35c9a6330" loc="850:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="CMD_PACKET_MAX_PAYLOAD_SIZE" ref="0x7fd35c9fec50" loc="12:includes/CommandMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x7fd35c9be460" loc="755:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="__codecvt_noconv" ref="0x7fd35ce39900" loc="181:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x7fd35c987340" loc="1053:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x7fd35c983990" loc="1081:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x7fd35c9e7150" loc="51:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="CC2420_IOCFG1" ref="0x7fd35c907c40" loc="202:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="AM_FLOODING" ref="0x7fd35c23b1e0" loc="7:lib/modules/../../includes/am_types.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MAIN_MOD_RESETn" ref="0x7fd35c8fc850" loc="251:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="_ISxdigit" ref="0x7fd35ce6ecb0" loc="52:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PROTOCOL_PING" ref="0x7fd35ca00660" loc="10:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0x7fd35ca7eb50" loc="27:/home/alan/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x7fd35c97ec70" loc="1113:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x7fd35c979350" loc="1141:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x7fd35c9c1de0" loc="741:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x7fd35c966960" loc="1262:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x7fd35c9d38b0" loc="289:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_BATTMON_BATT_OK" ref="0x7fd35c8eb700" loc="342:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AVR_CLOCK_OFF" ref="0x7fd35c1bfdf0" loc="76:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x7fd35ca75020" loc="104:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="CC2420_TIME_VREN" ref="0x7fd35c9118c0" loc="157:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SECCTRL1_SEC_RXL" ref="0x7fd35c8eb020" loc="338:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x7fd35c9de020" loc="157:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x7fd35c9db550" loc="202:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x7fd35c9919a0" loc="993:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x7fd35c9d78b0" loc="255:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FP_NORMAL" ref="0x7fd35ce79bc0" loc="223:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="CC2420_MAIN_RESETn" ref="0x7fd35c8fdca0" loc="248:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="_ISlower" ref="0x7fd35ce70220" loc="49:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x7fd35c93dbb0" loc="128:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x7fd35ca77a90" loc="95:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x7fd35c9da710" loc="219:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x7fd35c9adab0" loc="809:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x7fd35c9ab440" loc="819:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x7fd35c962320" loc="1284:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x7fd35c9afd90" loc="796:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MAIN_XOSC16M_BYPASS" ref="0x7fd35c8fb070" loc="253:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x7fd35c9e7850" loc="57:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x7fd35c9b2460" loc="774:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x7fd35cf41aa0" loc="55:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="FP_SUBNORMAL" ref="0x7fd35ce79840" loc="220:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x7fd35c9e6de0" loc="75:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x7fd35c9a0360" loc="890:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x7fd35c9c3460" loc="722:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x7fd35c949530" loc="47:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK8_DIVIDE_64" ref="0x7fd35c1c25f0" loc="57:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x7fd35c98d020" loc="1014:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x7fd35c98a640" loc="1035:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x7fd35c9444f0" loc="78:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x7fd35cc82980" loc="59:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x7fd35c9d5c30" loc="277:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x7fd35c98d620" loc="1016:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SYNCWORD_SYNCWORD" ref="0x7fd35c8f7e20" loc="281:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_TIMER_COMPARE_TOGGLE" ref="0x7fd35c1acc80" loc="187:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x7fd35c949180" loc="46:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x7fd35c965c60" loc="1268:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x7fd35c961020" loc="1290:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x7fd35c946020" loc="67:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x7fd35c98ac70" loc="1037:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x7fd35c9aca80" loc="816:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x7fd35c984020" loc="1071:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RXCTRL1_MED_HGM" ref="0x7fd35c8f18d0" loc="310:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK16_DIVIDE_8" ref="0x7fd35c1c0230" loc="66:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x7fd35c973330" loc="1177:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x7fd35c96f950" loc="1205:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x7fd35c96a020" loc="1233:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="CC2420_MDMCTRL0" ref="0x7fd35c909140" loc="190:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x7fd35c9af140" loc="792:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x7fd35c99a980" loc="932:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_MIN_BACKOFF" ref="0x7fd35c910870" loc="160:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x7fd35c96b620" loc="1228:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x7fd35c967c20" loc="1256:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x7fd35c9dd540" loc="173:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x7fd35c992950" loc="986:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x7fd35c963980" loc="1281:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_WAVE16_PWM_COMPARE_LOW" ref="0x7fd35c1a6df0" loc="221:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x7fd35c9e1520" loc="135:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_STXONCCA" ref="0x7fd35c90ca60" loc="179:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_MDMCTRL0_CCA_MOD" ref="0x7fd35c8fa7d0" loc="261:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MDMCTRL0_PREAMBLE_LENGTH" ref="0x7fd35c8f9440" loc="264:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x7fd35ce3d460" loc="63:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x7fd35c99e970" loc="904:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2147483648" name="CC2420_INVALID_TIMESTAMP" ref="0x7fd35c8e1bc0" loc="403:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:334" name="SIM_LOG_OUTPUT_COUNT" ref="0x7fd35cd643d0" loc="64:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x7fd35c994340" loc="970:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="CC2420_SFDMUX_XOSC16M_STABLE" ref="0x7fd35c8e4420" loc="382:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CLOSE_WAIT" ref="0x7fd35c58a5f0" loc="26:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK16_EXTERNAL_FALL" ref="0x7fd35c1bf260" loc="70:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x7fd35ca787f0" loc="88:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x7fd35c993640" loc="978:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_RXCTRL1_RXBPF_LOCUR" ref="0x7fd35c8f2520" loc="305:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x7fd35c9b0db0" loc="791:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x7fd35c98c950" loc="1024:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x7fd35c9db8e0" loc="207:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x7fd35c9b1140" loc="780:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x7fd35c963660" loc="1278:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x7fd35c960020" loc="1297:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_FSCTRL_LOCK_LENGTH" ref="0x7fd35c8efba0" loc="321:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CMD_LENGTH" ref="0x7fd35c5a1c30" loc="29:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE8_PWM" ref="0x7fd35c1bee30" loc="84:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x7fd35c9c7760" loc="697:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x7fd35c9c6470" loc="703:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x7fd35cebd780" loc="59:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x7fd35c9a4020" loc="861:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x7fd35c99d360" loc="909:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x7fd35c9e0710" loc="144:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x7fd35c99b650" loc="922:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x7fd35c97c980" loc="1124:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x7fd35c977020" loc="1152:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x7fd35c97f620" loc="1104:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x7fd35c97dc60" loc="1118:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x7fd35c9a29a0" loc="880:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x7fd35c978330" loc="1146:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x7fd35c9b4140" loc="761:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x7fd35c974950" loc="1174:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x7fd35c96f020" loc="1202:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="_ISupper" ref="0x7fd35ce713d0" loc="48:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x7fd35c9c2780" loc="732:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x7fd35c964660" loc="1273:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:288" name="CC2420_RAM_SABUF" ref="0x7fd35c9005a0" loc="230:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="CC2420_ADCTST" ref="0x7fd35c903550" loc="218:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="MAC_HEADER_SIZE" ref="0x7fd35c914a50" loc="146:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_MAIN_FS_RESETn" ref="0x7fd35c8fcc10" loc="252:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x7fd35c9ca7e0" loc="678:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x7fd35c9a1ca0" loc="886:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_RXCTRL0_RXMIXBUF_CUR" ref="0x7fd35c8f4520" loc="295:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x7fd35c9c5aa0" loc="712:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x7fd35c947c60" loc="66:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x7fd35c9a3ca0" loc="874:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x7fd35c995950" loc="965:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x7fd35c9d6020" loc="261:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x7fd35c9e2e00" loc="131:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x7fd35c98bca0" loc="1032:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x7fd35c9d1940" loc="316:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_SECCTRL0_SEC_M" ref="0x7fd35c8ec020" loc="332:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x7fd35c9a8330" loc="838:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x7fd35c99f340" loc="895:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x7fd35c994670" loc="973:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x7fd35c98c640" loc="1023:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x7fd35c9e4710" loc="96:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x7fd35c9c5140" loc="707:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:320" name="CC2420_RAM_TXNONCE" ref="0x7fd35c900cc0" loc="232:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x7fd35c9afa80" loc="795:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x7fd35c9a6970" loc="854:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x7fd35c971020" loc="1188:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x7fd35c96d660" loc="1216:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x7fd35c969cc0" loc="1244:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x7fd35c94aa20" loc="44:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x7fd35c98ec50" loc="1013:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FP_INFINITE" ref="0x7fd35ce79170" loc="214:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE8_NORMAL" ref="0x7fd35c1beb40" loc="83:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x7fd35c984630" loc="1073:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x7fd35c948020" loc="53:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:272" name="CC2420_RAM_RXNONCE" ref="0x7fd35c900210" loc="229:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AVR_CLOCK_ON" ref="0x7fd35c1be1d0" loc="77:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_TIMER_COMPARE_NORMAL" ref="0x7fd35c1ac930" loc="186:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x7fd35cc830b0" loc="54:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x7fd35c993020" loc="976:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_SAES" ref="0x7fd35c90aa50" loc="188:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x7fd35c942730" loc="88:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x7fd35c9e2a80" loc="128:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x7fd35c948910" loc="60:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x7fd35cc81490" loc="61:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x7fd35c969020" loc="1238:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_RXCTRL1_RXMIX_VCM" ref="0x7fd35c8f0520" loc="313:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x7fd35c9c0140" loc="742:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="CC2420_FSMTC" ref="0x7fd35c9066f0" loc="205:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x7fd35c988ca0" loc="1051:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MANFIDH_VERSION" ref="0x7fd35c8e7cd0" loc="368:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x7fd35c9b2aa0" loc="776:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CBC_MAC_16" ref="0x7fd35c8e2370" loc="393:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x7fd35c9a9380" loc="831:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x7fd35c988650" loc="1047:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ETIMEOUT" ref="0x7fd35ce3d7a0" loc="64:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x7fd35c94add0" loc="45:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:62" name="CC2420_TXFIFO" ref="0x7fd35c902020" loc="221:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x7fd35c998980" loc="946:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x7fd35c97a620" loc="1135:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x7fd35c976c60" loc="1163:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x7fd35c971340" loc="1191:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_RXCTRL0_MED_LNA_CURRENT" ref="0x7fd35c8f3970" loc="300:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x7fd35ca76230" loc="97:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="_ISdigit" ref="0x7fd35ce6fe80" loc="51:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x7fd35c9a4980" loc="866:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="PROTOCOL_CMD" ref="0x7fd35c9fe020" loc="17:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x7fd35c9e86c0" loc="44:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x7fd35c9addc0" loc="810:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x7fd35c98fca0" loc="1006:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x7fd35c987ca0" loc="1056:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x7fd35c9df540" loc="150:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SECCTRL0_SEC_MODE" ref="0x7fd35c8ec400" loc="333:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x7fd35c990cc0" loc="1001:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_FSMTC_TC_SWITCH2TX" ref="0x7fd35c8e6c20" loc="374:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_FSCTRL_CAL_RUNNING" ref="0x7fd35c8ef7c0" loc="320:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x7fd35c9b3ac0" loc="771:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x7fd35c9c8760" loc="690:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x7fd35c98b980" loc="1031:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x7fd35c9daa90" loc="222:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE16_PWM_8BIT" ref="0x7fd35c1a7340" loc="213:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x7fd35c9a1980" loc="885:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x7fd35cf41140" loc="52:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x7fd35cf41770" loc="54:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x7fd35c9c4ac0" loc="719:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x7fd35c9b3140" loc="766:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x7fd35c9aa0b0" loc="823:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="CC2420_RXBPFTST" ref="0x7fd35c904df0" loc="216:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x7fd35c9d58b0" loc="274:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x7fd35c99f980" loc="897:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_COMPARE_TOGGLE" ref="0x7fd35c1bde30" loc="92:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x7fd35c93b020" loc="140:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x7fd35c9869a0" loc="1062:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x7fd35ca7e5a0" loc="15:/home/alan/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x7fd35c943020" loc="81:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_FSMTC_TC_TXEND2SWITCH" ref="0x7fd35c8e5420" loc="376:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x7fd35cf41450" loc="53:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_TXCTRL_PA_CURRENT" ref="0x7fd35c8f5640" loc="289:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x7fd35c970620" loc="1197:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x7fd35c9ad140" loc="804:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x7fd35c96cc20" loc="1225:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x7fd35c967320" loc="1253:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_ISalnum" ref="0x7fd35ce67130" loc="59:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_SIZE" ref="0x7fd35c912da0" loc="152:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x7fd35c9e8db0" loc="48:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x7fd35c987660" loc="1054:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_FSMTC_TC_PAON2TX" ref="0x7fd35c8e5020" loc="375:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x7fd35c9e2390" loc="122:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x7fd35c9a5020" loc="856:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_RXCTRL1_MED_LOWGAIN" ref="0x7fd35c8f1140" loc="308:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x7fd35cebde00" loc="61:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x7fd35c944830" loc="79:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x7fd35c942d40" loc="90:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x7fd35c983340" loc="1077:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x7fd35c9e4e00" loc="102:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x7fd35c9c8db0" loc="694:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x7fd35c99c330" loc="914:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x7fd35c97c020" loc="1121:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="CC2420_AGCCTRL" ref="0x7fd35c905150" loc="208:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x7fd35c9d8700" loc="244:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x7fd35c9dca90" loc="191:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x7fd35c980c70" loc="1101:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x7fd35c9ddc30" loc="179:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SYN" ref="0x7fd35c59e6b0" loc="19:includes/TCP.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x7fd35c9d6720" loc="267:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="CC2420_FMSTATE" ref="0x7fd35c9031e0" loc="217:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x7fd35c93e020" loc="111:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x7fd35c97d330" loc="1115:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x7fd35c979970" loc="1143:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x7fd35c974020" loc="1171:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="MAX_NUM_OF_SOCKETS" ref="0x7fd35c5945d0" loc="5:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="CC2420_STATUS_XOSC16M_STABLE" ref="0x7fd35c90d180" loc="170:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CC2420_MANFIDH" ref="0x7fd35c906390" loc="204:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x7fd35c9c1780" loc="737:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x7fd35c965020" loc="1264:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_SRXDEC" ref="0x7fd35c90a390" loc="186:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CMD_TEST_SERVER" ref="0x7fd35c5a3e60" loc="18:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="AM_PACK" ref="0x7fd35c9ec070" loc="49:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x7fd35c99a330" loc="928:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:362" name="CC2420_RAM_SHORTADR" ref="0x7fd35c8ffb80" loc="236:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK8_OFF" ref="0x7fd35c1c66a0" loc="53:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x7fd35ca7d020" loc="28:/home/alan/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_MDMCTRL0_ADR_DECODE" ref="0x7fd35c8fa020" loc="259:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x7fd35c9a3340" loc="871:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_WAVE16_PWM_COMPARE_HIGH" ref="0x7fd35c1a5550" loc="223:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_FSMTC_TC_RXCHAIN2RX" ref="0x7fd35c8e6840" loc="373:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x7fd35c9a96a0" loc="834:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="CC2420_RAM_KEY0" ref="0x7fd35c901e00" loc="228:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x7fd35c98e020" loc="1007:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x7fd35c985340" loc="1065:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x7fd35c9e7be0" loc="60:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x7fd35c9d1220" loc="310:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x7fd35c9e6a70" loc="72:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MDMCTRL1_RX_MODE" ref="0x7fd35c8f8be0" loc="272:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x7fd35c98e340" loc="1010:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_TXCTRL_TX_TURNAROUND" ref="0x7fd35c8f6960" loc="286:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CMD_NEIGHBOR_DUMP" ref="0x7fd35c5a3020" loc="14:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x7fd35c94a3b0" loc="132:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ITIMER_REAL" ref="0x7fd35cc8d0b0" loc="94:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x7fd35c980950" loc="1098:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CMD_USERLIST" ref="0x7fd35c5a16d0" loc="25:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_SRXON" ref="0x7fd35c90c380" loc="177:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x7fd35c989970" loc="1043:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x7fd35c9a09a0" loc="892:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x7fd35c9c3aa0" loc="724:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_IOCFG1_SFDMUX" ref="0x7fd35c8e8730" loc="358:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="PACKET_HEADER_LENGTH" ref="0x7fd35c9f5560" loc="13:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x7fd35c9e91c0" loc="30:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x7fd35c9e3530" loc="108:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x7fd35c9a4660" loc="865:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x7fd35c976020" loc="1157:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x7fd35c9a9cc0" loc="836:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x7fd35c972660" loc="1185:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x7fd35c992c70" loc="987:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x7fd35c96ecb0" loc="1213:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x7fd35c969360" loc="1241:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x7fd35c9ca1a0" loc="676:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x7fd35c9e6390" loc="66:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RSSI_RSSI_VAL" ref="0x7fd35c8f7710" loc="277:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x7fd35c961640" loc="1292:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_STATUS_TX_ACTIVE" ref="0x7fd35c90e070" loc="167:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x7fd35c9bf7a0" loc="751:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x7fd35cd9e880" loc="76:/home/alan/tiny/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CMD_LINKSTATE_DUMP" ref="0x7fd35c5a33c0" loc="15:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x7fd35c96e020" loc="1207:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x7fd35cc821e0" loc="57:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="P_PGID" ref="0x7fd35d502720" loc="54:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x7fd35c96a640" loc="1235:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_SECCTRL0_SEC_SAKEYSEL" ref="0x7fd35c8ed420" loc="329:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x7fd35c9e2700" loc="125:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x7fd35c999cd0" loc="942:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x7fd35c9dae00" loc="223:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_IOCFG0_FIFO_POLARITY" ref="0x7fd35c8eab00" loc="349:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x7fd35c9ae780" loc="801:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_IOCFG0_FIFOP_THR" ref="0x7fd35c8e9bd0" loc="353:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8192" name="_ISspace" ref="0x7fd35ce6db30" loc="53:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x7fd35c9bf140" loc="747:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_SECCTRL0_RXFIFO_PROTECTION" ref="0x7fd35c8eeb20" loc="327:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x7fd35c98b020" loc="1026:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_MDMCTRL0_CCA_HYST" ref="0x7fd35c8fa400" loc="260:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x7fd35c99d020" loc="906:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="CC2420_TXCTRL" ref="0x7fd35c908020" loc="194:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x7fd35c991340" loc="989:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x7fd35c980020" loc="1095:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x7fd35ca30a30" loc="56:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="NUM_TASKS" ref="0x7fd35ca30700" loc="55:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="stopDoneTask" ref="0x7fd35c757160" loc="101:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="sendDoneTask" ref="0x7fd35c758020" loc="145:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="startDoneTask" ref="0x7fd35c7561a0" loc="96:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="read_rssi_task" ref="0x7fd35c754c30" loc="528:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="sendBufferTask" ref="0x7fd35c1faaf0" loc="82:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MINDT" ref="0x7fd35c144530" loc="45:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:230" name="MAXT" ref="0x7fd35c144860" loc="46:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="fired" ref="0x7fd35bfe2020" loc="74:/home/alan/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="END_OF_LIST" ref="0x7fd35bfa2d30" loc="56:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateFromTimer" ref="0x7fd35bfae4c0" loc="71:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_TIMERS" ref="0x7fd35bfa29e0" loc="55:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="NUM_CLIENTS" ref="0x7fd35befe0d0" loc="48:/home/alan/tiny/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="errorTask" ref="0x7fd35befcb10" loc="169:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CancelTask" ref="0x7fd35beb0c20" loc="126:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="whisper" ref="0x7fd35bc70020" loc="28:lib/modules/ChatP.nc">
      <component-ref qname="ChatP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="broadcast" ref="0x7fd35bc70360" loc="29:lib/modules/ChatP.nc">
      <component-ref qname="ChatP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="processCommand" ref="0x7fd35bbfbd10" loc="22:lib/modules/CommandHandlerP.nc">
      <component-ref qname="CommandHandlerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="intptr_t" ref="0x7fd35d76bd10" loc="119:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intptr_t" ref="0x7fd35d76bd10"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x7fd35ca6f090" loc="134:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x7fd35ca70640"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x7fd35ca6f090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3B_t" ref="0x7fd35c1a1090" loc="247:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1a2280"/>
        <typename><typedef-ref name="Atm128_TCCR3B_t" ref="0x7fd35c1a1090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="socket_addr_t" ref="0x7fd35c588af0" loc="43:lib/interfaces/../../includes/socket.h">
      <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x7fd35c588220"/>
        <typename><typedef-ref name="socket_addr_t" ref="0x7fd35c588af0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_spinlock_t" ref="0x7fd35d4924d0" loc="234:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-qualified volatile="">
          <typename><typedef-ref name="pthread_spinlock_t" ref="0x7fd35d4924d0"/></typename>
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </typedef>
    <typedef name="wchar_t" ref="0x7fd35d787e30" loc="324:/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x7fd35d787e30"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x7fd35c9405e0" loc="99:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd35c940110"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x7fd35c9405e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ushort" ref="0x7fd35d4b9830" loc="151:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ushort" ref="0x7fd35d4b9830"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x7fd35ca7b6a0" loc="22:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x7fd35ca7b080"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x7fd35ca7b6a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int64_t" ref="0x7fd35d4fc900" loc="43:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x7fd35d4fc900"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x7fd35d4fd8f0" loc="38:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x7fd35d4fd8f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="LSP" ref="0x7fd35c9f1c70" loc="35:includes/packet.h">
      <type-tag size="I:20" alignment="I:1"><nx_struct-ref name="link_state_pack" ref="0x7fd35c9f3b10"/>
        <typename><typedef-ref name="LSP" ref="0x7fd35c9f1c70"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_header_t" ref="0x7fd35ca702e0" loc="129:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x7fd35ca71190"/>
        <typename><typedef-ref name="serial_header_t" ref="0x7fd35ca702e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0x7fd35ca01020" loc="42:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7fd35ca32c20"/>
        <typename><typedef-ref name="TMilli" ref="0x7fd35ca01020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="cc2420_metadata_t" ref="0x7fd35c9152e0" loc="108:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="86:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Packet metadata.</short>
        <long>&#10; CC2420 Packet metadata. Contains extra information about the message&#10; that will not be transmitted.&#10;&#10; Note that the first two bytes automatically take in the values of the&#10; FCS when the payload is full. Do not modify the first two bytes of metadata.&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7fd35c917990"/>
        <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fd35c9152e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__u_char" ref="0x7fd35d4ff170" loc="30:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__u_char" ref="0x7fd35d4ff170"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT0_t" ref="0x7fd35c1b8020" loc="111:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT0_t" ref="0x7fd35c1b8020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BL_t" ref="0x7fd35c199840" loc="278:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BL_t" ref="0x7fd35c199840"/></typename>
      </type-int>
    </typedef>
    <typedef name="__intptr_t" ref="0x7fd35d4edda0" loc="186:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__intptr_t" ref="0x7fd35d4edda0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__qaddr_t" ref="0x7fd35d4ed5f0" loc="182:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__quad_t" ref="0x7fd35d4fb130"/></typename>
        </type-int>
        <typename><typedef-ref name="__qaddr_t" ref="0x7fd35d4ed5f0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_OCR2_t" ref="0x7fd35c1b70d0" loc="116:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR2_t" ref="0x7fd35c1b70d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0x7fd35d4b1c60" loc="75:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x7fd35d4b18f0"/>
        <typename><typedef-ref name="fd_set" ref="0x7fd35d4b1c60"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x7fd35cd9c1c0" loc="51:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x7fd35cd9c1c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__caddr_t" ref="0x7fd35d4ed9b0" loc="183:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__caddr_t" ref="0x7fd35d4ed9b0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__time_t" ref="0x7fd35d4f4960" loc="139:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__time_t" ref="0x7fd35d4f4960"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ssize_t" ref="0x7fd35d4ee500" loc="172:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ssize_t" ref="0x7fd35d4ee500"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x7fd35d024b30" loc="28:/usr/include/x86_64-linux-gnu/bits/mathdef.h">
      <type-float cname="float" size="I:4" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x7fd35d024b30"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x7fd35d4bf790" loc="70:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="mode_t" ref="0x7fd35d4bf790"/></typename>
      </type-int>
    </typedef>
    <typedef name="CommandMsg" ref="0x7fd35c9fdd20" loc="20:includes/CommandMsg.h">
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="CommandMsg" ref="0x7fd35c9fd020"/>
        <typename><typedef-ref name="CommandMsg" ref="0x7fd35c9fdd20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1C_t" ref="0x7fd35c19c0d0" loc="262:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c19f790"/>
        <typename><typedef-ref name="Atm128_TCCR1C_t" ref="0x7fd35c19c0d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_lock_t" ref="0x7fd35ce3cbc0" loc="150:/usr/include/libio.h">
      <type-void size="I:1" alignment="I:1">
        <typename><typedef-ref name="_IO_lock_t" ref="0x7fd35ce3cbc0"/></typename>
      </type-void>
    </typedef>
    <typedef name="int_least32_t" ref="0x7fd35d76f160" loc="67:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x7fd35d76f160"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x7fd35d78f690"  loc="NONE">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x7fd35d78f530"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0x7fd35d4fc500" loc="41:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x7fd35d4fc500"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0x7fd35ca00020" loc="44:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7fd35ca01c10"/>
        <typename><typedef-ref name="TMicro" ref="0x7fd35ca00020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsword_t" ref="0x7fd35d4ee140" loc="170:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsword_t" ref="0x7fd35d4ee140"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt_t" ref="0x7fd35d4f0900" loc="166:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt_t" ref="0x7fd35d4f0900"/></typename>
      </type-int>
    </typedef>
    <typedef name="nlink_t" ref="0x7fd35d4bfb60" loc="75:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="nlink_t" ref="0x7fd35d4bfb60"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0x7fd35d4ba020" loc="59:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="clock_t" ref="0x7fd35d4ba020"/></typename>
      </type-int>
    </typedef>
    <typedef name="security_header_t" ref="0x7fd35c91a180" loc="58:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="49:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Security Header&#10;</short>
      </documentation>
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="security_header_t" ref="0x7fd35c931bd0"/>
        <typename><typedef-ref name="security_header_t" ref="0x7fd35c91a180"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1BH_t" ref="0x7fd35c199430" loc="277:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BH_t" ref="0x7fd35c199430"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_status_t" ref="0x7fd35c9316d0" loc="4:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="33:/home/alan/tiny/tinyos-main/tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="cc2420_status_t" ref="0x7fd35c9316d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_condattr_t" ref="0x7fd35d4994a0" loc="160:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x7fd35d499080"/>
        <typename><typedef-ref name="pthread_condattr_t" ref="0x7fd35d4994a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pthread_list_t" ref="0x7fd35d4a3d90" loc="79:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="__pthread_internal_list" ref="0x7fd35d4a3280"/>
        <typename><typedef-ref name="__pthread_list_t" ref="0x7fd35d4a3d90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="heap_t" ref="0x7fd35ccff620" loc="65:/home/alan/tiny/tinyos-main/tos/lib/tossim/heap.h">
      <documentation loc="53:/home/alan/tiny/tinyos-main/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="heap" ref="0x7fd35cd00be0"/>
        <typename><typedef-ref name="heap_t" ref="0x7fd35ccff620"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gid_t" ref="0x7fd35d4f81e0" loc="126:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gid_t" ref="0x7fd35d4f81e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x7fd35d5531f0" loc="446:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x7fd35d5531f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x7fd35cd657c0" loc="61:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="sim_log_channel" ref="0x7fd35cd669c0"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x7fd35cd657c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int" ref="0x7fd35d4c24d0" loc="35:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int" ref="0x7fd35d4c24d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_once_t" ref="0x7fd35d499c80" loc="168:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_once_t" ref="0x7fd35d499c80"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint" ref="0x7fd35d4b9bc0" loc="152:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint" ref="0x7fd35d4b9bc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_group_t" ref="0x7fd35ca80bd0" loc="11:/home/alan/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x7fd35ca80bd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3C_t" ref="0x7fd35c19c590" loc="265:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c19f790"/>
        <typename><typedef-ref name="Atm128_TCCR3C_t" ref="0x7fd35c19c590"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least8_t" ref="0x7fd35d76f960" loc="76:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x7fd35d76f960"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsid_t" ref="0x7fd35d4f6600" loc="134:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7fd35d4f6290"/>
        <typename><typedef-ref name="__fsid_t" ref="0x7fd35d4f6600"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCNT1H_t" ref="0x7fd35c19c9e0" loc="269:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1H_t" ref="0x7fd35c19c9e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3L_t" ref="0x7fd35c19b650" loc="272:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3L_t" ref="0x7fd35c19b650"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x7fd35d76b500" loc="106:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast32_t" ref="0x7fd35d76b500"/></typename>
      </type-int>
    </typedef>
    <typedef name="blksize_t" ref="0x7fd35d4a7d90" loc="228:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="blksize_t" ref="0x7fd35d4a7d90"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0x7fd35d76f550" loc="69:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x7fd35d76f550"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIFR_t" ref="0x7fd35c18e530" loc="324:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c18e110"/>
        <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7fd35c18e530"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pid_t" ref="0x7fd35d4f7c90" loc="133:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__pid_t" ref="0x7fd35d4f7c90"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_int" ref="0x7fd35d4ff920" loc="32:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_int" ref="0x7fd35d4ff920"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT2_t" ref="0x7fd35c1b8ca0" loc="115:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT2_t" ref="0x7fd35c1b8ca0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AL_t" ref="0x7fd35c199020" loc="276:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AL_t" ref="0x7fd35c199020"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x7fd35cd90410" loc="51:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:48" alignment="I:8"><struct-ref name="sim_event" ref="0x7fd35cd90020"/>
        <typename><typedef-ref name="sim_event_t" ref="0x7fd35cd90410"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x7fd35cdca980" loc="68:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x7fd35cdca980"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sig_atomic_t" ref="0x7fd35d4b6db0" loc="22:/usr/include/x86_64-linux-gnu/bits/sigset.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__sig_atomic_t" ref="0x7fd35d4b6db0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_SFIOR_t" ref="0x7fd35c1ac310" loc="178:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1adec0"/>
        <typename><typedef-ref name="Atm128_SFIOR_t" ref="0x7fd35c1ac310"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__daddr_t" ref="0x7fd35d4f34e0" loc="143:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__daddr_t" ref="0x7fd35d4f34e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino_t" ref="0x7fd35d4f85d0" loc="127:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino_t" ref="0x7fd35d4f85d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_socket_port_t" ref="0x7fd35c589a70" loc="36:lib/interfaces/../../includes/socket.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_socket_port_t" ref="0x7fd35c589a70"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x7fd35d771950" loc="65:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x7fd35d771950"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_packet_t" ref="0x7fd35c9141b0" loc="114:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_packet_t" ref="0x7fd35c915770"/>
        <typename><typedef-ref name="cc2420_packet_t" ref="0x7fd35c9141b0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="FILE" ref="0x7fd35ce43be0" loc="48:/usr/include/stdio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7fd35ce437f0"/>
        <typename><typedef-ref name="FILE" ref="0x7fd35ce43be0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__compar_fn_t" ref="0x7fd35d449dd0" loc="741:/usr/include/stdlib.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:8" alignment="I:8">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="__compar_fn_t" ref="0x7fd35d449dd0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__locale_t" ref="0x7fd35d536020" loc="39:/usr/include/xlocale.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:232" alignment="I:8"><struct-ref name="__locale_struct" ref="0x7fd35d5395f0"/></type-tag>
        <typename><typedef-ref name="__locale_t" ref="0x7fd35d536020"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x7fd35c939cf0" loc="161:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x7fd35c939cf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mode_t" ref="0x7fd35d4f8d90" loc="129:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__mode_t" ref="0x7fd35d4f8d90"/></typename>
      </type-int>
    </typedef>
    <typedef name="locale_t" ref="0x7fd35d536430" loc="42:/usr/include/xlocale.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="I:232" alignment="I:8"><struct-ref name="__locale_struct" ref="0x7fd35d5395f0"/></type-tag>
        <typename><typedef-ref name="locale_t" ref="0x7fd35d536430"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="radio_stats_t" ref="0x7fd35ca73e00" loc="121:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0x7fd35ca75b50"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x7fd35ca73e00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clockid_t" ref="0x7fd35d4ba930" loc="91:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clockid_t" ref="0x7fd35d4ba930"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1H_t" ref="0x7fd35c196db0" loc="291:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1H_t" ref="0x7fd35c196db0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3L_t" ref="0x7fd35c1949f0" loc="294:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3L_t" ref="0x7fd35c1949f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="gid_t" ref="0x7fd35d4bf3d0" loc="65:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0x7fd35d4bf3d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsid_t" ref="0x7fd35d4c1450" loc="39:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7fd35d4f6290"/>
        <typename><typedef-ref name="fsid_t" ref="0x7fd35d4c1450"/></typename>
      </type-tag>
    </typedef>
    <typedef name="duplicated_ack" ref="0x7fd35c586740" loc="49:lib/interfaces/../../includes/socket.h">
      <type-tag size="I:4" alignment="I:2"><struct-ref name="duplicated_ack" ref="0x7fd35c588e70"/>
        <typename><typedef-ref name="duplicated_ack" ref="0x7fd35c586740"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_packet_t" ref="0x7fd35ca92910" loc="59:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x7fd35ca925d0"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x7fd35ca92910"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x7fd35c9394f0" loc="158:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fd35c93ad70"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7fd35c9394f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x7fd35d779950" loc="36:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x7fd35d779950"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x7fd35cd66650" loc="54:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_log_output" ref="0x7fd35cd67d90"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x7fd35cd66650"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x7fd35d4b3890" loc="48:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="suseconds_t" ref="0x7fd35d4b3890"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x7fd35d4b4090" loc="37:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x7fd35d4b58b0"/>
        <typename><typedef-ref name="sigset_t" ref="0x7fd35d4b4090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="T32khz" ref="0x7fd35ca017d0" loc="43:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7fd35ca01460"/>
        <typename><typedef-ref name="T32khz" ref="0x7fd35ca017d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_short" ref="0x7fd35d4c2120" loc="34:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_short" ref="0x7fd35d4c2120"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_header_t" ref="0x7fd35ca7cca0" loc="18:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <documentation loc="14:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
        <short> I-Frame 6LowPAN interoperability byte *</short>
      </documentation>
      <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x7fd35ca7d3c0"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x7fd35ca7cca0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x7fd35d787600" loc="147:/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ptrdiff_t" ref="0x7fd35d787600"/></typename>
      </type-int>
    </typedef>
    <typedef name="TSecond" ref="0x7fd35ca326d0" loc="41:/home/alan/tiny/tinyos-main/tos/lib/timer/Timer.h">
      <documentation loc="1:NodeC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides the basic functions of a network node.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides the basic functions of a network node.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x7fd35ca32360"/>
        <typename><typedef-ref name="TSecond" ref="0x7fd35ca326d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="blkcnt_t" ref="0x7fd35d4a61e0" loc="235:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="blkcnt_t" ref="0x7fd35d4a61e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x7fd35d771130" loc="51:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x7fd35d771130"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x7fd35d5510d0" loc="448:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x7fd35d5510d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x7fd35d559020" loc="435:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x7fd35d559020"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x7fd35d769130" loc="122:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintptr_t" ref="0x7fd35d769130"/></typename>
      </type-int>
    </typedef>
    <typedef name="caddr_t" ref="0x7fd35d4bd7c0" loc="116:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="caddr_t" ref="0x7fd35d4bd7c0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__u_long" ref="0x7fd35d4ffd20" loc="33:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_long" ref="0x7fd35d4ffd20"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x7fd35d76b930" loc="107:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x7fd35d76b930"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3H_t" ref="0x7fd35c19b240" loc="271:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3H_t" ref="0x7fd35c19b240"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint16_t" ref="0x7fd35d4fdd00" loc="39:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x7fd35d4fdd00"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_char" ref="0x7fd35d4c3cf0" loc="33:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_char" ref="0x7fd35d4c3cf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x7fd35c94e1b0" loc="120:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x7fd35c94e1b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x7fd35d76c090" loc="92:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast16_t" ref="0x7fd35d76c090"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AH_t" ref="0x7fd35c19ba80" loc="275:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AH_t" ref="0x7fd35c19ba80"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CL_t" ref="0x7fd35c198090" loc="280:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CL_t" ref="0x7fd35c198090"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x7fd35ce13020" loc="110:/usr/include/stdio.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7fd35ce40eb0"/>
        <typename><typedef-ref name="fpos_t" ref="0x7fd35ce13020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1B_t" ref="0x7fd35c1a2b80" loc="244:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1a2280"/>
        <typename><typedef-ref name="Atm128_TCCR1B_t" ref="0x7fd35c1a2b80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0x7fd35d4dc440" loc="101:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7fd35d4dc020"/>
        <typename><typedef-ref name="div_t" ref="0x7fd35d4dc440"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x7fd35cbf4230" loc="6:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="sim_gain_noise" ref="0x7fd35cbf59a0"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x7fd35cbf4230"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x7fd35d787a40" loc="212:/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="size_t" ref="0x7fd35d787a40"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0x7fd35d4fd4f0" loc="37:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x7fd35d4fd4f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sigset_t" ref="0x7fd35d4b5c20" loc="30:/usr/include/x86_64-linux-gnu/bits/sigset.h">
      <type-tag size="I:128" alignment="I:8"><struct-ref ref="0x7fd35d4b58b0"/>
        <typename><typedef-ref name="__sigset_t" ref="0x7fd35d4b5c20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR0_t" ref="0x7fd35c1baaa0" loc="110:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1ba020"/>
        <typename><typedef-ref name="Atm128_TCCR0_t" ref="0x7fd35c1baaa0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__loff_t" ref="0x7fd35d4ed1d0" loc="181:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__loff_t" ref="0x7fd35d4ed1d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino64_t" ref="0x7fd35d4f89d0" loc="128:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino64_t" ref="0x7fd35d4f89d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="socket_port_t" ref="0x7fd35c589e70" loc="37:lib/interfaces/../../includes/socket.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="socket_port_t" ref="0x7fd35c589e70"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x7fd35ca819d0" loc="6:/home/alan/tiny/tinyos-main/tos/types/AM.h">
      <documentation loc="34:/home/alan/tiny/tinyos-main/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision: 1.5 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x7fd35ca819d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x7fd35ca6e6e0" loc="53:/home/alan/tiny/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:11" alignment="I:1"><union-ref name="message_header" ref="0x7fd35ca6fd70"/>
        <typename><typedef-ref name="message_header_t" ref="0x7fd35ca6e6e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x7fd35cbff020" loc="57:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:24" alignment="I:8"><struct-ref name="gain_entry" ref="0x7fd35cc01510"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x7fd35cbff020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x7fd35ca7e020" loc="12:/home/alan/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x7fd35ca7e020"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x7fd35d55a120" loc="433:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x7fd35d55a120"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x7fd35c9398f0" loc="160:/home/alan/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x7fd35c9398f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x7fd35d76d020" loc="77:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x7fd35d76d020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_close_fn" ref="0x7fd35ce2ac60" loc="353:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </function-parameters>
        <typename><typedef-ref name="__io_close_fn" ref="0x7fd35ce2ac60"/></typename>
      </type-function>
    </typedef>
    <typedef name="uint8_t" ref="0x7fd35d772920" loc="48:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x7fd35d772920"/></typename>
      </type-int>
    </typedef>
    <typedef name="neighbor" ref="0x7fd35c59fcb0" loc="21:includes/sendInfo.h">
      <type-tag size="I:2" alignment="I:1"><struct-ref name="neighbor" ref="0x7fd35c59f4b0"/>
        <typename><typedef-ref name="neighbor" ref="0x7fd35c59fcb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="time_t" ref="0x7fd35d4ba4a0" loc="75:/usr/include/time.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="time_t" ref="0x7fd35d4ba4a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x7fd35d557cd0" loc="441:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x7fd35d557cd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x7fd35d4dbb90" loc="121:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7fd35d4db770"/>
        <typename><typedef-ref name="lldiv_t" ref="0x7fd35d4dbb90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_FILE" ref="0x7fd35ce31c60" loc="310:/usr/include/libio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7fd35ce437f0"/>
        <typename><typedef-ref name="_IO_FILE" ref="0x7fd35ce31c60"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x7fd35d4a4e70" loc="69:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:56" alignment="I:8"><union-ref name="pthread_attr_t" ref="0x7fd35d4a4360"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x7fd35d4a4e70"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_seek_fn" ref="0x7fd35ce2a2c0" loc="350:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="__off64_t" ref="0x7fd35d4f7920"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_seek_fn" ref="0x7fd35ce2a2c0"/></typename>
      </type-function>
    </typedef>
    <typedef name="pid_t" ref="0x7fd35d4be780" loc="98:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x7fd35d4be780"/></typename>
      </type-int>
    </typedef>
    <typedef name="timer_t" ref="0x7fd35d4bad60" loc="103:/usr/include/time.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="timer_t" ref="0x7fd35d4bad60"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="pthread_rwlockattr_t" ref="0x7fd35d492090" loc="228:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:8" alignment="I:8"><union-ref ref="0x7fd35d494830"/>
        <typename><typedef-ref name="pthread_rwlockattr_t" ref="0x7fd35d492090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR0_t" ref="0x7fd35c1b8420" loc="112:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR0_t" ref="0x7fd35c1b8420"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0x7fd35d4fcd10" loc="44:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x7fd35d4fcd10"/></typename>
      </type-int>
    </typedef>
    <typedef name="__dev_t" ref="0x7fd35d4fba30" loc="124:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__dev_t" ref="0x7fd35d4fba30"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x7fd35d556bc0" loc="443:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x7fd35d556bc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pack" ref="0x7fd35c9f37a0" loc="26:includes/packet.h">
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x7fd35c9f4320"/>
        <typename><typedef-ref name="pack" ref="0x7fd35c9f37a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="va_list" ref="0x7fd35ce14b60" loc="79:/usr/include/stdio.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x7fd35d78f530"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x7fd35ce14b60"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="sendInfo" ref="0x7fd35c59f180" loc="16:includes/sendInfo.h">
      <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x7fd35c5a06a0"/>
        <typename><typedef-ref name="sendInfo" ref="0x7fd35c59f180"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__off_t" ref="0x7fd35d4f7560" loc="131:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off_t" ref="0x7fd35d4f7560"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast8_t" ref="0x7fd35d76dc50" loc="90:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x7fd35d76dc50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blkcnt_t" ref="0x7fd35d4f2820" loc="158:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt_t" ref="0x7fd35d4f2820"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x7fd35ca79d80" loc="36:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x7fd35ca7ba10"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x7fd35ca79d80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__syscall_ulong_t" ref="0x7fd35d4eeda0" loc="177:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__syscall_ulong_t" ref="0x7fd35d4eeda0"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_id_t" ref="0x7fd35ca807f0" loc="10:/home/alan/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x7fd35ca807f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0x7fd35d769510" loc="134:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x7fd35d769510"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCapture_t" ref="0x7fd35c1a26a0" loc="241:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1a2280"/>
        <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7fd35c1a26a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR2_t" ref="0x7fd35c1b88a0" loc="114:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1ba020"/>
        <typename><typedef-ref name="Atm128_TCCR2_t" ref="0x7fd35c1b88a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x7fd35ca6fa10" loc="138:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x7fd35ca6f400"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x7fd35ca6fa10"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsblkcnt_t" ref="0x7fd35d4f0090" loc="162:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt_t" ref="0x7fd35d4f0090"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint16_t" ref="0x7fd35d772d20" loc="49:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x7fd35d772d20"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos_t" ref="0x7fd35ce3f2f0" loc="25:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7fd35ce40eb0"/>
        <typename><typedef-ref name="_G_fpos_t" ref="0x7fd35ce3f2f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int8_t" ref="0x7fd35d4b81b0" loc="200:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x7fd35d4b81b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1L_t" ref="0x7fd35c19cdf0" loc="270:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1L_t" ref="0x7fd35c19cdf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CH_t" ref="0x7fd35c196580" loc="287:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CH_t" ref="0x7fd35c196580"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x7fd35ca80020" loc="7:/home/alan/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x7fd35ca80020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timer_t" ref="0x7fd35d4f2020" loc="150:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="__timer_t" ref="0x7fd35d4f2020"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="message_metadata_t" ref="0x7fd35ca6cad0" loc="61:/home/alan/tiny/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:7" alignment="I:1"><union-ref name="message_metadata" ref="0x7fd35ca6c450"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x7fd35ca6cad0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_write_fn" ref="0x7fd35ce2b130" loc="341:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__ssize_t" ref="0x7fd35d4ee500"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
            <typename><typedef-ref name="size_t" ref="0x7fd35d787a40"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_write_fn" ref="0x7fd35ce2b130"/></typename>
      </type-function>
    </typedef>
    <typedef name="fd_mask" ref="0x7fd35d4b00d0" loc="82:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fd_mask" ref="0x7fd35d4b00d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x7fd35d559e60" loc="437:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x7fd35d559e60"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0x7fd35cd71470" loc="10:/home/alan/tiny/tinyos-main/tos/lib/tossim/hashtable.h">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x7fd35cd71080"/>
        <typename><typedef-ref name="hashtable_t" ref="0x7fd35cd71470"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0x7fd35d4bf020" loc="60:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="dev_t" ref="0x7fd35d4bf020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_quad_t" ref="0x7fd35d4fb540" loc="53:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_quad_t" ref="0x7fd35d4fb540"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x7fd35d4b8cb0" loc="202:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x7fd35d4b8cb0"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsfilcnt_t" ref="0x7fd35d4a6a00" loc="243:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fsfilcnt_t" ref="0x7fd35d4a6a00"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x7fd35d76cc50" loc="103:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x7fd35d76cc50"/></typename>
      </type-int>
    </typedef>
    <typedef name="idtype_t" ref="0x7fd35d502a40" loc="55:/usr/include/x86_64-linux-gnu/bits/waitflags.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x7fd35d502020"/>
        <typename><typedef-ref name="idtype_t" ref="0x7fd35d502a40"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__rlim64_t" ref="0x7fd35d4f4200" loc="137:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim64_t" ref="0x7fd35d4f4200"/></typename>
      </type-int>
    </typedef>
    <typedef name="snr_lqi_t" ref="0x7fd35c750020" loc="13:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-tag size="I:24" alignment="I:8"><struct-ref name="snr_lqi" ref="0x7fd35c752570"/>
        <typename><typedef-ref name="snr_lqi_t" ref="0x7fd35c750020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__key_t" ref="0x7fd35d4f3850" loc="144:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__key_t" ref="0x7fd35d4f3850"/></typename>
      </type-int>
    </typedef>
    <typedef name="__useconds_t" ref="0x7fd35d4f4d40" loc="140:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__useconds_t" ref="0x7fd35d4f4d40"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Assr_t" ref="0x7fd35c1b5020" loc="130:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1b6ad0"/>
        <typename><typedef-ref name="Atm128Assr_t" ref="0x7fd35c1b5020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BL_t" ref="0x7fd35c196170" loc="286:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BL_t" ref="0x7fd35c196170"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_read_fn" ref="0x7fd35ce2c020" loc="333:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__ssize_t" ref="0x7fd35d4ee500"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:8" alignment="I:8">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:8" alignment="I:8">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
            <typename><typedef-ref name="size_t" ref="0x7fd35d787a40"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_read_fn" ref="0x7fd35ce2c020"/></typename>
      </type-function>
    </typedef>
    <typedef name="nx_int16_t" ref="0x7fd35d55c9e0" loc="432:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x7fd35d55c9e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__gwchar_t" ref="0x7fd35d767020" loc="34:/usr/include/inttypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gwchar_t" ref="0x7fd35d767020"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1L_t" ref="0x7fd35c1941f0" loc="292:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1L_t" ref="0x7fd35c1941f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="register_t" ref="0x7fd35d4b6800" loc="205:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="register_t" ref="0x7fd35d4b6800"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_header_t" ref="0x7fd35c919e60" loc="78:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="73:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short> I-Frame 6LowPAN interoperability byte *</short>
      </documentation>
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7fd35c91a510"/>
        <typename><typedef-ref name="cc2420_header_t" ref="0x7fd35c919e60"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_barrierattr_t" ref="0x7fd35d491d80" loc="249:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x7fd35d491960"/>
        <typename><typedef-ref name="pthread_barrierattr_t" ref="0x7fd35d491d80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ETIMSK_t" ref="0x7fd35c191020" loc="309:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c192b70"/>
        <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7fd35c191020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerControl_t" ref="0x7fd35c1ba440" loc="108:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <documentation loc="11:/home/alan/tiny/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1ba020"/>
        <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7fd35c1ba440"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0x7fd35d4bd020" loc="109:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ssize_t" ref="0x7fd35d4bd020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__quad_t" ref="0x7fd35d4fb130" loc="52:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__quad_t" ref="0x7fd35d4fb130"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0x7fd35d7721a0" loc="38:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x7fd35d7721a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint64_t" ref="0x7fd35d771530" loc="55:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x7fd35d771530"/></typename>
      </type-int>
    </typedef>
    <typedef name="socket_store_t" ref="0x7fd35c57f9c0" loc="100:lib/interfaces/../../includes/socket.h">
      <type-tag size="I:444" alignment="I:4"><struct-ref name="socket_store_t" ref="0x7fd35c586eb0"/>
        <typename><typedef-ref name="socket_store_t" ref="0x7fd35c57f9c0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_long" ref="0x7fd35d4c2890" loc="36:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_long" ref="0x7fd35d4c2890"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x7fd35c9592f0" loc="94:/home/alan/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x7fd35c9592f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="socket_t" ref="0x7fd35c586b30" loc="52:lib/interfaces/../../includes/socket.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="socket_t" ref="0x7fd35c586b30"/></typename>
      </type-int>
    </typedef>
    <typedef name="_LIB_VERSION_TYPE" ref="0x7fd35ce77280" loc="354:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x7fd35ce78020"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x7fd35ce77280"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x7fd35d554320" loc="444:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x7fd35d554320"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x7fd35d556490" loc="442:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x7fd35d556490"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_t" ref="0x7fd35d4a4020" loc="60:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="pthread_t" ref="0x7fd35d4a4020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blksize_t" ref="0x7fd35d4f2410" loc="153:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blksize_t" ref="0x7fd35d4f2410"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x7fd35d767d00" loc="275:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7fd35d7678e0"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x7fd35d767d00"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nlink_t" ref="0x7fd35d4f71b0" loc="130:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__nlink_t" ref="0x7fd35d4f71b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__id_t" ref="0x7fd35d4f45a0" loc="138:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__id_t" ref="0x7fd35d4f45a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1A_t" ref="0x7fd35c1a8500" loc="205:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1aab40"/>
        <typename><typedef-ref name="Atm128_TCCR1A_t" ref="0x7fd35c1a8500"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least32_t" ref="0x7fd35d76d410" loc="78:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x7fd35d76d410"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mbstate_t" ref="0x7fd35ce40770" loc="94:/usr/include/wchar.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x7fd35ce40350"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x7fd35ce40770"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x7fd35ca6c0d0" loc="57:/home/alan/tiny/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x7fd35ca6ea40"/>
        <typename><typedef-ref name="message_footer_t" ref="0x7fd35ca6c0d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BH_t" ref="0x7fd35c198ce0" loc="285:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BH_t" ref="0x7fd35c198ce0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__WAIT_STATUS" ref="0x7fd35d4e3910" loc="71:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:8"><union-ref ref="0x7fd35d4e3390"/>
        <typename><typedef-ref name="__WAIT_STATUS" ref="0x7fd35d4e3910"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__blkcnt64_t" ref="0x7fd35d4f2c00" loc="159:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt64_t" ref="0x7fd35d4f2c00"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsblkcnt_t" ref="0x7fd35d4a65f0" loc="239:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="fsblkcnt_t" ref="0x7fd35d4a65f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="off_t" ref="0x7fd35d4be3d0" loc="86:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="off_t" ref="0x7fd35d4be3d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_short" ref="0x7fd35d4ff570" loc="31:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__u_short" ref="0x7fd35d4ff570"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0x7fd35d55a830" loc="434:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x7fd35d55a830"/></typename>
      </type-int>
    </typedef>
    <typedef name="quad_t" ref="0x7fd35d4c2c50" loc="37:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="quad_t" ref="0x7fd35d4c2c50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__suseconds_t" ref="0x7fd35d4f3160" loc="141:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__suseconds_t" ref="0x7fd35d4f3160"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrier_t" ref="0x7fd35d491180" loc="243:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:32" alignment="I:8"><union-ref ref="0x7fd35d492ce0"/>
        <typename><typedef-ref name="pthread_barrier_t" ref="0x7fd35d491180"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlClock_t" ref="0x7fd35c19fbb0" loc="259:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c19f790"/>
        <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7fd35c19fbb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int8_t" ref="0x7fd35d4fd130" loc="36:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x7fd35d4fd130"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos64_t" ref="0x7fd35ce3fe30" loc="30:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7fd35ce3fa10"/>
        <typename><typedef-ref name="_G_fpos64_t" ref="0x7fd35ce3fe30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__clockid_t" ref="0x7fd35d4f3c00" loc="147:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clockid_t" ref="0x7fd35d4f3c00"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x7fd35d76b0d0" loc="105:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast16_t" ref="0x7fd35d76b0d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_footer_t" ref="0x7fd35c9175d0" loc="84:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="80:/home/alan/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Packet Footer&#10;</short>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><nx_struct-ref name="cc2420_footer_t" ref="0x7fd35c917250"/>
        <typename><typedef-ref name="cc2420_footer_t" ref="0x7fd35c9175d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3AL_t" ref="0x7fd35c1988d0" loc="284:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AL_t" ref="0x7fd35c1988d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0x7fd35d769910" loc="135:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x7fd35d769910"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x7fd35ca80430" loc="8:/home/alan/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x7fd35ca80430"/></typename>
      </type-int>
    </typedef>
    <typedef name="__clock_t" ref="0x7fd35d4f69c0" loc="135:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__clock_t" ref="0x7fd35d4f69c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x7fd35d559740" loc="436:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x7fd35d559740"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim_t" ref="0x7fd35d4f6dc0" loc="136:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim_t" ref="0x7fd35d4f6dc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_quad_t" ref="0x7fd35d4c1090" loc="38:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_quad_t" ref="0x7fd35d4c1090"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0x7fd35d76c470" loc="93:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast32_t" ref="0x7fd35d76c470"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x7fd35d771d40" loc="66:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x7fd35d771d40"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0x7fd35d4db020" loc="109:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:8"><struct-ref ref="0x7fd35d4dcac0"/>
        <typename><typedef-ref name="ldiv_t" ref="0x7fd35d4db020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x7fd35d4b6290" loc="203:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x7fd35d4b6290"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int16_t" ref="0x7fd35d4b8730" loc="201:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x7fd35d4b8730"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIFR_t" ref="0x7fd35c1ae180" loc="163:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1b0d30"/>
        <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7fd35c1ae180"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TCP" ref="0x7fd35c59a020" loc="52:includes/TCP.h">
      <type-tag size="I:28" alignment="I:4"><struct-ref name="TCP" ref="0x7fd35c59d560"/>
        <typename><typedef-ref name="TCP" ref="0x7fd35c59a020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3A_t" ref="0x7fd35c1a89e0" loc="208:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1aab40"/>
        <typename><typedef-ref name="Atm128_TCCR3A_t" ref="0x7fd35c1a89e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least64_t" ref="0x7fd35d76d840" loc="80:/usr/include/stdint.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x7fd35d76d840"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0x7fd35d4fc130" loc="40:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x7fd35d4fc130"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_rwlock_t" ref="0x7fd35d494020" loc="222:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:56" alignment="I:8"><union-ref ref="0x7fd35d495a10"/>
        <typename><typedef-ref name="pthread_rwlock_t" ref="0x7fd35d494020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x7fd35d022020" loc="29:/usr/include/x86_64-linux-gnu/bits/mathdef.h">
      <type-float cname="double" size="I:8" alignment="I:8">
        <typename><typedef-ref name="double_t" ref="0x7fd35d022020"/></typename>
      </type-float>
    </typedef>
    <typedef name="lqi_dist_t" ref="0x7fd35c752180" loc="7:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:16" alignment="I:8"><struct-ref name="lqi_dist" ref="0x7fd35c755930"/>
        <typename><typedef-ref name="lqi_dist_t" ref="0x7fd35c752180"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fd_mask" ref="0x7fd35d4b3c70" loc="54:/usr/include/x86_64-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fd_mask" ref="0x7fd35d4b3c70"/></typename>
      </type-int>
    </typedef>
    <typedef name="bool" ref="0x7fd35cd9e020" loc="65:/home/alan/tiny/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x7fd35cd9e020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsblkcnt64_t" ref="0x7fd35d4f04c0" loc="163:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt64_t" ref="0x7fd35d4f04c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x7fd35cc80c90" loc="71:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:488" alignment="I:8"><struct-ref name="sim_noise_hash_t" ref="0x7fd35cc81830"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x7fd35cc80c90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__FILE" ref="0x7fd35ce41090" loc="64:/usr/include/stdio.h">
      <type-tag size="I:216" alignment="I:8"><struct-ref name="_IO_FILE" ref="0x7fd35ce437f0"/>
        <typename><typedef-ref name="__FILE" ref="0x7fd35ce41090"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x7fd35ce3c3d0" loc="40:/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stdarg.h">
      <type-pointer size="I:8" alignment="I:8">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x7fd35d78f530"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x7fd35ce3c3d0"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x7fd35d554a50" loc="445:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x7fd35d554a50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__off64_t" ref="0x7fd35d4f7920" loc="132:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off64_t" ref="0x7fd35d4f7920"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3H_t" ref="0x7fd35c1945f0" loc="293:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3H_t" ref="0x7fd35c1945f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt64_t" ref="0x7fd35d4f0d30" loc="167:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt64_t" ref="0x7fd35d4f0d30"/></typename>
      </type-int>
    </typedef>
    <typedef name="RouteEntry" ref="0x7fd35c35d240" loc="8:dataStructures/interfaces/../../includes/entry.h">
      <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="RouteEntry" ref="0x7fd35c3606e0"/>
        <typename><typedef-ref name="RouteEntry" ref="0x7fd35c35d240"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3AH_t" ref="0x7fd35c1984c0" loc="283:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AH_t" ref="0x7fd35c1984c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CL_t" ref="0x7fd35c196990" loc="288:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CL_t" ref="0x7fd35c196990"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x7fd35d772550" loc="40:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x7fd35d772550"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0x7fd35d779e00" loc="37:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x7fd35d779e00"/></typename>
      </type-int>
    </typedef>
    <typedef name="ulong" ref="0x7fd35d4b9450" loc="150:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ulong" ref="0x7fd35d4b9450"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x7fd35d76c850" loc="94:/usr/include/stdint.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x7fd35d76c850"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0x7fd35d4be020" loc="80:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x7fd35d4be020"/></typename>
      </type-int>
    </typedef>
    <typedef name="__syscall_slong_t" ref="0x7fd35d4ee930" loc="175:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__syscall_slong_t" ref="0x7fd35d4ee930"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x7fd35ca6a450" loc="19:/home/alan/tiny/tinyos-main/tos/types/message.h">
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd35ca6ce00"/>
        <typename><typedef-ref name="message_t" ref="0x7fd35ca6a450"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x7fd35d5575b0" loc="438:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x7fd35d5575b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIMSK_t" ref="0x7fd35c1b28f0" loc="146:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1b24d0"/>
        <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7fd35c1b28f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="loff_t" ref="0x7fd35d4c1810" loc="44:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="loff_t" ref="0x7fd35d4c1810"/></typename>
      </type-int>
    </typedef>
    <typedef name="__socklen_t" ref="0x7fd35d4eb1c0" loc="189:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__socklen_t" ref="0x7fd35d4eb1c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="node_t" ref="0x7fd35ccf7590" loc="65:/home/alan/tiny/tinyos-main/tos/lib/tossim/heap.c">
      <type-tag size="I:16" alignment="I:8"><struct-ref name="node" ref="0x7fd35ccf8d40"/>
        <typename><typedef-ref name="node_t" ref="0x7fd35ccf7590"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uid_t" ref="0x7fd35d4fbde0" loc="125:/usr/include/x86_64-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uid_t" ref="0x7fd35d4fbde0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int8_t" ref="0x7fd35d55c2d0" loc="431:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x7fd35d55c2d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x7fd35cc7a2e0" loc="84:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:264" alignment="I:8"><struct-ref name="sim_noise_node_t" ref="0x7fd35cc7e170"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x7fd35cc7a2e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x7fd35d4beb10" loc="104:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x7fd35d4beb10"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutex_t" ref="0x7fd35d49f360" loc="128:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:40" alignment="I:8"><union-ref ref="0x7fd35d4a1e50"/>
        <typename><typedef-ref name="pthread_mutex_t" ref="0x7fd35d49f360"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__itimer_which_t" ref="0x7fd35cc8c600" loc="120:/usr/include/x86_64-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__itimer_which_t" ref="0x7fd35cc8c600"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_cond_t" ref="0x7fd35d49a890" loc="154:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:48" alignment="I:8"><union-ref ref="0x7fd35d49a3c0"/>
        <typename><typedef-ref name="pthread_cond_t" ref="0x7fd35d49a890"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_key_t" ref="0x7fd35d4998b0" loc="164:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_key_t" ref="0x7fd35d4998b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="ino_t" ref="0x7fd35d4c1bc0" loc="48:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="ino_t" ref="0x7fd35d4c1bc0"/></typename>
      </type-int>
    </typedef>
    <typedef name="daddr_t" ref="0x7fd35d4bd3f0" loc="115:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="daddr_t" ref="0x7fd35d4bd3f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timezone_ptr_t" ref="0x7fd35cc92540" loc="61:/usr/include/x86_64-linux-gnu/sys/time.h">
      <documentation loc="32:/home/alan/tiny/tinyos-main/tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-qualified __restrict="">
          <typename><typedef-ref name="__timezone_ptr_t" ref="0x7fd35cc92540"/></typename>
        <type-pointer size="I:8" alignment="I:8">
          <type-tag size="I:8" alignment="I:4"><struct-ref name="timezone" ref="0x7fd35cc949d0"/></type-tag>
        </type-pointer>
      </type-qualified>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x7fd35d553950" loc="447:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x7fd35d553950"/></typename>
      </type-int>
    </typedef>
    <typedef name="key_t" ref="0x7fd35d4bdb70" loc="122:/usr/include/x86_64-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="key_t" ref="0x7fd35d4bdb70"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutexattr_t" ref="0x7fd35d49d020" loc="134:/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x7fd35d49fb20"/>
        <typename><typedef-ref name="pthread_mutexattr_t" ref="0x7fd35d49d020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uart_id_t" ref="0x7fd35ca78200" loc="83:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <documentation loc="71:/home/alan/tiny/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x7fd35ca78200"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCompare_t" ref="0x7fd35c1a8020" loc="202:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd35c1aab40"/>
        <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7fd35c1a8020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1CH_t" ref="0x7fd35c199c50" loc="279:/home/alan/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CH_t" ref="0x7fd35c199c50"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_sillytask_startDoneTask" ref="0x7fd35c756940" loc="96:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:0" size="I:0" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDoneTask" ref="0x7fd35c757700" loc="101:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:1" size="I:4" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDoneTask" ref="0x7fd35c7585c0" loc="145:/home/alan/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0x7fd35c69fd80" loc="67:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:72" alignment="I:8"><struct-ref name="receive_message" scoped="" ref="0x7fd35c69f910"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0x7fd35c69fd80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_read_rssi_task" ref="0x7fd35c753250" loc="528:/home/alan/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-array elements="I:3" size="I:12" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendBufferTask" ref="0x7fd35c1f90d0" loc="82:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_fired" ref="0x7fd35bfe25c0" loc="74:/home/alan/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateFromTimer" ref="0x7fd35bfaea70" loc="71:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="Timer_t" ref="0x7fd35bfa0390" loc="66:/home/alan/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x7fd35bfa1ca0"/>
        <typename><typedef-ref name="Timer_t" scoped="" ref="0x7fd35bfa0390"/></typename>
      </type-tag>
    </typedef>
    <typedef name="queue_entry_t" ref="0x7fd35bef6a40" loc="57:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-tag size="I:8" alignment="I:8"><struct-ref scoped="" ref="0x7fd35bef66d0"/>
        <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x7fd35bef6a40"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_errorTask" ref="0x7fd35beb00d0" loc="169:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_CancelTask" ref="0x7fd35beaf250" loc="126:/home/alan/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="hashmapEntry" ref="0x7fd35bd8b450" loc="23:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-tag size="U:" alignment="U:"><struct-ref name="hashmapEntry" scoped="" ref="0x7fd35bd8dbd0"/>
        <typename><typedef-ref name="hashmapEntry" scoped="" ref="0x7fd35bd8b450"/></typename>
      </type-tag>
    </typedef>
    <typedef name="server" ref="0x7fd35bd24c30" loc="31:lib/modules/TransportObjectP.nc">
      <component-ref qname="TransportObjectP"/>
      <type-tag size="I:1040" alignment="I:2"><struct-ref name="server" scoped="" ref="0x7fd35bd256f0"/>
        <typename><typedef-ref name="server" scoped="" ref="0x7fd35bd24c30"/></typename>
      </type-tag>
    </typedef>
    <typedef name="client" ref="0x7fd35bd21440" loc="40:lib/modules/TransportObjectP.nc">
      <component-ref qname="TransportObjectP"/>
      <type-tag size="I:1034" alignment="I:2"><struct-ref name="client" scoped="" ref="0x7fd35bd22020"/>
        <typename><typedef-ref name="client" scoped="" ref="0x7fd35bd21440"/></typename>
      </type-tag>
    </typedef>
    <typedef name="chatroom" ref="0x7fd35bc6d020" loc="45:lib/modules/ChatP.nc">
      <component-ref qname="ChatP"/>
      <type-tag size="I:400" alignment="I:8"><struct-ref name="chatroom" scoped="" ref="0x7fd35bc706b0"/>
        <typename><typedef-ref name="chatroom" scoped="" ref="0x7fd35bc6d020"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_processCommand" ref="0x7fd35bbc93d0" loc="22:lib/modules/CommandHandlerP.nc">
      <component-ref qname="CommandHandlerP"/>
      <type-array elements="I:14" size="I:56" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
  </typedefs>
</nesc>
